<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1 (Python 3.8.10 on win32)" generated="20241230 08:15:42.580" rpa="false" schemaversion="2">
<suite id="s1" name="Test Suites" source="X:\Tests\Automation\test_suites">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Update database values</arg>
<arg>Set global variables</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Update database values">
<doc>This keyword toggle off the approval management flow at the tenant level in Portal/Admin</doc>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${DisableSQL}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:47.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:47.393" endtime="20241230 08:15:47.393"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.393" endtime="20241230 08:15:47.393"/>
</kw>
<kw name="set global variables">
<doc>This keyword defines some global variables for the entire run.</doc>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${reuseSession}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241230 08:15:47.393" level="INFO">${reuseSession} = True</msg>
<status status="PASS" starttime="20241230 08:15:47.393" endtime="20241230 08:15:47.393"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${smc_sessions}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241230 08:15:47.393" level="INFO">${smc_sessions} = {}</msg>
<status status="PASS" starttime="20241230 08:15:47.393" endtime="20241230 08:15:47.393"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${smc_sessions}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241230 08:15:47.406" level="INFO">${smc_sessions} = {}</msg>
<status status="PASS" starttime="20241230 08:15:47.406" endtime="20241230 08:15:47.406"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${CleanupEnabled}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241230 08:15:47.406" level="INFO">${CleanupEnabled} = True</msg>
<status status="PASS" starttime="20241230 08:15:47.406" endtime="20241230 08:15:47.406"/>
</kw>
<kw name="Get Time" library="BuiltIn">
<var>${GLOBAL_EPOCH}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20241230 08:15:47.406" level="INFO">${GLOBAL_EPOCH} = 1735542947</msg>
<status status="PASS" starttime="20241230 08:15:47.406" endtime="20241230 08:15:47.406"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${GLOBAL_EPOCH}</arg>
<arg>${GLOBAL_EPOCH}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:15:47.410" level="INFO">${GLOBAL_EPOCH} = 1735542947</msg>
<status status="PASS" starttime="20241230 08:15:47.410" endtime="20241230 08:15:47.410"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${JOURNEYS__SESSION__ALIAS}</arg>
<arg>teamfourtytwo</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:15:47.485" level="INFO">${JOURNEYS__SESSION__ALIAS} = teamfourtytwo</msg>
<status status="PASS" starttime="20241230 08:15:47.410" endtime="20241230 08:15:47.485"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bUniqueUserCreation}</arg>
<arg>${use_unique_login}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:15:47.538" level="INFO">${bUniqueUserCreation} = True</msg>
<status status="PASS" starttime="20241230 08:15:47.485" endtime="20241230 08:15:47.538"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bHardCodedUserUsage}</arg>
<arg>${True}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:15:47.604" level="INFO">${bHardCodedUserUsage} = True</msg>
<status status="PASS" starttime="20241230 08:15:47.551" endtime="20241230 08:15:47.604"/>
</kw>
<if>
<branch type="IF" condition="${DisableSQL}">
<kw name="set global variables without sql">
<doc>This keyword defines some global variables for the entire run if sql is disabled</doc>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OrganisationId}</arg>
<arg>1</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241230 08:15:47.664" level="INFO">${OrganisationId} = 1</msg>
<status status="PASS" starttime="20241230 08:15:47.604" endtime="20241230 08:15:47.664"/>
</kw>
<kw name="Verify FeatureKeys no sql">
<doc>Get and set all Feature toggles here that are triggered by sanity tests (no sql access)</doc>
<kw name="Get Feature Toggle Value">
<var>${SettingValue}</var>
<arg>JOURNEY_ASSET_TREE_SELECTOR</arg>
<kw name="Get Variable Value" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>${AllFeatureToggles}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241230 08:15:47.780" level="INFO">${FeatureToggles} = None</msg>
<status status="PASS" starttime="20241230 08:15:47.668" endtime="20241230 08:15:47.780"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>'${FeatureToggles}' == 'None'</arg>
<arg>Get Feature Toggle variable</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${FeatureToggles}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Feature Toggle variable" library="leftnavigationbar">
<if>
<branch type="IF" condition="${Login}">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Login_ES</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Login_ES" library="loginpage">
<doc>This login function opens immediately the ES application
Gdu: Added optional parameters to enable addblocker both on headless and visible browser
set Addblockname (ie ChromeAdBlock4_10.crx) when calling Login_ES to enable an addblocker
Addblocker crx must be present in /resources/extensions/
This is atm only enabled when bReuseLogin is enabled as well so tests must be in 04 or 13 folder</doc>
<kw name="Reuse session check" library="loginpage">
<var>${bReuseLogin}</var>
<arg>${reuseSession}</arg>
<doc>Does some checks to see if cookies can be reused or not and returns TRUE if ok, False if not</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${DisableSQL}</arg>
<arg>return from keyword</arg>
<arg>${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${False}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:15:47.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:47.813" endtime="20241230 08:15:47.813"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.813" endtime="20241230 08:15:47.813"/>
</kw>
<msg timestamp="20241230 08:15:47.813" level="INFO">${bReuseLogin} = False</msg>
<status status="PASS" starttime="20241230 08:15:47.809" endtime="20241230 08:15:47.813"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OrganisationId}' == '1'</arg>
<arg>Login</arg>
<arg>LoginUrl=${URL}/ES/</arg>
<arg>reuseSession=${reuseSession}</arg>
<arg>bReuseLogin=${bReuseLogin}</arg>
<arg>Addblockname=${Addblockname}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>LoginUrl=${URL}/ES/</arg>
<arg>reuseSession=${reuseSession}</arg>
<arg>bReuseLogin=${bReuseLogin}</arg>
<arg>Addblockname=${Addblockname}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Login" library="loginpage">
<arg>LoginUrl=${URL}/ES/</arg>
<arg>reuseSession=${reuseSession}</arg>
<arg>bReuseLogin=${bReuseLogin}</arg>
<arg>Addblockname=${Addblockname}</arg>
<doc>This function is used to effectivaly Login ES and expects it to work.</doc>
<kw name="Set Log Level" library="BuiltIn">
<arg>NONE</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<status status="PASS" starttime="20241230 08:15:47.843" endtime="20241230 08:15:47.843"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${userName}</var>
<arg>${DisableSQL}</arg>
<arg>Get Username for disabled SQL</arg>
<arg>${userName}</arg>
<arg>ELSE</arg>
<arg>Get Username for test suite agent</arg>
<arg>${userName}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Username for disabled SQL" library="loginpage">
<arg>${userName}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${userName}'=='${EMPTY}'</arg>
<arg>return from keyword</arg>
<arg>${userNameText}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${userNameText}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20241230 08:15:47.861" endtime="20241230 08:15:47.861"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.846" endtime="20241230 08:15:47.861"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.843" endtime="20241230 08:15:47.861"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.843" endtime="20241230 08:15:47.861"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20241230 08:15:47.861" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:15:47.861" endtime="20241230 08:15:47.861"/>
</kw>
<kw name="Has Stored Smc Cookies" library="cookies">
<var>${has_cookies}</var>
<arg>${userName}</arg>
<msg timestamp="20241230 08:15:47.874" level="INFO">${has_cookies} = False</msg>
<status status="PASS" starttime="20241230 08:15:47.874" endtime="20241230 08:15:47.874"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${has_cookies}</var>
<arg>${reuseSession} == ${true}</arg>
<arg>${has_cookies}</arg>
<arg>${false}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:15:47.874" level="INFO">${has_cookies} = False</msg>
<status status="PASS" starttime="20241230 08:15:47.874" endtime="20241230 08:15:47.874"/>
</kw>
<kw name="Register Keyword To Run On Failure" library="SeleniumLibrary">
<arg>NONE</arg>
<doc>Sets the keyword to execute, when a SeleniumLibrary keyword fails.</doc>
<msg timestamp="20241230 08:15:47.874" level="INFO">No keyword will be run on failure.</msg>
<status status="PASS" starttime="20241230 08:15:47.874" endtime="20241230 08:15:47.874"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${screenshot_folder}</var>
<arg>${OUTPUT DIR}${/}screenshots${/}${SUITE NAME}${/}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:47.874" level="INFO">${screenshot_folder} = X:\Tests\Automation\screenshots\Test Suites\</msg>
<status status="PASS" starttime="20241230 08:15:47.874" endtime="20241230 08:15:47.874"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${Status}</var>
<var>${Directory}</var>
<arg>Set screenshot directory</arg>
<arg>${screenshot_folder}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>${screenshot_folder}</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20241230 08:15:47.874" endtime="20241230 08:15:47.874"/>
</kw>
<msg timestamp="20241230 08:15:47.874" level="INFO">${Status} = PASS</msg>
<msg timestamp="20241230 08:15:47.874" level="INFO">${Directory} = None</msg>
<status status="PASS" starttime="20241230 08:15:47.874" endtime="20241230 08:15:47.874"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>log</arg>
<arg>Failed to set screenshot dir to '${screenshot_folder}'</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:47.882" endtime="20241230 08:15:47.882"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>Login_RestoreCookie_DB</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${Addblockname}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:47.882" endtime="20241230 08:15:47.882"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>Verify Login and retry if not</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:47.882" endtime="20241230 08:15:47.882"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>Execute Javascript</arg>
<arg>${SCRIPT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:47.882" endtime="20241230 08:15:47.882"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:47.882" endtime="20241230 08:15:47.882"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${has_cookies} == ${false}</arg>
<arg>Login_ThroughForm</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${password}</arg>
<arg>${reuseSession}</arg>
<arg>ELSE</arg>
<arg>Login_RestoreCookie</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Login_ThroughForm" library="loginpage">
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${password}</arg>
<arg>${reuseSession}</arg>
<doc>This function is uses to effectivaly Login ES, via the login form and expects it to work.</doc>
<kw name="Open Browser, Fill in Login details and click on LoginButton" library="loginpage">
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userNameText}</arg>
<arg>${passwordText}</arg>
<doc>This function is usesd to effectivaly open the browser, fill in the text &amp; click on the button.
This function does not check any result, here you have other functions such as login, login_invalid_user...</doc>
<kw name="Get Variable Value" library="BuiltIn">
<var>${chckBrowserStack}</var>
<arg>${BrowserStack}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241230 08:15:47.990" level="INFO">${chckBrowserStack} = None</msg>
<status status="PASS" starttime="20241230 08:15:47.890" endtime="20241230 08:15:47.990"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${BrowserStackCheck}</var>
<arg>"""${chckBrowserStack}""" != 'None'</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:15:47.990" level="INFO">${BrowserStackCheck} = False</msg>
<status status="PASS" starttime="20241230 08:15:47.990" endtime="20241230 08:15:47.990"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${Browser}' == 'ChromeHeadless' or '${Browser}' == 'Chrome'</arg>
<arg>Open Chrome Browser to Page</arg>
<arg>${LoginUrl}</arg>
<arg>ELSE IF</arg>
<arg>${BrowserStackCheck}</arg>
<arg>Open Browser</arg>
<arg>url=${LoginUrl}</arg>
<arg>browser=${Browser}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=browser:${Browser},os:${OS},os_version:${OS_VERSION},resolution:1920x1080</arg>
<arg>ELSE</arg>
<arg>run keywords</arg>
<arg>Open Browser</arg>
<arg>${LoginUrl}</arg>
<arg>${Browser}</arg>
<arg>AND</arg>
<arg>maximize browser window</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Open Browser</arg>
<arg>${LoginUrl}</arg>
<arg>${Browser}</arg>
<arg>AND</arg>
<arg>maximize browser window</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${LoginUrl}</arg>
<arg>${Browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20241230 08:15:47.990" level="INFO">Opening browser 'chrome' to base url 'https://test.slgnt.io/Portal/ES/'.</msg>
<status status="PASS" starttime="20241230 08:15:47.990" endtime="20241230 08:15:51.922"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20241230 08:15:51.922" endtime="20241230 08:15:51.961"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.990" endtime="20241230 08:15:51.961"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.990" endtime="20241230 08:15:51.961"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Title Should Be</arg>
<arg>${title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${title}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20241230 08:15:51.969" level="INFO">Page title is 'Logon'.</msg>
<status status="PASS" starttime="20241230 08:15:51.961" endtime="20241230 08:15:51.969"/>
</kw>
<msg timestamp="20241230 08:15:51.969" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:15:51.961" endtime="20241230 08:15:51.969"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:51.977"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>FAIL</arg>
<arg>Title did not match expected: ${title}</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:51.977"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${userName}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:51.977" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:51.977"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:52.049"/>
</kw>
<msg timestamp="20241230 08:15:52.049" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:52.049"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:52.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:52.049" endtime="20241230 08:15:52.049"/>
</kw>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:52.049"/>
</iter>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:52.049"/>
</for>
<status status="PASS" starttime="20241230 08:15:51.977" endtime="20241230 08:15:52.049"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${userName}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:15:52.057" endtime="20241230 08:15:52.094"/>
</kw>
<msg timestamp="20241230 08:15:52.094" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.057" endtime="20241230 08:15:52.094"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:52.094" endtime="20241230 08:15:52.094"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:15:52.094" level="INFO">Clicking element '//input[@sg-qa-id="Username"]'.</msg>
<status status="PASS" starttime="20241230 08:15:52.094" endtime="20241230 08:15:52.203"/>
</kw>
<msg timestamp="20241230 08:15:52.203" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.094" endtime="20241230 08:15:52.203"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:52.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:52.203" endtime="20241230 08:15:52.203"/>
</kw>
<status status="PASS" starttime="20241230 08:15:52.049" endtime="20241230 08:15:52.203"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${userName}</arg>
<arg>${userNameValue}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20241230 08:15:52.203" level="INFO">Typing text 'QA_automation_admin' into text field '//input[@sg-qa-id="Username"]'.</msg>
<status status="PASS" starttime="20241230 08:15:52.203" endtime="20241230 08:15:52.323"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${password}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:52.323" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:15:52.323" endtime="20241230 08:15:52.323"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:15:52.323" endtime="20241230 08:15:52.352"/>
</kw>
<msg timestamp="20241230 08:15:52.352" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.323" endtime="20241230 08:15:52.352"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:52.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:52.352" endtime="20241230 08:15:52.352"/>
</kw>
<status status="PASS" starttime="20241230 08:15:52.323" endtime="20241230 08:15:52.352"/>
</iter>
<status status="PASS" starttime="20241230 08:15:52.323" endtime="20241230 08:15:52.352"/>
</for>
<status status="PASS" starttime="20241230 08:15:52.323" endtime="20241230 08:15:52.352"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${password}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:15:52.365" endtime="20241230 08:15:52.397"/>
</kw>
<msg timestamp="20241230 08:15:52.397" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.365" endtime="20241230 08:15:52.397"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:52.405" endtime="20241230 08:15:52.405"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:15:52.405" level="INFO">Clicking element '//input[@sg-qa-id="Password"]'.</msg>
<status status="PASS" starttime="20241230 08:15:52.405" endtime="20241230 08:15:52.481"/>
</kw>
<msg timestamp="20241230 08:15:52.481" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.405" endtime="20241230 08:15:52.481"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:52.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:52.481" endtime="20241230 08:15:52.481"/>
</kw>
<status status="PASS" starttime="20241230 08:15:52.365" endtime="20241230 08:15:52.481"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${password}</arg>
<arg>${passwordValue}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20241230 08:15:52.481" level="INFO">Typing password into text field '//input[@sg-qa-id="Password"]'.</msg>
<msg timestamp="20241230 08:15:52.513" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20241230 08:15:52.565" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:15:52.481" endtime="20241230 08:15:52.565"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${LoginButton}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:52.565" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:15:52.565" endtime="20241230 08:15:52.565"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:15:52.565" endtime="20241230 08:15:52.594"/>
</kw>
<msg timestamp="20241230 08:15:52.594" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.565" endtime="20241230 08:15:52.594"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:52.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:52.594" endtime="20241230 08:15:52.594"/>
</kw>
<status status="PASS" starttime="20241230 08:15:52.565" endtime="20241230 08:15:52.594"/>
</iter>
<status status="PASS" starttime="20241230 08:15:52.565" endtime="20241230 08:15:52.594"/>
</for>
<status status="PASS" starttime="20241230 08:15:52.565" endtime="20241230 08:15:52.594"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${LoginButton}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:15:52.607" endtime="20241230 08:15:52.639"/>
</kw>
<msg timestamp="20241230 08:15:52.639" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.607" endtime="20241230 08:15:52.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:52.639" endtime="20241230 08:15:52.639"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:15:52.643" level="INFO">Clicking element '//button[@sg-qa-id='split-button-login'][not(contains(@class,"sg-split-button--disabled"))]'.</msg>
<status status="PASS" starttime="20241230 08:15:52.643" endtime="20241230 08:15:55.275"/>
</kw>
<msg timestamp="20241230 08:15:55.275" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:52.643" endtime="20241230 08:15:55.275"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:55.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:55.275" endtime="20241230 08:15:55.275"/>
</kw>
<status status="PASS" starttime="20241230 08:15:52.594" endtime="20241230 08:15:55.275"/>
</kw>
<kw name="Wait For Page Readystate" library="generalfunctions">
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<msg timestamp="20241230 08:15:55.292" level="INFO">Waiting for page to finish loading
Load Complete.</msg>
<status status="PASS" starttime="20241230 08:15:55.275" endtime="20241230 08:15:55.292"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${result}</var>
<arg>Verify if accountDropdownMenu is loaded</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Verify if accountDropdownMenu is loaded" library="topheaderbar">
<doc>This keyword is used verify if the Home page is loaded. by checking if the user is displayed.
Used after logon</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${DropdownLoaded}</var>
<arg>Wait Until With For Loop</arg>
<arg>${homePageIdentifier}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${homePageIdentifier}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:55.292" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.292"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</kw>
<msg timestamp="20241230 08:15:55.325" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:55.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:55.325" endtime="20241230 08:15:55.325"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</iter>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</for>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</kw>
<msg timestamp="20241230 08:15:55.325" level="INFO">${DropdownLoaded} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${DropdownLoaded}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:55.325" endtime="20241230 08:15:55.325"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${DropdownLoaded}</arg>
<arg>Fail</arg>
<arg>HomePage is not available</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:55.325" endtime="20241230 08:15:55.325"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</kw>
<msg timestamp="20241230 08:15:55.325" level="INFO">${status} = PASS</msg>
<msg timestamp="20241230 08:15:55.325" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20241230 08:15:55.292" endtime="20241230 08:15:55.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>Use Fallback Login</arg>
<arg>${LoginUrl}</arg>
<arg>${userNameValue}</arg>
<arg>${passwordValue}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:55.325" endtime="20241230 08:15:55.325"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.890" endtime="20241230 08:15:55.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${reuseSession} == ${true}</arg>
<arg>Login_StoreCookie</arg>
<arg>${userNameText}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Login_StoreCookie" library="loginpage">
<arg>${userNameText}</arg>
<doc>This function associate and stores the given username with its cookies, for next reuse</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Store smc cookies</arg>
<arg>${userNameText}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Store Smc Cookies" library="cookies">
<arg>${userNameText}</arg>
<status status="PASS" starttime="20241230 08:15:55.341" endtime="20241230 08:15:55.353"/>
</kw>
<msg timestamp="20241230 08:15:55.353" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.337" endtime="20241230 08:15:55.353"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>log</arg>
<arg>Login StoreCookie failed</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:55.353" endtime="20241230 08:15:55.353"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.337" endtime="20241230 08:15:55.353"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.337" endtime="20241230 08:15:55.353"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.882" endtime="20241230 08:15:55.353"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.882" endtime="20241230 08:15:55.353"/>
</kw>
<kw name="Get Title" library="SeleniumLibrary">
<var>${title}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20241230 08:15:55.361" level="INFO">${title} = Engage</msg>
<status status="PASS" starttime="20241230 08:15:55.353" endtime="20241230 08:15:55.361"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${title}'=='Logon'</arg>
<arg>close browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:55.361" endtime="20241230 08:15:55.361"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${title}'=='Logon'</arg>
<arg>Login_ThroughForm</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${password}</arg>
<arg>${reuseSession}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:55.361" endtime="20241230 08:15:55.361"/>
</kw>
<kw name="Verify if logged in" library="loginpage">
<doc>Checks if we are not still on the login page, then checks if the accountdropdown is loaded
to make sure were actually still in SMC</doc>
<kw name="Get Title" library="SeleniumLibrary">
<var>${title}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20241230 08:15:55.372" level="INFO">${title} = Engage</msg>
<status status="PASS" starttime="20241230 08:15:55.369" endtime="20241230 08:15:55.372"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>should not be equal</arg>
<arg>${title}</arg>
<arg>Logon</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${title}</arg>
<arg>Logon</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.372"/>
</kw>
<msg timestamp="20241230 08:15:55.372" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.372"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.372"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>FAIL</arg>
<arg>Stil on logon page after login actions</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.372"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${homePageIdentifier}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:55.372" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.372"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:15:55.385" endtime="20241230 08:15:55.405"/>
</kw>
<msg timestamp="20241230 08:15:55.405" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.385" endtime="20241230 08:15:55.405"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:55.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:55.405" endtime="20241230 08:15:55.405"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.405"/>
</iter>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.405"/>
</for>
<status status="PASS" starttime="20241230 08:15:55.372" endtime="20241230 08:15:55.405"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.369" endtime="20241230 08:15:55.405"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>${SCRIPT}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20241230 08:15:55.405" level="INFO">Executing JavaScript:
document.body.style.zoom = "100%"
Without any arguments.</msg>
<status status="PASS" starttime="20241230 08:15:55.405" endtime="20241230 08:15:55.418"/>
</kw>
<kw name="wait until pageloading spinner appears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:55.418" level="INFO">${xpath} = //div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:15:55.418" endtime="20241230 08:15:55.418"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:55.434" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:55.418" endtime="20241230 08:15:55.434"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:55.434" endtime="20241230 08:15:55.434"/>
</kw>
<kw name="Check Element Exists With For Loop and Timeout" library="general_functions">
<var>${status}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Loops with timout of Timeout untill either element is found or max Range is reached
returns True if element was found, False if not, calling function should trigger error if necessary
Please note both the visible check and count can take 0.5 seconds so the entire loop time is around 1.5 seconds</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:55.442" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.434" endtime="20241230 08:15:55.442"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${LastIndex}</var>
<arg>${Range}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:15:55.442" level="INFO">${LastIndex} = 19</msg>
<status status="PASS" starttime="20241230 08:15:55.442" endtime="20241230 08:15:55.442"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Range}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:55.442" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.442" endtime="20241230 08:15:55.442"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:55.453" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:15:55.442" endtime="20241230 08:15:55.453"/>
</kw>
<msg timestamp="20241230 08:15:55.453" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:15:55.442" endtime="20241230 08:15:55.453"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:55.453" endtime="20241230 08:15:55.453"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:55.469" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:55.453" endtime="20241230 08:15:55.469"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:55.469" endtime="20241230 08:15:55.469"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:55.469" endtime="20241230 08:15:55.469"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:15:55.975" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:55.469" endtime="20241230 08:15:55.975"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:55.975" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:15:55.975" endtime="20241230 08:15:55.975"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.442" endtime="20241230 08:15:55.975"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:55.975" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.975" endtime="20241230 08:15:55.975"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:56.004" level="INFO">Element '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' is displayed.</msg>
<status status="PASS" starttime="20241230 08:15:55.975" endtime="20241230 08:15:56.004"/>
</kw>
<msg timestamp="20241230 08:15:56.004" level="INFO">${EleVisibleStatus} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.975" endtime="20241230 08:15:56.004"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:56.004" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:15:56.004" endtime="20241230 08:15:56.004"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.975" endtime="20241230 08:15:56.004"/>
</iter>
<status status="PASS" starttime="20241230 08:15:55.442" endtime="20241230 08:15:56.004"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bVisible}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:15:56.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:56.004" endtime="20241230 08:15:56.004"/>
</kw>
<msg timestamp="20241230 08:15:56.004" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:15:55.434" endtime="20241230 08:15:56.004"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>log</arg>
<arg>Pageloading spinner not found after timeout, check if necessary</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:15:56.004" endtime="20241230 08:15:56.015"/>
</kw>
<status status="PASS" starttime="20241230 08:15:55.418" endtime="20241230 08:15:56.015"/>
</kw>
<kw name="wait until pageloading spinner dissapears" library="leftnavigationbar">
<arg>NrOfLoops=240</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:56.015" level="INFO">${xpath} = //div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:15:56.015" endtime="20241230 08:15:56.015"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:56.036" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:15:56.021" endtime="20241230 08:15:56.036"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:56.036" endtime="20241230 08:15:56.036"/>
</kw>
<for flavor="IN RANGE">
<var>${Index}</var>
<value>0</value>
<value>${NrOfLoops}</value>
<iter>
<var name="${Index}">0</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:56.036" endtime="20241230 08:15:56.036"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:15:56.549" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:56.036" endtime="20241230 08:15:56.549"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:56.552" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:56.549" endtime="20241230 08:15:56.552"/>
</kw>
<status status="PASS" starttime="20241230 08:15:56.036" endtime="20241230 08:15:56.552"/>
</iter>
<iter>
<var name="${Index}">1</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:15:56.552" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:15:56.552" endtime="20241230 08:15:56.565"/>
</kw>
<status status="PASS" starttime="20241230 08:15:56.552" endtime="20241230 08:15:56.565"/>
</iter>
<status status="PASS" starttime="20241230 08:15:56.036" endtime="20241230 08:15:56.565"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:15:56.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:56.568" endtime="20241230 08:15:56.568"/>
</kw>
<status status="PASS" starttime="20241230 08:15:56.565" endtime="20241230 08:15:56.568"/>
</kw>
<msg timestamp="20241230 08:15:56.568" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:15:56.021" endtime="20241230 08:15:56.568"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:15:56.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:15:56.568" endtime="20241230 08:15:56.568"/>
</kw>
<status status="PASS" starttime="20241230 08:15:56.015" endtime="20241230 08:15:56.568"/>
</kw>
<kw name="wait until general grid loading spinner appears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${LoadingSpinner_Dashboard}|//div[@class="k-loading-image"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:56.568" level="INFO">${xpath} = //div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]</msg>
<status status="PASS" starttime="20241230 08:15:56.568" endtime="20241230 08:15:56.568"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:56.584" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:56.568" endtime="20241230 08:15:56.584"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:56.584" endtime="20241230 08:15:56.584"/>
</kw>
<kw name="Check Element Exists With For Loop and Timeout" library="general_functions">
<var>${Status}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Loops with timout of Timeout untill either element is found or max Range is reached
returns True if element was found, False if not, calling function should trigger error if necessary
Please note both the visible check and count can take 0.5 seconds so the entire loop time is around 1.5 seconds</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:56.584" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:56.584" endtime="20241230 08:15:56.584"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${LastIndex}</var>
<arg>${Range}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:15:56.584" level="INFO">${LastIndex} = 9</msg>
<status status="PASS" starttime="20241230 08:15:56.584" endtime="20241230 08:15:56.584"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Range}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:56.597" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:56.597" endtime="20241230 08:15:56.597"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:56.601" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:15:56.597" endtime="20241230 08:15:56.601"/>
</kw>
<msg timestamp="20241230 08:15:56.601" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:15:56.597" endtime="20241230 08:15:56.613"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:56.613" endtime="20241230 08:15:56.613"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:56.617" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:56.613" endtime="20241230 08:15:56.617"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:56.617" endtime="20241230 08:15:56.617"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:56.629" endtime="20241230 08:15:56.629"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:15:57.130" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:56.629" endtime="20241230 08:15:57.130"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:57.130" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:15:57.130" endtime="20241230 08:15:57.130"/>
</kw>
<status status="PASS" starttime="20241230 08:15:56.584" endtime="20241230 08:15:57.130"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:57.130" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:57.130" endtime="20241230 08:15:57.130"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:57.146" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:15:57.134" endtime="20241230 08:15:57.146"/>
</kw>
<msg timestamp="20241230 08:15:57.146" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:15:57.134" endtime="20241230 08:15:57.146"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:57.146" endtime="20241230 08:15:57.150"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:57.150" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:57.150" endtime="20241230 08:15:57.150"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:57.150" endtime="20241230 08:15:57.162"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:57.162" endtime="20241230 08:15:57.162"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:15:57.663" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:57.162" endtime="20241230 08:15:57.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:57.663" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:15:57.663" endtime="20241230 08:15:57.663"/>
</kw>
<status status="PASS" starttime="20241230 08:15:57.130" endtime="20241230 08:15:57.663"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:57.667" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:57.667" endtime="20241230 08:15:57.667"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:57.699" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:15:57.667" endtime="20241230 08:15:57.699"/>
</kw>
<msg timestamp="20241230 08:15:57.699" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:15:57.667" endtime="20241230 08:15:57.699"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:57.699" endtime="20241230 08:15:57.699"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:57.716" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:57.699" endtime="20241230 08:15:57.716"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:57.716" endtime="20241230 08:15:57.716"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:57.716" endtime="20241230 08:15:57.716"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:15:58.228" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:57.716" endtime="20241230 08:15:58.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:58.228" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:15:58.228" endtime="20241230 08:15:58.228"/>
</kw>
<status status="PASS" starttime="20241230 08:15:57.663" endtime="20241230 08:15:58.228"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:58.233" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:58.233" endtime="20241230 08:15:58.233"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:58.245" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:15:58.233" endtime="20241230 08:15:58.245"/>
</kw>
<msg timestamp="20241230 08:15:58.248" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:15:58.233" endtime="20241230 08:15:58.248"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:58.248" endtime="20241230 08:15:58.248"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:58.248" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:58.248" endtime="20241230 08:15:58.248"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:58.261" endtime="20241230 08:15:58.261"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:58.261" endtime="20241230 08:15:58.261"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:15:58.778" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:58.264" endtime="20241230 08:15:58.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:58.778" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:15:58.778" endtime="20241230 08:15:58.778"/>
</kw>
<status status="PASS" starttime="20241230 08:15:58.228" endtime="20241230 08:15:58.778"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:58.778" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:58.778" endtime="20241230 08:15:58.778"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:59.428" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:15:58.778" endtime="20241230 08:15:59.428"/>
</kw>
<msg timestamp="20241230 08:15:59.428" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:15:58.778" endtime="20241230 08:15:59.428"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:59.428" endtime="20241230 08:15:59.428"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:59.443" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:59.428" endtime="20241230 08:15:59.443"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:59.443" endtime="20241230 08:15:59.443"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:59.443" endtime="20241230 08:15:59.443"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:15:59.945" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:59.443" endtime="20241230 08:15:59.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:59.945" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:15:59.945" endtime="20241230 08:15:59.945"/>
</kw>
<status status="PASS" starttime="20241230 08:15:58.778" endtime="20241230 08:15:59.945"/>
</iter>
<iter>
<var name="${INDEX}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:15:59.945" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:15:59.945" endtime="20241230 08:15:59.945"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:15:59.965" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:15:59.945" endtime="20241230 08:15:59.965"/>
</kw>
<msg timestamp="20241230 08:15:59.965" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:15:59.945" endtime="20241230 08:15:59.965"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:59.965" endtime="20241230 08:15:59.965"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:15:59.972" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:15:59.965" endtime="20241230 08:15:59.972"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:59.980" endtime="20241230 08:15:59.980"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:15:59.980" endtime="20241230 08:15:59.980"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:00.490" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:15:59.980" endtime="20241230 08:16:00.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:00.490" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:00.490" endtime="20241230 08:16:00.490"/>
</kw>
<status status="PASS" starttime="20241230 08:15:59.945" endtime="20241230 08:16:00.490"/>
</iter>
<iter>
<var name="${INDEX}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:00.493" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:00.493" endtime="20241230 08:16:00.493"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:00.508" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:00.493" endtime="20241230 08:16:00.508"/>
</kw>
<msg timestamp="20241230 08:16:00.508" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:00.493" endtime="20241230 08:16:00.508"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:00.510" endtime="20241230 08:16:00.510"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:00.522" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:00.510" endtime="20241230 08:16:00.522"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:00.522" endtime="20241230 08:16:00.522"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:00.522" endtime="20241230 08:16:00.522"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:01.039" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:00.526" endtime="20241230 08:16:01.039"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.039" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.039" endtime="20241230 08:16:01.039"/>
</kw>
<status status="PASS" starttime="20241230 08:16:00.490" endtime="20241230 08:16:01.039"/>
</iter>
<iter>
<var name="${INDEX}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.042" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.042" endtime="20241230 08:16:01.042"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:01.058" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:01.042" endtime="20241230 08:16:01.058"/>
</kw>
<msg timestamp="20241230 08:16:01.058" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.042" endtime="20241230 08:16:01.058"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.058" endtime="20241230 08:16:01.058"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:01.071" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:01.058" endtime="20241230 08:16:01.071"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.075" endtime="20241230 08:16:01.075"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.075" endtime="20241230 08:16:01.075"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:01.588" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:01.075" endtime="20241230 08:16:01.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.588" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.588" endtime="20241230 08:16:01.588"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.039" endtime="20241230 08:16:01.588"/>
</iter>
<iter>
<var name="${INDEX}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.592" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.592" endtime="20241230 08:16:01.592"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:01.604" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:01.592" endtime="20241230 08:16:01.604"/>
</kw>
<msg timestamp="20241230 08:16:01.604" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.592" endtime="20241230 08:16:01.604"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.608" endtime="20241230 08:16:01.608"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:01.608" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:01.608" endtime="20241230 08:16:01.608"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.621" endtime="20241230 08:16:01.621"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:01.624" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:01.621" endtime="20241230 08:16:01.624"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.588" endtime="20241230 08:16:01.624"/>
</iter>
<status status="PASS" starttime="20241230 08:15:56.584" endtime="20241230 08:16:01.624"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bVisible}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:01.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.624" endtime="20241230 08:16:01.624"/>
</kw>
<msg timestamp="20241230 08:16:01.624" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:56.584" endtime="20241230 08:16:01.624"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${Status}</arg>
<arg>log</arg>
<arg>Grid loading spinner not shown after timeout, check if necessary</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:01.624" endtime="20241230 08:16:01.624"/>
</kw>
<status status="PASS" starttime="20241230 08:15:56.568" endtime="20241230 08:16:01.624"/>
</kw>
<kw name="Wait Until General Grid Loading Spinner Disappears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${LoadingSpinner_Dashboard}|//div[@class="k-loading-image"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.624" level="INFO">${xpath} = //div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]</msg>
<status status="PASS" starttime="20241230 08:16:01.624" endtime="20241230 08:16:01.624"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:01.640" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:01.624" endtime="20241230 08:16:01.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:01.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.640" endtime="20241230 08:16:01.640"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.640" endtime="20241230 08:16:01.640"/>
</kw>
<msg timestamp="20241230 08:16:01.640" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.624" endtime="20241230 08:16:01.640"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:01.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.640" endtime="20241230 08:16:01.640"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.624" endtime="20241230 08:16:01.640"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.813" endtime="20241230 08:16:01.640"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.813" endtime="20241230 08:16:01.640"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.780" endtime="20241230 08:16:01.640"/>
</kw>
<msg timestamp="20241230 08:16:01.640" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:15:47.780" endtime="20241230 08:16:01.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log</arg>
<arg>Unable to get feature toggles</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.653" endtime="20241230 08:16:01.653"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>return from keyword</arg>
<arg>NOTHING</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.653" endtime="20241230 08:16:01.653"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Switch Organizations</arg>
<arg>${Organization}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Switch Organizations" library="topheaderbar">
<arg>${Organization}</arg>
<doc>This keyword is used to switch to provided organization which is passed as argument from dashboard page
Arguments:-Organization to which you want to switch</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${CurrentUrl}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20241230 08:16:01.656" level="INFO">${CurrentUrl} = https://test.slgnt.io/Portal/ES/b8e41383-516b-4403-a591-d97290c8ea7b/library/repository</msg>
<status status="PASS" starttime="20241230 08:16:01.656" endtime="20241230 08:16:01.656"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCompare}</var>
<arg>${CurrentUrl}</arg>
<arg>/Portal/ES</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:01.656" level="INFO">${bCompare} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.656" endtime="20241230 08:16:01.656"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>Go To</arg>
<arg>${URL}/ES</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:01.656" endtime="20241230 08:16:01.656"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>wait for page readystate</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:01.656" endtime="20241230 08:16:01.656"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>//div[@id="contextDropdownMenu"]/span[@class="text"]</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.672" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.669" endtime="20241230 08:16:01.672"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:01.672" endtime="20241230 08:16:01.701"/>
</kw>
<msg timestamp="20241230 08:16:01.701" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.672" endtime="20241230 08:16:01.701"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:01.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.701" endtime="20241230 08:16:01.705"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.672" endtime="20241230 08:16:01.705"/>
</iter>
<status status="PASS" starttime="20241230 08:16:01.672" endtime="20241230 08:16:01.705"/>
</for>
<status status="PASS" starttime="20241230 08:16:01.669" endtime="20241230 08:16:01.705"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${CurrentOrg}</var>
<arg>//div[@id="contextDropdownMenu"]/span[@class="text"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:01.734" level="INFO">${CurrentOrg} = Site_TestSSO_Universe1</msg>
<status status="PASS" starttime="20241230 08:16:01.705" endtime="20241230 08:16:01.734"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCompare}</var>
<arg>${CurrentOrg}</arg>
<arg>${OrganizationName}</arg>
<arg>No</arg>
<arg>No</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:01.737" level="INFO">${bCompare} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.737" endtime="20241230 08:16:01.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>log</arg>
<arg>No need to switch organisation ${OrganizationName} as its already selected</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.737" endtime="20241230 08:16:01.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.737" endtime="20241230 08:16:01.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Switching from organisation ${CurrentOrg} to ${OrganizationName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:01.737" level="INFO">Switching from organisation Site_TestSSO_Universe1 to QA_automatic_testing</msg>
<status status="PASS" starttime="20241230 08:16:01.737" endtime="20241230 08:16:01.737"/>
</kw>
<kw name="wait until modal spinner dissapears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="waitModal"][not(contains(@style,"display: none"))]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.737" level="INFO">${xpath} = //div[@id="waitModal"][not(contains(@style,"display: none"))]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:01.737" endtime="20241230 08:16:01.737"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:01.766" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:01.750" endtime="20241230 08:16:01.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:01.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.766" endtime="20241230 08:16:01.770"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.766" endtime="20241230 08:16:01.770"/>
</kw>
<msg timestamp="20241230 08:16:01.770" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.750" endtime="20241230 08:16:01.770"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:01.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.770" endtime="20241230 08:16:01.770"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.737" endtime="20241230 08:16:01.770"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Organization_dropdownarrow}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.770" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.770" endtime="20241230 08:16:01.770"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:01.782" endtime="20241230 08:16:01.802"/>
</kw>
<msg timestamp="20241230 08:16:01.802" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.782" endtime="20241230 08:16:01.802"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:01.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.814" endtime="20241230 08:16:01.814"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.782" endtime="20241230 08:16:01.814"/>
</iter>
<status status="PASS" starttime="20241230 08:16:01.770" endtime="20241230 08:16:01.814"/>
</for>
<status status="PASS" starttime="20241230 08:16:01.770" endtime="20241230 08:16:01.814"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${Organization_dropdownarrow}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:01.819" endtime="20241230 08:16:01.850"/>
</kw>
<msg timestamp="20241230 08:16:01.850" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.819" endtime="20241230 08:16:01.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:01.850" endtime="20241230 08:16:01.850"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:01.850" level="INFO">Clicking element '//*[@id='contextDropdownMenu']'.</msg>
<status status="PASS" starttime="20241230 08:16:01.850" endtime="20241230 08:16:01.972"/>
</kw>
<msg timestamp="20241230 08:16:01.972" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.850" endtime="20241230 08:16:01.972"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:01.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:01.972" endtime="20241230 08:16:01.972"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.814" endtime="20241230 08:16:01.972"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Organization_dropdownmenu}//a[text()='${OrganizationName}']</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:01.976" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:01.976" endtime="20241230 08:16:01.976"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:01.984" endtime="20241230 08:16:02.014"/>
</kw>
<msg timestamp="20241230 08:16:02.014" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.976" endtime="20241230 08:16:02.014"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:02.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:02.014" endtime="20241230 08:16:02.014"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.976" endtime="20241230 08:16:02.014"/>
</iter>
<status status="PASS" starttime="20241230 08:16:01.976" endtime="20241230 08:16:02.014"/>
</for>
<status status="PASS" starttime="20241230 08:16:01.976" endtime="20241230 08:16:02.014"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${Organization_dropdownmenu}//a[text()='${OrganizationName}']</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:02.024" endtime="20241230 08:16:02.062"/>
</kw>
<msg timestamp="20241230 08:16:02.062" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:02.014" endtime="20241230 08:16:02.062"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:02.062" endtime="20241230 08:16:02.062"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:02.062" level="INFO">Clicking element '//div[@id='contextDropdownMenu']//following-sibling::ul//a[text()='QA_automatic_testing']'.</msg>
<status status="PASS" starttime="20241230 08:16:02.062" endtime="20241230 08:16:02.671"/>
</kw>
<msg timestamp="20241230 08:16:02.675" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:02.062" endtime="20241230 08:16:02.675"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:02.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:02.676" endtime="20241230 08:16:02.676"/>
</kw>
<status status="PASS" starttime="20241230 08:16:02.014" endtime="20241230 08:16:02.676"/>
</kw>
<kw name="wait until pageloading spinner appears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:02.676" level="INFO">${xpath} = //div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:02.676" endtime="20241230 08:16:02.676"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:02.712" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:02.676" endtime="20241230 08:16:02.712"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:02.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:02.722" endtime="20241230 08:16:02.722"/>
</kw>
<status status="PASS" starttime="20241230 08:16:02.719" endtime="20241230 08:16:02.722"/>
</kw>
<status status="PASS" starttime="20241230 08:16:02.676" endtime="20241230 08:16:02.722"/>
</kw>
<kw name="wait until pageloading spinner dissapears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:02.722" level="INFO">${xpath} = //div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:02.722" endtime="20241230 08:16:02.722"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:02.739" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:02.722" endtime="20241230 08:16:02.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:02.739" endtime="20241230 08:16:02.739"/>
</kw>
<for flavor="IN RANGE">
<var>${Index}</var>
<value>0</value>
<value>${NrOfLoops}</value>
<iter>
<var name="${Index}">0</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:02.739" endtime="20241230 08:16:02.739"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:03.252" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:02.739" endtime="20241230 08:16:03.252"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:03.255" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:03.252" endtime="20241230 08:16:03.255"/>
</kw>
<status status="PASS" starttime="20241230 08:16:02.739" endtime="20241230 08:16:03.255"/>
</iter>
<iter>
<var name="${Index}">1</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:03.268" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:03.268" endtime="20241230 08:16:03.268"/>
</kw>
<status status="PASS" starttime="20241230 08:16:03.255" endtime="20241230 08:16:03.268"/>
</iter>
<status status="PASS" starttime="20241230 08:16:02.739" endtime="20241230 08:16:03.268"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.268" endtime="20241230 08:16:03.273"/>
</kw>
<status status="PASS" starttime="20241230 08:16:03.268" endtime="20241230 08:16:03.273"/>
</kw>
<msg timestamp="20241230 08:16:03.273" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:02.722" endtime="20241230 08:16:03.273"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.273" endtime="20241230 08:16:03.273"/>
</kw>
<status status="PASS" starttime="20241230 08:16:02.722" endtime="20241230 08:16:03.273"/>
</kw>
<status status="PASS" starttime="20241230 08:16:01.656" endtime="20241230 08:16:03.273"/>
</kw>
<msg timestamp="20241230 08:16:03.273" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:01.656" endtime="20241230 08:16:03.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log</arg>
<arg>Unable to get feature toggles</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:03.273" endtime="20241230 08:16:03.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>return from keyword</arg>
<arg>NOTHING</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:03.273" endtime="20241230 08:16:03.273"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.780" endtime="20241230 08:16:03.273"/>
</branch>
<status status="PASS" starttime="20241230 08:15:47.780" endtime="20241230 08:16:03.273"/>
</if>
<kw name="Get Location" library="SeleniumLibrary">
<var>${CurrentUrl}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20241230 08:16:03.288" level="INFO">${CurrentUrl} = https://test.slgnt.io/Portal/ES/85b7dda4-7203-41a5-9a60-89cc3bcc3ec9/exchangedashboard/tasks/2795848</msg>
<status status="PASS" starttime="20241230 08:16:03.273" endtime="20241230 08:16:03.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Start}</var>
<arg>/ES/</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:03.288" level="INFO">${Start} = /ES/</msg>
<status status="PASS" starttime="20241230 08:16:03.288" endtime="20241230 08:16:03.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Stop}</var>
<arg>/</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:03.288" level="INFO">${Stop} = /</msg>
<status status="PASS" starttime="20241230 08:16:03.288" endtime="20241230 08:16:03.288"/>
</kw>
<kw name="Get String Between Two Strings Updated" library="generalfunctions">
<var>${SubStr}</var>
<arg>${CurrentUrl}</arg>
<arg>${Start}</arg>
<arg>${Stop}</arg>
<msg timestamp="20241230 08:16:03.288" level="INFO">${SubStr} = 85b7dda4-7203-41a5-9a60-89cc3bcc3ec9</msg>
<status status="PASS" starttime="20241230 08:16:03.288" endtime="20241230 08:16:03.288"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bContains}</var>
<arg>${URL}</arg>
<arg>/ES</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:03.288" level="INFO">${bContains} = False</msg>
<status status="PASS" starttime="20241230 08:16:03.288" endtime="20241230 08:16:03.288"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${GetURL}</var>
<arg>${bContains}</arg>
<arg>${URL}/api</arg>
<arg>${URL}/ES/api</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:03.288" level="INFO">${GetURL} = https://test.slgnt.io/Portal/ES/api</msg>
<status status="PASS" starttime="20241230 08:16:03.288" endtime="20241230 08:16:03.288"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${GetURL}/${SubStr}/FeatureToggles</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20241230 08:16:03.288" level="INFO">Opening url 'https://test.slgnt.io/Portal/ES/api/85b7dda4-7203-41a5-9a60-89cc3bcc3ec9/FeatureToggles'</msg>
<status status="PASS" starttime="20241230 08:16:03.288" endtime="20241230 08:16:03.395"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>wait until with for loop</arg>
<arg>//body[contains(.,"JOURNEY_ASSET_TREE_SELECTOR")]</arg>
<arg>Stop=5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>//body[contains(.,"JOURNEY_ASSET_TREE_SELECTOR")]</arg>
<arg>Stop=5</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:03.401" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:03.401" endtime="20241230 08:16:03.401"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:03.401" endtime="20241230 08:16:03.418"/>
</kw>
<msg timestamp="20241230 08:16:03.418" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.401" endtime="20241230 08:16:03.418"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:03.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.430" endtime="20241230 08:16:03.430"/>
</kw>
<status status="PASS" starttime="20241230 08:16:03.401" endtime="20241230 08:16:03.430"/>
</iter>
<status status="PASS" starttime="20241230 08:16:03.401" endtime="20241230 08:16:03.430"/>
</for>
<status status="PASS" starttime="20241230 08:16:03.397" endtime="20241230 08:16:03.430"/>
</kw>
<msg timestamp="20241230 08:16:03.430" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.397" endtime="20241230 08:16:03.430"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${FullText}</var>
<arg>//body</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:03.453" level="INFO">${FullText} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.430" endtime="20241230 08:16:03.453"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${AllFeatureToggles}</arg>
<arg>${FullText}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241230 08:16:03.578" level="INFO">${AllFeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.453" endtime="20241230 08:16:03.578"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${FullText}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.578" endtime="20241230 08:16:03.578"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.780" endtime="20241230 08:16:03.578"/>
</kw>
<msg timestamp="20241230 08:16:03.578" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:15:47.780" endtime="20241230 08:16:03.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking if Feature toggle ${TenantSettingkey} is found in ${FeatureToggles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.578" level="INFO">Checking if Feature toggle JOURNEY_ASSET_TREE_SELECTOR is found in ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERFACES","DEFAULT_DEDUPLICATION_MAILS","ENABLE_AUDIENCE_REPORT","ENABLE_DOWNLOAD_LINK_EXPORT_TASKS","ENABLE_OPENAI","ENABLE_PERFORMANCE_HOME_DASHBOARD","ENABLE_PREVIEW_LIVE_USERS","ENABLE_SDSPRO","ENABLE_WORDPRESS_INBOUNDEVENT","ENABLEAZUREMEDIASTORAGE","ENABLEDATAEXPLORER","ENABLEGLOBALORGANIZATION","ENABLEJOURNEYDUPLICATION_CROSS_BRANDS","ENABLESCRIPTINGPANE","ENABLEUPLOADINCHUNKS","EXECUTION_READ_ONLY_ALLOWED","JOURNEY_ASSET_TREE_SELECTOR","JOURNEY_CRON_JOB_SCHEDULING","LS_TOTO_TOGGLE","SITE_PLACEMENTS_ENABLED","SYSTEMEMAIL_USE_SDC","USE_APP_KEYSECRET","USE_GRIZZLY_ADMIN_CONFIG_ACCESS_MANAGEMENT","USE_GRIZZLY_CONTENT_BLOCK","USE_GRIZZLY_CONTENT_BLOCKS","USE_GRIZZLY_CONTENT_LINK_DIALOG_EXPERIENCE","USE_GRIZZLY_CONTENT_LINKS_DIALOG","USE_GRIZZLY_DATA_EXCHANGE_CUSTOM_COMPONENTS","USE_GRIZZLY_DATA_EXCHANGE_INBOUND","USE_GRIZZLY_DATA_EXCHANGE_TASKS","USE_GRIZZLY_HOMEDASHBOARD","USE_GRIZZLY_JOURNEYS","USE_GRIZZLY_LIBRARY_LABELS","USE_GRIZZLY_LISTS","USE_GRIZZLY_LISTS_DASHBOARD","USE_GRIZZLY_LISTS_WIZARD","USE_GRIZZLY_REPORTING","USE_NETCORE_CLIENTIP","USE_READONLY_CONTENT","USEENGAGEMENTMETRICSINTERESTTAGS","USEENGAGEMENTMETRICSINTERESTTAGS_MOBILE","USEENGAGEMENTMETRICSINTERESTTAGS_SMS","USEENGAGEMENTMETRICSINTERESTTAGS_WEB"]</msg>
<status status="PASS" starttime="20241230 08:16:03.578" endtime="20241230 08:16:03.578"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bContains}</var>
<arg>${FeatureToggles}</arg>
<arg>${TenantSettingkey}"</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:03.578" level="INFO">${bContains} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.578" endtime="20241230 08:16:03.578"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bContains}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.578" endtime="20241230 08:16:03.578"/>
</kw>
<msg timestamp="20241230 08:16:03.578" level="INFO">${SettingValue} = True</msg>
<status status="PASS" starttime="20241230 08:15:47.664" endtime="20241230 08:16:03.578"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CheckAssetFolderFeatureToggle}</arg>
<arg>${SettingValue}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:16:03.643" level="INFO">${CheckAssetFolderFeatureToggle} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.578" endtime="20241230 08:16:03.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>JOURNEY_ASSET_TREE_SELECTOR feature setting is ${SettingValue}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.643" level="INFO">JOURNEY_ASSET_TREE_SELECTOR feature setting is True</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<kw name="Get Feature Toggle Value">
<var>${SettingValue}</var>
<arg>USE_GRIZZLY_LISTS_WIZARD</arg>
<kw name="Get Variable Value" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>${AllFeatureToggles}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241230 08:16:03.643" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>'${FeatureToggles}' == 'None'</arg>
<arg>Get Feature Toggle variable</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${FeatureToggles}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${FeatureToggles}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<msg timestamp="20241230 08:16:03.643" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking if Feature toggle ${TenantSettingkey} is found in ${FeatureToggles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.643" level="INFO">Checking if Feature toggle USE_GRIZZLY_LISTS_WIZARD is found in ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERFACES","DEFAULT_DEDUPLICATION_MAILS","ENABLE_AUDIENCE_REPORT","ENABLE_DOWNLOAD_LINK_EXPORT_TASKS","ENABLE_OPENAI","ENABLE_PERFORMANCE_HOME_DASHBOARD","ENABLE_PREVIEW_LIVE_USERS","ENABLE_SDSPRO","ENABLE_WORDPRESS_INBOUNDEVENT","ENABLEAZUREMEDIASTORAGE","ENABLEDATAEXPLORER","ENABLEGLOBALORGANIZATION","ENABLEJOURNEYDUPLICATION_CROSS_BRANDS","ENABLESCRIPTINGPANE","ENABLEUPLOADINCHUNKS","EXECUTION_READ_ONLY_ALLOWED","JOURNEY_ASSET_TREE_SELECTOR","JOURNEY_CRON_JOB_SCHEDULING","LS_TOTO_TOGGLE","SITE_PLACEMENTS_ENABLED","SYSTEMEMAIL_USE_SDC","USE_APP_KEYSECRET","USE_GRIZZLY_ADMIN_CONFIG_ACCESS_MANAGEMENT","USE_GRIZZLY_CONTENT_BLOCK","USE_GRIZZLY_CONTENT_BLOCKS","USE_GRIZZLY_CONTENT_LINK_DIALOG_EXPERIENCE","USE_GRIZZLY_CONTENT_LINKS_DIALOG","USE_GRIZZLY_DATA_EXCHANGE_CUSTOM_COMPONENTS","USE_GRIZZLY_DATA_EXCHANGE_INBOUND","USE_GRIZZLY_DATA_EXCHANGE_TASKS","USE_GRIZZLY_HOMEDASHBOARD","USE_GRIZZLY_JOURNEYS","USE_GRIZZLY_LIBRARY_LABELS","USE_GRIZZLY_LISTS","USE_GRIZZLY_LISTS_DASHBOARD","USE_GRIZZLY_LISTS_WIZARD","USE_GRIZZLY_REPORTING","USE_NETCORE_CLIENTIP","USE_READONLY_CONTENT","USEENGAGEMENTMETRICSINTERESTTAGS","USEENGAGEMENTMETRICSINTERESTTAGS_MOBILE","USEENGAGEMENTMETRICSINTERESTTAGS_SMS","USEENGAGEMENTMETRICSINTERESTTAGS_WEB"]</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bContains}</var>
<arg>${FeatureToggles}</arg>
<arg>${TenantSettingkey}"</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:03.643" level="INFO">${bContains} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bContains}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<msg timestamp="20241230 08:16:03.643" level="INFO">${SettingValue} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.643"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${UseGrizzlyListsWizard}</arg>
<arg>${SettingValue}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:16:03.708" level="INFO">${UseGrizzlyListsWizard} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.643" endtime="20241230 08:16:03.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>USE_GRIZZLY_LISTS_WIZARD feature setting is ${SettingValue}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.708" level="INFO">USE_GRIZZLY_LISTS_WIZARD feature setting is True</msg>
<status status="PASS" starttime="20241230 08:16:03.708" endtime="20241230 08:16:03.708"/>
</kw>
<kw name="Get Feature Toggle Value">
<var>${SettingValue}</var>
<arg>USE_GRIZZLY_CONTENT_BLOCK</arg>
<kw name="Get Variable Value" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>${AllFeatureToggles}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241230 08:16:03.708" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.708" endtime="20241230 08:16:03.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>'${FeatureToggles}' == 'None'</arg>
<arg>Get Feature Toggle variable</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${FeatureToggles}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${FeatureToggles}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:16:03.721" endtime="20241230 08:16:03.721"/>
</kw>
<msg timestamp="20241230 08:16:03.721" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.721" endtime="20241230 08:16:03.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking if Feature toggle ${TenantSettingkey} is found in ${FeatureToggles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.724" level="INFO">Checking if Feature toggle USE_GRIZZLY_CONTENT_BLOCK is found in ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERFACES","DEFAULT_DEDUPLICATION_MAILS","ENABLE_AUDIENCE_REPORT","ENABLE_DOWNLOAD_LINK_EXPORT_TASKS","ENABLE_OPENAI","ENABLE_PERFORMANCE_HOME_DASHBOARD","ENABLE_PREVIEW_LIVE_USERS","ENABLE_SDSPRO","ENABLE_WORDPRESS_INBOUNDEVENT","ENABLEAZUREMEDIASTORAGE","ENABLEDATAEXPLORER","ENABLEGLOBALORGANIZATION","ENABLEJOURNEYDUPLICATION_CROSS_BRANDS","ENABLESCRIPTINGPANE","ENABLEUPLOADINCHUNKS","EXECUTION_READ_ONLY_ALLOWED","JOURNEY_ASSET_TREE_SELECTOR","JOURNEY_CRON_JOB_SCHEDULING","LS_TOTO_TOGGLE","SITE_PLACEMENTS_ENABLED","SYSTEMEMAIL_USE_SDC","USE_APP_KEYSECRET","USE_GRIZZLY_ADMIN_CONFIG_ACCESS_MANAGEMENT","USE_GRIZZLY_CONTENT_BLOCK","USE_GRIZZLY_CONTENT_BLOCKS","USE_GRIZZLY_CONTENT_LINK_DIALOG_EXPERIENCE","USE_GRIZZLY_CONTENT_LINKS_DIALOG","USE_GRIZZLY_DATA_EXCHANGE_CUSTOM_COMPONENTS","USE_GRIZZLY_DATA_EXCHANGE_INBOUND","USE_GRIZZLY_DATA_EXCHANGE_TASKS","USE_GRIZZLY_HOMEDASHBOARD","USE_GRIZZLY_JOURNEYS","USE_GRIZZLY_LIBRARY_LABELS","USE_GRIZZLY_LISTS","USE_GRIZZLY_LISTS_DASHBOARD","USE_GRIZZLY_LISTS_WIZARD","USE_GRIZZLY_REPORTING","USE_NETCORE_CLIENTIP","USE_READONLY_CONTENT","USEENGAGEMENTMETRICSINTERESTTAGS","USEENGAGEMENTMETRICSINTERESTTAGS_MOBILE","USEENGAGEMENTMETRICSINTERESTTAGS_SMS","USEENGAGEMENTMETRICSINTERESTTAGS_WEB"]</msg>
<status status="PASS" starttime="20241230 08:16:03.721" endtime="20241230 08:16:03.724"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bContains}</var>
<arg>${FeatureToggles}</arg>
<arg>${TenantSettingkey}"</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:03.724" level="INFO">${bContains} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.724" endtime="20241230 08:16:03.724"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bContains}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.724" endtime="20241230 08:16:03.724"/>
</kw>
<msg timestamp="20241230 08:16:03.724" level="INFO">${SettingValue} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.708" endtime="20241230 08:16:03.724"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${GrizzlyContentBlockFeatureToggle}</arg>
<arg>${SettingValue}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:16:03.772" level="INFO">${GrizzlyContentBlockFeatureToggle} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.724" endtime="20241230 08:16:03.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>USE_GRIZZLY_CONTENT_BLOCK feature setting is ${SettingValue}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.772" level="INFO">USE_GRIZZLY_CONTENT_BLOCK feature setting is True</msg>
<status status="PASS" starttime="20241230 08:16:03.772" endtime="20241230 08:16:03.772"/>
</kw>
<kw name="Get Feature Toggle Value">
<var>${SettingValue}</var>
<arg>USE_GRIZZLY_LISTS</arg>
<kw name="Get Variable Value" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>${AllFeatureToggles}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241230 08:16:03.785" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.772" endtime="20241230 08:16:03.785"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>'${FeatureToggles}' == 'None'</arg>
<arg>Get Feature Toggle variable</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${FeatureToggles}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${FeatureToggles}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:16:03.785" endtime="20241230 08:16:03.785"/>
</kw>
<msg timestamp="20241230 08:16:03.785" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.785" endtime="20241230 08:16:03.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking if Feature toggle ${TenantSettingkey} is found in ${FeatureToggles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.788" level="INFO">Checking if Feature toggle USE_GRIZZLY_LISTS is found in ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERFACES","DEFAULT_DEDUPLICATION_MAILS","ENABLE_AUDIENCE_REPORT","ENABLE_DOWNLOAD_LINK_EXPORT_TASKS","ENABLE_OPENAI","ENABLE_PERFORMANCE_HOME_DASHBOARD","ENABLE_PREVIEW_LIVE_USERS","ENABLE_SDSPRO","ENABLE_WORDPRESS_INBOUNDEVENT","ENABLEAZUREMEDIASTORAGE","ENABLEDATAEXPLORER","ENABLEGLOBALORGANIZATION","ENABLEJOURNEYDUPLICATION_CROSS_BRANDS","ENABLESCRIPTINGPANE","ENABLEUPLOADINCHUNKS","EXECUTION_READ_ONLY_ALLOWED","JOURNEY_ASSET_TREE_SELECTOR","JOURNEY_CRON_JOB_SCHEDULING","LS_TOTO_TOGGLE","SITE_PLACEMENTS_ENABLED","SYSTEMEMAIL_USE_SDC","USE_APP_KEYSECRET","USE_GRIZZLY_ADMIN_CONFIG_ACCESS_MANAGEMENT","USE_GRIZZLY_CONTENT_BLOCK","USE_GRIZZLY_CONTENT_BLOCKS","USE_GRIZZLY_CONTENT_LINK_DIALOG_EXPERIENCE","USE_GRIZZLY_CONTENT_LINKS_DIALOG","USE_GRIZZLY_DATA_EXCHANGE_CUSTOM_COMPONENTS","USE_GRIZZLY_DATA_EXCHANGE_INBOUND","USE_GRIZZLY_DATA_EXCHANGE_TASKS","USE_GRIZZLY_HOMEDASHBOARD","USE_GRIZZLY_JOURNEYS","USE_GRIZZLY_LIBRARY_LABELS","USE_GRIZZLY_LISTS","USE_GRIZZLY_LISTS_DASHBOARD","USE_GRIZZLY_LISTS_WIZARD","USE_GRIZZLY_REPORTING","USE_NETCORE_CLIENTIP","USE_READONLY_CONTENT","USEENGAGEMENTMETRICSINTERESTTAGS","USEENGAGEMENTMETRICSINTERESTTAGS_MOBILE","USEENGAGEMENTMETRICSINTERESTTAGS_SMS","USEENGAGEMENTMETRICSINTERESTTAGS_WEB"]</msg>
<status status="PASS" starttime="20241230 08:16:03.788" endtime="20241230 08:16:03.788"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bContains}</var>
<arg>${FeatureToggles}</arg>
<arg>${TenantSettingkey}"</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:03.788" level="INFO">${bContains} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.788" endtime="20241230 08:16:03.788"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bContains}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.788" endtime="20241230 08:16:03.788"/>
</kw>
<msg timestamp="20241230 08:16:03.788" level="INFO">${SettingValue} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.772" endtime="20241230 08:16:03.788"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${UseGrizzlyLists}</arg>
<arg>${SettingValue}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:16:03.837" level="INFO">${UseGrizzlyLists} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.788" endtime="20241230 08:16:03.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>USE_GRIZZLY_LISTS feature setting is ${SettingValue}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.850" level="INFO">USE_GRIZZLY_LISTS feature setting is True</msg>
<status status="PASS" starttime="20241230 08:16:03.850" endtime="20241230 08:16:03.850"/>
</kw>
<kw name="Get Feature Toggle Value">
<var>${SettingValue}</var>
<arg>USE_GRIZZLY_JOURNEYS</arg>
<kw name="Get Variable Value" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>${AllFeatureToggles}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241230 08:16:03.850" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.850" endtime="20241230 08:16:03.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${FeatureToggles}</var>
<arg>'${FeatureToggles}' == 'None'</arg>
<arg>Get Feature Toggle variable</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${FeatureToggles}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${FeatureToggles}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:16:03.850" endtime="20241230 08:16:03.850"/>
</kw>
<msg timestamp="20241230 08:16:03.850" level="INFO">${FeatureToggles} = ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERF...</msg>
<status status="PASS" starttime="20241230 08:16:03.850" endtime="20241230 08:16:03.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Checking if Feature toggle ${TenantSettingkey} is found in ${FeatureToggles}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.850" level="INFO">Checking if Feature toggle USE_GRIZZLY_JOURNEYS is found in ["BRAND_FILTER_ALLOW_SCOPES","CANACCESSCAMPAIGNLISTS","CREATEOPTIONLISTPERMISSION","CUMULIO_AGGREGATIONTABLEINUTC","CUMULIO_ENABLE_QUERY_ENGINE_V2","CUMULIO_REPUSERLISTSTABLESINUTC","CUMULIO_USEINTERFACES","DEFAULT_DEDUPLICATION_MAILS","ENABLE_AUDIENCE_REPORT","ENABLE_DOWNLOAD_LINK_EXPORT_TASKS","ENABLE_OPENAI","ENABLE_PERFORMANCE_HOME_DASHBOARD","ENABLE_PREVIEW_LIVE_USERS","ENABLE_SDSPRO","ENABLE_WORDPRESS_INBOUNDEVENT","ENABLEAZUREMEDIASTORAGE","ENABLEDATAEXPLORER","ENABLEGLOBALORGANIZATION","ENABLEJOURNEYDUPLICATION_CROSS_BRANDS","ENABLESCRIPTINGPANE","ENABLEUPLOADINCHUNKS","EXECUTION_READ_ONLY_ALLOWED","JOURNEY_ASSET_TREE_SELECTOR","JOURNEY_CRON_JOB_SCHEDULING","LS_TOTO_TOGGLE","SITE_PLACEMENTS_ENABLED","SYSTEMEMAIL_USE_SDC","USE_APP_KEYSECRET","USE_GRIZZLY_ADMIN_CONFIG_ACCESS_MANAGEMENT","USE_GRIZZLY_CONTENT_BLOCK","USE_GRIZZLY_CONTENT_BLOCKS","USE_GRIZZLY_CONTENT_LINK_DIALOG_EXPERIENCE","USE_GRIZZLY_CONTENT_LINKS_DIALOG","USE_GRIZZLY_DATA_EXCHANGE_CUSTOM_COMPONENTS","USE_GRIZZLY_DATA_EXCHANGE_INBOUND","USE_GRIZZLY_DATA_EXCHANGE_TASKS","USE_GRIZZLY_HOMEDASHBOARD","USE_GRIZZLY_JOURNEYS","USE_GRIZZLY_LIBRARY_LABELS","USE_GRIZZLY_LISTS","USE_GRIZZLY_LISTS_DASHBOARD","USE_GRIZZLY_LISTS_WIZARD","USE_GRIZZLY_REPORTING","USE_NETCORE_CLIENTIP","USE_READONLY_CONTENT","USEENGAGEMENTMETRICSINTERESTTAGS","USEENGAGEMENTMETRICSINTERESTTAGS_MOBILE","USEENGAGEMENTMETRICSINTERESTTAGS_SMS","USEENGAGEMENTMETRICSINTERESTTAGS_WEB"]</msg>
<status status="PASS" starttime="20241230 08:16:03.850" endtime="20241230 08:16:03.850"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bContains}</var>
<arg>${FeatureToggles}</arg>
<arg>${TenantSettingkey}"</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:03.857" level="INFO">${bContains} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.857" endtime="20241230 08:16:03.857"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bContains}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:03.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:03.857" endtime="20241230 08:16:03.857"/>
</kw>
<msg timestamp="20241230 08:16:03.857" level="INFO">${SettingValue} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.850" endtime="20241230 08:16:03.857"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${UseGrizzlyJourneys}</arg>
<arg>${SettingValue}</arg>
<arg>children=true</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:16:03.918" level="INFO">${UseGrizzlyJourneys} = True</msg>
<status status="PASS" starttime="20241230 08:16:03.857" endtime="20241230 08:16:03.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>USE_GRIZZLY_JOURNEYS feature setting is ${SettingValue}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:03.931" level="INFO">USE_GRIZZLY_JOURNEYS feature setting is True</msg>
<status status="PASS" starttime="20241230 08:16:03.931" endtime="20241230 08:16:03.931"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.664" endtime="20241230 08:16:03.931"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.604" endtime="20241230 08:16:03.931"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.604" endtime="20241230 08:16:03.931"/>
</branch>
<branch type="ELSE">
<kw name="Create suite users via API">
<status status="NOT RUN" starttime="20241230 08:16:03.931" endtime="20241230 08:16:03.931"/>
</kw>
<kw name="set global variables with sql">
<doc>This keyword defines some global variables for the entire run if sql is enabled</doc>
<status status="NOT RUN" starttime="20241230 08:16:03.931" endtime="20241230 08:16:03.931"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:03.931" endtime="20241230 08:16:03.931"/>
</branch>
<status status="PASS" starttime="20241230 08:15:47.604" endtime="20241230 08:16:03.931"/>
</if>
<status status="PASS" starttime="20241230 08:15:47.393" endtime="20241230 08:16:03.931"/>
</kw>
<status status="PASS" starttime="20241230 08:15:47.393" endtime="20241230 08:16:03.931"/>
</kw>
<suite id="s1-s1" name="89 Sanitychecks" source="X:\Tests\Automation\test_suites\89_sanitychecks">
<suite id="s1-s1-s1" name="Listsandstaticsegments" source="X:\Tests\Automation\test_suites\89_sanitychecks\listsandstaticsegments.robot">
<kw name="Custom Setup" type="SETUP">
<kw name="Get Time" library="BuiltIn">
<var>${d}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<msg timestamp="20241230 08:16:04.693" level="INFO">${d} = 1735542964</msg>
<status status="PASS" starttime="20241230 08:16:04.690" endtime="20241230 08:16:04.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${d}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20241230 08:16:04.693" level="INFO">${d} = 1735542964</msg>
<status status="PASS" starttime="20241230 08:16:04.693" endtime="20241230 08:16:04.693"/>
</kw>
<kw name="Login_ES" library="loginpage">
<doc>This login function opens immediately the ES application
Gdu: Added optional parameters to enable addblocker both on headless and visible browser
set Addblockname (ie ChromeAdBlock4_10.crx) when calling Login_ES to enable an addblocker
Addblocker crx must be present in /resources/extensions/
This is atm only enabled when bReuseLogin is enabled as well so tests must be in 04 or 13 folder</doc>
<kw name="Reuse session check" library="loginpage">
<var>${bReuseLogin}</var>
<arg>${reuseSession}</arg>
<doc>Does some checks to see if cookies can be reused or not and returns TRUE if ok, False if not</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${DisableSQL}</arg>
<arg>return from keyword</arg>
<arg>${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${False}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:04.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:04.718" endtime="20241230 08:16:04.718"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.718" endtime="20241230 08:16:04.718"/>
</kw>
<msg timestamp="20241230 08:16:04.718" level="INFO">${bReuseLogin} = False</msg>
<status status="PASS" starttime="20241230 08:16:04.718" endtime="20241230 08:16:04.718"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OrganisationId}' == '1'</arg>
<arg>Login</arg>
<arg>LoginUrl=${URL}/ES/</arg>
<arg>reuseSession=${reuseSession}</arg>
<arg>bReuseLogin=${bReuseLogin}</arg>
<arg>Addblockname=${Addblockname}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>LoginUrl=${URL}/ES/</arg>
<arg>reuseSession=${reuseSession}</arg>
<arg>bReuseLogin=${bReuseLogin}</arg>
<arg>Addblockname=${Addblockname}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Login" library="loginpage">
<arg>LoginUrl=${URL}/ES/</arg>
<arg>reuseSession=${reuseSession}</arg>
<arg>bReuseLogin=${bReuseLogin}</arg>
<arg>Addblockname=${Addblockname}</arg>
<doc>This function is used to effectivaly Login ES and expects it to work.</doc>
<kw name="Set Log Level" library="BuiltIn">
<arg>NONE</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<status status="PASS" starttime="20241230 08:16:04.818" endtime="20241230 08:16:04.818"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${userName}</var>
<arg>${DisableSQL}</arg>
<arg>Get Username for disabled SQL</arg>
<arg>${userName}</arg>
<arg>ELSE</arg>
<arg>Get Username for test suite agent</arg>
<arg>${userName}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Username for disabled SQL" library="loginpage">
<arg>${userName}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${userName}'=='${EMPTY}'</arg>
<arg>return from keyword</arg>
<arg>${userNameText}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${userNameText}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20241230 08:16:04.843" endtime="20241230 08:16:04.843"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.822" endtime="20241230 08:16:04.843"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.818" endtime="20241230 08:16:04.843"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.818" endtime="20241230 08:16:04.843"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20241230 08:16:04.843" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:16:04.843" endtime="20241230 08:16:04.843"/>
</kw>
<kw name="Has Stored Smc Cookies" library="cookies">
<var>${has_cookies}</var>
<arg>${userName}</arg>
<msg timestamp="20241230 08:16:04.843" level="INFO">${has_cookies} = False</msg>
<status status="PASS" starttime="20241230 08:16:04.843" endtime="20241230 08:16:04.843"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${has_cookies}</var>
<arg>${reuseSession} == ${true}</arg>
<arg>${has_cookies}</arg>
<arg>${false}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:04.851" level="INFO">${has_cookies} = False</msg>
<status status="PASS" starttime="20241230 08:16:04.851" endtime="20241230 08:16:04.851"/>
</kw>
<kw name="Register Keyword To Run On Failure" library="SeleniumLibrary">
<arg>NONE</arg>
<doc>Sets the keyword to execute, when a SeleniumLibrary keyword fails.</doc>
<msg timestamp="20241230 08:16:04.851" level="INFO">No keyword will be run on failure.</msg>
<status status="PASS" starttime="20241230 08:16:04.851" endtime="20241230 08:16:04.851"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${screenshot_folder}</var>
<arg>${OUTPUT DIR}${/}screenshots${/}${SUITE NAME}${/}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:04.851" level="INFO">${screenshot_folder} = X:\Tests\Automation\screenshots\Test Suites.89 Sanitychecks.Listsandstaticsegments\</msg>
<status status="PASS" starttime="20241230 08:16:04.851" endtime="20241230 08:16:04.851"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${Status}</var>
<var>${Directory}</var>
<arg>Set screenshot directory</arg>
<arg>${screenshot_folder}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>${screenshot_folder}</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20241230 08:16:04.851" endtime="20241230 08:16:04.851"/>
</kw>
<msg timestamp="20241230 08:16:04.851" level="INFO">${Status} = PASS</msg>
<msg timestamp="20241230 08:16:04.851" level="INFO">${Directory} = X:\Tests\Automation\screenshots\Test Suites</msg>
<status status="PASS" starttime="20241230 08:16:04.851" endtime="20241230 08:16:04.851"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>log</arg>
<arg>Failed to set screenshot dir to '${screenshot_folder}'</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:04.851" endtime="20241230 08:16:04.851"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>Login_RestoreCookie_DB</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${Addblockname}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:04.851" endtime="20241230 08:16:04.851"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>Verify Login and retry if not</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:04.858" endtime="20241230 08:16:04.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>Execute Javascript</arg>
<arg>${SCRIPT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:04.858" endtime="20241230 08:16:04.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bReuseLogin}</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:04.858" endtime="20241230 08:16:04.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${has_cookies} == ${false}</arg>
<arg>Login_ThroughForm</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${password}</arg>
<arg>${reuseSession}</arg>
<arg>ELSE</arg>
<arg>Login_RestoreCookie</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Login_ThroughForm" library="loginpage">
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${password}</arg>
<arg>${reuseSession}</arg>
<doc>This function is uses to effectivaly Login ES, via the login form and expects it to work.</doc>
<kw name="Open Browser, Fill in Login details and click on LoginButton" library="loginpage">
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userNameText}</arg>
<arg>${passwordText}</arg>
<doc>This function is usesd to effectivaly open the browser, fill in the text &amp; click on the button.
This function does not check any result, here you have other functions such as login, login_invalid_user...</doc>
<kw name="Get Variable Value" library="BuiltIn">
<var>${chckBrowserStack}</var>
<arg>${BrowserStack}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20241230 08:16:04.964" level="INFO">${chckBrowserStack} = None</msg>
<status status="PASS" starttime="20241230 08:16:04.858" endtime="20241230 08:16:04.964"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${BrowserStackCheck}</var>
<arg>"""${chckBrowserStack}""" != 'None'</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:04.968" level="INFO">${BrowserStackCheck} = False</msg>
<status status="PASS" starttime="20241230 08:16:04.968" endtime="20241230 08:16:04.968"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${Browser}' == 'ChromeHeadless' or '${Browser}' == 'Chrome'</arg>
<arg>Open Chrome Browser to Page</arg>
<arg>${LoginUrl}</arg>
<arg>ELSE IF</arg>
<arg>${BrowserStackCheck}</arg>
<arg>Open Browser</arg>
<arg>url=${LoginUrl}</arg>
<arg>browser=${Browser}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=browser:${Browser},os:${OS},os_version:${OS_VERSION},resolution:1920x1080</arg>
<arg>ELSE</arg>
<arg>run keywords</arg>
<arg>Open Browser</arg>
<arg>${LoginUrl}</arg>
<arg>${Browser}</arg>
<arg>AND</arg>
<arg>maximize browser window</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keywords" library="BuiltIn">
<arg>Open Browser</arg>
<arg>${LoginUrl}</arg>
<arg>${Browser}</arg>
<arg>AND</arg>
<arg>maximize browser window</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${LoginUrl}</arg>
<arg>${Browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20241230 08:16:04.968" level="INFO">Opening browser 'chrome' to base url 'https://test.slgnt.io/Portal/ES/'.</msg>
<status status="PASS" starttime="20241230 08:16:04.968" endtime="20241230 08:16:08.385"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20241230 08:16:08.386" endtime="20241230 08:16:08.415"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.968" endtime="20241230 08:16:08.415"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.968" endtime="20241230 08:16:08.415"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Title Should Be</arg>
<arg>${title}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${title}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20241230 08:16:08.493" level="INFO">Page title is 'Logon'.</msg>
<status status="PASS" starttime="20241230 08:16:08.415" endtime="20241230 08:16:08.493"/>
</kw>
<msg timestamp="20241230 08:16:08.493" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:08.415" endtime="20241230 08:16:08.493"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:08.493" endtime="20241230 08:16:08.493"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>FAIL</arg>
<arg>Title did not match expected: ${title}</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:08.493" endtime="20241230 08:16:08.493"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${userName}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:08.493" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:08.493" endtime="20241230 08:16:08.493"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:08.501" endtime="20241230 08:16:08.534"/>
</kw>
<msg timestamp="20241230 08:16:08.534" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:08.501" endtime="20241230 08:16:08.534"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:08.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:08.538" endtime="20241230 08:16:08.538"/>
</kw>
<status status="PASS" starttime="20241230 08:16:08.493" endtime="20241230 08:16:08.538"/>
</iter>
<status status="PASS" starttime="20241230 08:16:08.493" endtime="20241230 08:16:08.538"/>
</for>
<status status="PASS" starttime="20241230 08:16:08.493" endtime="20241230 08:16:08.538"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${userName}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:08.538" endtime="20241230 08:16:08.583"/>
</kw>
<msg timestamp="20241230 08:16:08.583" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:08.538" endtime="20241230 08:16:08.583"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:08.583" endtime="20241230 08:16:08.583"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:08.587" level="INFO">Clicking element '//input[@sg-qa-id="Username"]'.</msg>
<status status="PASS" starttime="20241230 08:16:08.587" endtime="20241230 08:16:08.679"/>
</kw>
<msg timestamp="20241230 08:16:08.679" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:08.587" endtime="20241230 08:16:08.679"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:08.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:08.679" endtime="20241230 08:16:08.679"/>
</kw>
<status status="PASS" starttime="20241230 08:16:08.538" endtime="20241230 08:16:08.679"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${userName}</arg>
<arg>${userNameValue}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:08.687" level="INFO">Typing text 'QA_automation_admin' into text field '//input[@sg-qa-id="Username"]'.</msg>
<status status="PASS" starttime="20241230 08:16:08.687" endtime="20241230 08:16:08.800"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${password}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:08.800" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:08.800" endtime="20241230 08:16:08.800"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:08.807" endtime="20241230 08:16:08.829"/>
</kw>
<msg timestamp="20241230 08:16:08.829" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:08.800" endtime="20241230 08:16:08.829"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:08.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:08.829" endtime="20241230 08:16:08.829"/>
</kw>
<status status="PASS" starttime="20241230 08:16:08.800" endtime="20241230 08:16:08.829"/>
</iter>
<status status="PASS" starttime="20241230 08:16:08.800" endtime="20241230 08:16:08.829"/>
</for>
<status status="PASS" starttime="20241230 08:16:08.800" endtime="20241230 08:16:08.841"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${password}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:08.845" endtime="20241230 08:16:08.878"/>
</kw>
<msg timestamp="20241230 08:16:08.878" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:08.841" endtime="20241230 08:16:08.878"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:08.878" endtime="20241230 08:16:08.878"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:08.878" level="INFO">Clicking element '//input[@sg-qa-id="Password"]'.</msg>
<status status="PASS" starttime="20241230 08:16:08.878" endtime="20241230 08:16:08.958"/>
</kw>
<msg timestamp="20241230 08:16:08.958" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:08.878" endtime="20241230 08:16:08.958"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:08.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:08.958" endtime="20241230 08:16:08.958"/>
</kw>
<status status="PASS" starttime="20241230 08:16:08.841" endtime="20241230 08:16:08.958"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>${password}</arg>
<arg>${passwordValue}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:08.958" level="INFO">Typing password into text field '//input[@sg-qa-id="Password"]'.</msg>
<msg timestamp="20241230 08:16:09.002" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20241230 08:16:09.051" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:16:08.958" endtime="20241230 08:16:09.051"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${LoginButton}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:09.056" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:09.056" endtime="20241230 08:16:09.056"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:09.056" endtime="20241230 08:16:09.087"/>
</kw>
<msg timestamp="20241230 08:16:09.087" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:09.056" endtime="20241230 08:16:09.087"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:09.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:09.087" endtime="20241230 08:16:09.087"/>
</kw>
<status status="PASS" starttime="20241230 08:16:09.056" endtime="20241230 08:16:09.087"/>
</iter>
<status status="PASS" starttime="20241230 08:16:09.056" endtime="20241230 08:16:09.087"/>
</for>
<status status="PASS" starttime="20241230 08:16:09.051" endtime="20241230 08:16:09.087"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${LoginButton}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:09.087" endtime="20241230 08:16:09.120"/>
</kw>
<msg timestamp="20241230 08:16:09.120" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:09.087" endtime="20241230 08:16:09.120"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:09.120" endtime="20241230 08:16:09.120"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:09.120" level="INFO">Clicking element '//button[@sg-qa-id='split-button-login'][not(contains(@class,"sg-split-button--disabled"))]'.</msg>
<status status="PASS" starttime="20241230 08:16:09.120" endtime="20241230 08:16:09.506"/>
</kw>
<msg timestamp="20241230 08:16:09.506" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:09.120" endtime="20241230 08:16:09.506"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:09.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:09.506" endtime="20241230 08:16:09.506"/>
</kw>
<status status="PASS" starttime="20241230 08:16:09.087" endtime="20241230 08:16:09.506"/>
</kw>
<kw name="Wait For Page Readystate" library="generalfunctions">
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<msg timestamp="20241230 08:16:11.078" level="INFO">Waiting for page to finish loading
Load Complete.</msg>
<status status="PASS" starttime="20241230 08:16:09.506" endtime="20241230 08:16:11.078"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${result}</var>
<arg>Verify if accountDropdownMenu is loaded</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Verify if accountDropdownMenu is loaded" library="topheaderbar">
<doc>This keyword is used verify if the Home page is loaded. by checking if the user is displayed.
Used after logon</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${DropdownLoaded}</var>
<arg>Wait Until With For Loop</arg>
<arg>${homePageIdentifier}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${homePageIdentifier}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:11.089" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:11.089" endtime="20241230 08:16:11.089"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:11.089" endtime="20241230 08:16:11.186"/>
</kw>
<msg timestamp="20241230 08:16:11.186" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.089" endtime="20241230 08:16:11.186"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:11.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:11.186" endtime="20241230 08:16:11.186"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.089" endtime="20241230 08:16:11.186"/>
</iter>
<status status="PASS" starttime="20241230 08:16:11.089" endtime="20241230 08:16:11.186"/>
</for>
<status status="PASS" starttime="20241230 08:16:11.089" endtime="20241230 08:16:11.186"/>
</kw>
<msg timestamp="20241230 08:16:11.186" level="INFO">${DropdownLoaded} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.086" endtime="20241230 08:16:11.186"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${DropdownLoaded}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:11.186" endtime="20241230 08:16:11.186"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${DropdownLoaded}</arg>
<arg>Fail</arg>
<arg>HomePage is not available</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:11.199" endtime="20241230 08:16:11.199"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.086" endtime="20241230 08:16:11.199"/>
</kw>
<msg timestamp="20241230 08:16:11.199" level="INFO">${status} = PASS</msg>
<msg timestamp="20241230 08:16:11.199" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20241230 08:16:11.086" endtime="20241230 08:16:11.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>Use Fallback Login</arg>
<arg>${LoginUrl}</arg>
<arg>${userNameValue}</arg>
<arg>${passwordValue}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.199" endtime="20241230 08:16:11.199"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.858" endtime="20241230 08:16:11.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${reuseSession} == ${true}</arg>
<arg>Login_StoreCookie</arg>
<arg>${userNameText}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Login_StoreCookie" library="loginpage">
<arg>${userNameText}</arg>
<doc>This function associate and stores the given username with its cookies, for next reuse</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Store smc cookies</arg>
<arg>${userNameText}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Store Smc Cookies" library="cookies">
<arg>${userNameText}</arg>
<status status="PASS" starttime="20241230 08:16:11.207" endtime="20241230 08:16:11.219"/>
</kw>
<msg timestamp="20241230 08:16:11.219" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.199" endtime="20241230 08:16:11.219"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>log</arg>
<arg>Login StoreCookie failed</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:11.219" endtime="20241230 08:16:11.219"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.199" endtime="20241230 08:16:11.219"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.199" endtime="20241230 08:16:11.219"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.858" endtime="20241230 08:16:11.219"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.858" endtime="20241230 08:16:11.219"/>
</kw>
<kw name="Get Title" library="SeleniumLibrary">
<var>${title}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20241230 08:16:11.232" level="INFO">${title} = Engage</msg>
<status status="PASS" starttime="20241230 08:16:11.219" endtime="20241230 08:16:11.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${title}'=='Logon'</arg>
<arg>close browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.236" endtime="20241230 08:16:11.236"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${title}'=='Logon'</arg>
<arg>Login_ThroughForm</arg>
<arg>${Browser}</arg>
<arg>${LoginUrl}</arg>
<arg>${userName}</arg>
<arg>${password}</arg>
<arg>${reuseSession}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.236" endtime="20241230 08:16:11.236"/>
</kw>
<kw name="Verify if logged in" library="loginpage">
<doc>Checks if we are not still on the login page, then checks if the accountdropdown is loaded
to make sure were actually still in SMC</doc>
<kw name="Get Title" library="SeleniumLibrary">
<var>${title}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20241230 08:16:11.248" level="INFO">${title} = Engage</msg>
<status status="PASS" starttime="20241230 08:16:11.236" endtime="20241230 08:16:11.248"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>should not be equal</arg>
<arg>${title}</arg>
<arg>Logon</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${title}</arg>
<arg>Logon</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20241230 08:16:11.248" endtime="20241230 08:16:11.248"/>
</kw>
<msg timestamp="20241230 08:16:11.248" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.248" endtime="20241230 08:16:11.248"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:11.248" endtime="20241230 08:16:11.248"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>FAIL</arg>
<arg>Stil on logon page after login actions</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:11.256" endtime="20241230 08:16:11.256"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${homePageIdentifier}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:11.256" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:11.256" endtime="20241230 08:16:11.256"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:11.264" endtime="20241230 08:16:11.284"/>
</kw>
<msg timestamp="20241230 08:16:11.284" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.256" endtime="20241230 08:16:11.284"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:11.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:11.284" endtime="20241230 08:16:11.284"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.256" endtime="20241230 08:16:11.284"/>
</iter>
<status status="PASS" starttime="20241230 08:16:11.256" endtime="20241230 08:16:11.284"/>
</for>
<status status="PASS" starttime="20241230 08:16:11.256" endtime="20241230 08:16:11.284"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.236" endtime="20241230 08:16:11.284"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>${SCRIPT}</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20241230 08:16:11.296" level="INFO">Executing JavaScript:
document.body.style.zoom = "100%"
Without any arguments.</msg>
<status status="PASS" starttime="20241230 08:16:11.284" endtime="20241230 08:16:11.304"/>
</kw>
<kw name="wait until pageloading spinner appears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:11.308" level="INFO">${xpath} = //div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:11.308" endtime="20241230 08:16:11.308"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:11.345" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:11.308" endtime="20241230 08:16:11.345"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.345" endtime="20241230 08:16:11.345"/>
</kw>
<kw name="Check Element Exists With For Loop and Timeout" library="general_functions">
<var>${status}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Loops with timout of Timeout untill either element is found or max Range is reached
returns True if element was found, False if not, calling function should trigger error if necessary
Please note both the visible check and count can take 0.5 seconds so the entire loop time is around 1.5 seconds</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:11.345" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.345" endtime="20241230 08:16:11.345"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${LastIndex}</var>
<arg>${Range}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:16:11.345" level="INFO">${LastIndex} = 19</msg>
<status status="PASS" starttime="20241230 08:16:11.345" endtime="20241230 08:16:11.345"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Range}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:11.352" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.352" endtime="20241230 08:16:11.352"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:11.364" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:11.352" endtime="20241230 08:16:11.364"/>
</kw>
<msg timestamp="20241230 08:16:11.364" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:11.352" endtime="20241230 08:16:11.364"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.364" endtime="20241230 08:16:11.364"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:11.364" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:11.364" endtime="20241230 08:16:11.364"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.377" endtime="20241230 08:16:11.377"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.377" endtime="20241230 08:16:11.377"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:11.886" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:11.380" endtime="20241230 08:16:11.886"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:11.886" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:11.886" endtime="20241230 08:16:11.886"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.345" endtime="20241230 08:16:11.886"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:11.886" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.886" endtime="20241230 08:16:11.886"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:11.901" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:11.886" endtime="20241230 08:16:11.901"/>
</kw>
<msg timestamp="20241230 08:16:11.901" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:11.886" endtime="20241230 08:16:11.901"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.904" endtime="20241230 08:16:11.904"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:11.914" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:11.904" endtime="20241230 08:16:11.914"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.914" endtime="20241230 08:16:11.914"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:11.914" endtime="20241230 08:16:11.914"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:12.427" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:11.914" endtime="20241230 08:16:12.427"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:12.427" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:12.427" endtime="20241230 08:16:12.427"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.886" endtime="20241230 08:16:12.427"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:12.430" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:12.427" endtime="20241230 08:16:12.430"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:12.447" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:12.430" endtime="20241230 08:16:12.447"/>
</kw>
<msg timestamp="20241230 08:16:12.447" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:12.430" endtime="20241230 08:16:12.447"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:12.447" endtime="20241230 08:16:12.447"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:12.459" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:12.447" endtime="20241230 08:16:12.459"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:12.459" endtime="20241230 08:16:12.459"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:12.463" endtime="20241230 08:16:12.463"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:12.976" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:12.463" endtime="20241230 08:16:12.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:12.976" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:12.976" endtime="20241230 08:16:12.976"/>
</kw>
<status status="PASS" starttime="20241230 08:16:12.427" endtime="20241230 08:16:12.976"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:12.979" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:12.976" endtime="20241230 08:16:12.979"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:12.996" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:12.979" endtime="20241230 08:16:12.996"/>
</kw>
<msg timestamp="20241230 08:16:12.996" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:12.979" endtime="20241230 08:16:12.996"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:12.996" endtime="20241230 08:16:12.996"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:12.996" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:12.996" endtime="20241230 08:16:12.996"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:13.009" endtime="20241230 08:16:13.009"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:13.009" endtime="20241230 08:16:13.009"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:13.525" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:13.011" endtime="20241230 08:16:13.525"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:13.525" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:13.525" endtime="20241230 08:16:13.525"/>
</kw>
<status status="PASS" starttime="20241230 08:16:12.976" endtime="20241230 08:16:13.525"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:13.525" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:13.525" endtime="20241230 08:16:13.525"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:13.529" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:13.529" endtime="20241230 08:16:13.529"/>
</kw>
<msg timestamp="20241230 08:16:13.529" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:13.529" endtime="20241230 08:16:13.529"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:13.542" endtime="20241230 08:16:13.542"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:13.545" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:13.542" endtime="20241230 08:16:13.545"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:13.545" endtime="20241230 08:16:13.545"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:13.545" endtime="20241230 08:16:13.545"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:14.050" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:13.545" endtime="20241230 08:16:14.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:14.050" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:14.050" endtime="20241230 08:16:14.050"/>
</kw>
<status status="PASS" starttime="20241230 08:16:13.525" endtime="20241230 08:16:14.050"/>
</iter>
<iter>
<var name="${INDEX}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:14.050" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:14.050" endtime="20241230 08:16:14.050"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:14.091" level="INFO">Element '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' is displayed.</msg>
<status status="PASS" starttime="20241230 08:16:14.055" endtime="20241230 08:16:14.091"/>
</kw>
<msg timestamp="20241230 08:16:14.091" level="INFO">${EleVisibleStatus} = True</msg>
<status status="PASS" starttime="20241230 08:16:14.050" endtime="20241230 08:16:14.091"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:14.091" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:14.091" endtime="20241230 08:16:14.091"/>
</kw>
<status status="PASS" starttime="20241230 08:16:14.050" endtime="20241230 08:16:14.091"/>
</iter>
<status status="PASS" starttime="20241230 08:16:11.345" endtime="20241230 08:16:14.091"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bVisible}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:14.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:14.095" endtime="20241230 08:16:14.095"/>
</kw>
<msg timestamp="20241230 08:16:14.095" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:11.345" endtime="20241230 08:16:14.095"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>log</arg>
<arg>Pageloading spinner not found after timeout, check if necessary</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:14.095" endtime="20241230 08:16:14.095"/>
</kw>
<status status="PASS" starttime="20241230 08:16:11.304" endtime="20241230 08:16:14.095"/>
</kw>
<kw name="wait until pageloading spinner dissapears" library="leftnavigationbar">
<arg>NrOfLoops=240</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:14.095" level="INFO">${xpath} = //div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:14.095" endtime="20241230 08:16:14.095"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:14.112" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:14.095" endtime="20241230 08:16:14.112"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:14.112" endtime="20241230 08:16:14.112"/>
</kw>
<for flavor="IN RANGE">
<var>${Index}</var>
<value>0</value>
<value>${NrOfLoops}</value>
<iter>
<var name="${Index}">0</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:14.112" endtime="20241230 08:16:14.112"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:14.625" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:14.112" endtime="20241230 08:16:14.625"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:14.627" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:14.625" endtime="20241230 08:16:14.627"/>
</kw>
<status status="PASS" starttime="20241230 08:16:14.112" endtime="20241230 08:16:14.627"/>
</iter>
<iter>
<var name="${Index}">1</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:14.627" endtime="20241230 08:16:14.627"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:15.131" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:14.627" endtime="20241230 08:16:15.131"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:15.173" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:15.131" endtime="20241230 08:16:15.173"/>
</kw>
<status status="PASS" starttime="20241230 08:16:14.627" endtime="20241230 08:16:15.173"/>
</iter>
<iter>
<var name="${Index}">2</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:15.181" endtime="20241230 08:16:15.181"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:15.682" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:15.181" endtime="20241230 08:16:15.682"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:15.689" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:15.682" endtime="20241230 08:16:15.689"/>
</kw>
<status status="PASS" starttime="20241230 08:16:15.173" endtime="20241230 08:16:15.689"/>
</iter>
<iter>
<var name="${Index}">3</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:15.689" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:15.689" endtime="20241230 08:16:15.689"/>
</kw>
<status status="PASS" starttime="20241230 08:16:15.689" endtime="20241230 08:16:15.689"/>
</iter>
<status status="PASS" starttime="20241230 08:16:14.112" endtime="20241230 08:16:15.689"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:15.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:15.697" endtime="20241230 08:16:15.697"/>
</kw>
<status status="PASS" starttime="20241230 08:16:15.697" endtime="20241230 08:16:15.697"/>
</kw>
<msg timestamp="20241230 08:16:15.697" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:14.095" endtime="20241230 08:16:15.697"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:15.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:15.697" endtime="20241230 08:16:15.697"/>
</kw>
<status status="PASS" starttime="20241230 08:16:14.095" endtime="20241230 08:16:15.697"/>
</kw>
<kw name="wait until general grid loading spinner appears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${LoadingSpinner_Dashboard}|//div[@class="k-loading-image"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:15.697" level="INFO">${xpath} = //div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]</msg>
<status status="PASS" starttime="20241230 08:16:15.697" endtime="20241230 08:16:15.697"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:15.709" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:15.697" endtime="20241230 08:16:15.709"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:15.709" endtime="20241230 08:16:15.709"/>
</kw>
<kw name="Check Element Exists With For Loop and Timeout" library="general_functions">
<var>${Status}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Loops with timout of Timeout untill either element is found or max Range is reached
returns True if element was found, False if not, calling function should trigger error if necessary
Please note both the visible check and count can take 0.5 seconds so the entire loop time is around 1.5 seconds</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:15.722" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:15.722" endtime="20241230 08:16:15.722"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${LastIndex}</var>
<arg>${Range}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:16:15.722" level="INFO">${LastIndex} = 9</msg>
<status status="PASS" starttime="20241230 08:16:15.722" endtime="20241230 08:16:15.722"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Range}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:15.726" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:15.726" endtime="20241230 08:16:15.726"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:15.742" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:15.726" endtime="20241230 08:16:15.742"/>
</kw>
<msg timestamp="20241230 08:16:15.742" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:15.726" endtime="20241230 08:16:15.742"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:15.742" endtime="20241230 08:16:15.742"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:15.755" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:15.742" endtime="20241230 08:16:15.755"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:15.755" endtime="20241230 08:16:15.755"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:15.755" endtime="20241230 08:16:15.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:16.271" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:15.758" endtime="20241230 08:16:16.271"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:16.271" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:16.271" endtime="20241230 08:16:16.271"/>
</kw>
<status status="PASS" starttime="20241230 08:16:15.722" endtime="20241230 08:16:16.271"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:16.276" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:16.276" endtime="20241230 08:16:16.276"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:16.288" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:16.276" endtime="20241230 08:16:16.291"/>
</kw>
<msg timestamp="20241230 08:16:16.291" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:16.276" endtime="20241230 08:16:16.291"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:16.291" endtime="20241230 08:16:16.291"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:16.291" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:16.291" endtime="20241230 08:16:16.291"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:16.304" endtime="20241230 08:16:16.304"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:16.304" endtime="20241230 08:16:16.304"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:16.821" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:16.307" endtime="20241230 08:16:16.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:16.821" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:16.821" endtime="20241230 08:16:16.821"/>
</kw>
<status status="PASS" starttime="20241230 08:16:16.271" endtime="20241230 08:16:16.821"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:16.824" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:16.824" endtime="20241230 08:16:16.824"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:16.841" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:16.824" endtime="20241230 08:16:16.841"/>
</kw>
<msg timestamp="20241230 08:16:16.841" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:16.824" endtime="20241230 08:16:16.841"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:16.841" endtime="20241230 08:16:16.841"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:16.853" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:16.841" endtime="20241230 08:16:16.853"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:16.853" endtime="20241230 08:16:16.853"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:16.853" endtime="20241230 08:16:16.853"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:17.370" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:16.856" endtime="20241230 08:16:17.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:17.370" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:17.370" endtime="20241230 08:16:17.370"/>
</kw>
<status status="PASS" starttime="20241230 08:16:16.821" endtime="20241230 08:16:17.373"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:17.373" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:17.373" endtime="20241230 08:16:17.373"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:17.386" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:17.373" endtime="20241230 08:16:17.390"/>
</kw>
<msg timestamp="20241230 08:16:17.390" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:17.373" endtime="20241230 08:16:17.390"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:17.390" endtime="20241230 08:16:17.390"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:17.390" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:17.390" endtime="20241230 08:16:17.390"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:17.390" endtime="20241230 08:16:17.390"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:17.402" endtime="20241230 08:16:17.402"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:17.903" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:17.402" endtime="20241230 08:16:17.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:17.903" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:17.903" endtime="20241230 08:16:17.903"/>
</kw>
<status status="PASS" starttime="20241230 08:16:17.373" endtime="20241230 08:16:17.903"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:17.906" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:17.903" endtime="20241230 08:16:17.906"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:17.919" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:17.906" endtime="20241230 08:16:17.919"/>
</kw>
<msg timestamp="20241230 08:16:17.919" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:17.906" endtime="20241230 08:16:17.919"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:17.919" endtime="20241230 08:16:17.919"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:17.924" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:17.919" endtime="20241230 08:16:17.924"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:17.924" endtime="20241230 08:16:17.924"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:17.924" endtime="20241230 08:16:17.924"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:18.436" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:17.924" endtime="20241230 08:16:18.436"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:18.436" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:18.436" endtime="20241230 08:16:18.436"/>
</kw>
<status status="PASS" starttime="20241230 08:16:17.903" endtime="20241230 08:16:18.436"/>
</iter>
<iter>
<var name="${INDEX}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:18.439" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:18.439" endtime="20241230 08:16:18.439"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:18.452" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:18.439" endtime="20241230 08:16:18.452"/>
</kw>
<msg timestamp="20241230 08:16:18.452" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:18.439" endtime="20241230 08:16:18.452"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:18.452" endtime="20241230 08:16:18.452"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:18.455" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:18.452" endtime="20241230 08:16:18.455"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:18.455" endtime="20241230 08:16:18.455"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:18.455" endtime="20241230 08:16:18.455"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:18.969" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:18.455" endtime="20241230 08:16:18.969"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:18.969" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:18.969" endtime="20241230 08:16:18.969"/>
</kw>
<status status="PASS" starttime="20241230 08:16:18.436" endtime="20241230 08:16:18.969"/>
</iter>
<iter>
<var name="${INDEX}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:18.972" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:18.969" endtime="20241230 08:16:18.972"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:18.985" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:18.972" endtime="20241230 08:16:18.985"/>
</kw>
<msg timestamp="20241230 08:16:18.985" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:18.972" endtime="20241230 08:16:18.985"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:18.985" endtime="20241230 08:16:18.985"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:18.989" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:18.985" endtime="20241230 08:16:18.989"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:18.989" endtime="20241230 08:16:18.989"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:18.989" endtime="20241230 08:16:18.989"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:19.502" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:18.989" endtime="20241230 08:16:19.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:19.502" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:19.502" endtime="20241230 08:16:19.502"/>
</kw>
<status status="PASS" starttime="20241230 08:16:18.969" endtime="20241230 08:16:19.502"/>
</iter>
<iter>
<var name="${INDEX}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:19.502" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:19.502" endtime="20241230 08:16:19.502"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:19.518" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:19.502" endtime="20241230 08:16:19.518"/>
</kw>
<msg timestamp="20241230 08:16:19.518" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:19.502" endtime="20241230 08:16:19.518"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:19.518" endtime="20241230 08:16:19.518"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:19.525" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:19.518" endtime="20241230 08:16:19.525"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:19.525" endtime="20241230 08:16:19.525"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:19.533" endtime="20241230 08:16:19.533"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:20.035" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:19.533" endtime="20241230 08:16:20.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:20.035" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:20.035" endtime="20241230 08:16:20.035"/>
</kw>
<status status="PASS" starttime="20241230 08:16:19.502" endtime="20241230 08:16:20.035"/>
</iter>
<iter>
<var name="${INDEX}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:20.038" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.035" endtime="20241230 08:16:20.038"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:20.054" level="FAIL">Element with locator '//div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:20.038" endtime="20241230 08:16:20.054"/>
</kw>
<msg timestamp="20241230 08:16:20.054" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:20.038" endtime="20241230 08:16:20.054"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:20.054" endtime="20241230 08:16:20.054"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:20.067" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:20.054" endtime="20241230 08:16:20.067"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:20.067" endtime="20241230 08:16:20.067"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:20.071" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:20.067" endtime="20241230 08:16:20.071"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.035" endtime="20241230 08:16:20.071"/>
</iter>
<status status="PASS" starttime="20241230 08:16:15.722" endtime="20241230 08:16:20.071"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bVisible}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:20.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.071" endtime="20241230 08:16:20.071"/>
</kw>
<msg timestamp="20241230 08:16:20.071" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:15.722" endtime="20241230 08:16:20.071"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${Status}</arg>
<arg>log</arg>
<arg>Grid loading spinner not shown after timeout, check if necessary</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:20.071" endtime="20241230 08:16:20.071"/>
</kw>
<status status="PASS" starttime="20241230 08:16:15.697" endtime="20241230 08:16:20.071"/>
</kw>
<kw name="Wait Until General Grid Loading Spinner Disappears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${LoadingSpinner_Dashboard}|//div[@class="k-loading-image"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:20.071" level="INFO">${xpath} = //div[contains(@class,"sg-grid-loading")][not(contains(@class,"ng-hide"))]/div/div[@class="spinner"]|//div[@class="k-loading-image"]</msg>
<status status="PASS" starttime="20241230 08:16:20.071" endtime="20241230 08:16:20.071"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:20.087" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:20.071" endtime="20241230 08:16:20.087"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:20.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.087" endtime="20241230 08:16:20.087"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.087" endtime="20241230 08:16:20.087"/>
</kw>
<msg timestamp="20241230 08:16:20.087" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.071" endtime="20241230 08:16:20.087"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:20.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.087" endtime="20241230 08:16:20.087"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.071" endtime="20241230 08:16:20.087"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.718" endtime="20241230 08:16:20.087"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.718" endtime="20241230 08:16:20.087"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.693" endtime="20241230 08:16:20.087"/>
</kw>
<kw name="Switch Organizations" library="topheaderbar">
<arg>${Organization}</arg>
<doc>This keyword is used to switch to provided organization which is passed as argument from dashboard page
Arguments:-Organization to which you want to switch</doc>
<kw name="Get Location" library="SeleniumLibrary">
<var>${CurrentUrl}</var>
<doc>Returns the current browser window URL.</doc>
<msg timestamp="20241230 08:16:20.103" level="INFO">${CurrentUrl} = https://test.slgnt.io/Portal/ES/85b7dda4-7203-41a5-9a60-89cc3bcc3ec9/exchangedashboard/tasks/2795848?orderBy_q=modified_dt&amp;direction_q=desc</msg>
<status status="PASS" starttime="20241230 08:16:20.087" endtime="20241230 08:16:20.103"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCompare}</var>
<arg>${CurrentUrl}</arg>
<arg>/Portal/ES</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:20.103" level="INFO">${bCompare} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.103"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>Go To</arg>
<arg>${URL}/ES</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.103"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>wait for page readystate</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.103"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>//div[@id="contextDropdownMenu"]/span[@class="text"]</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:20.103" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.103"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.135"/>
</kw>
<msg timestamp="20241230 08:16:20.135" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.135"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:20.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.135" endtime="20241230 08:16:20.135"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.135"/>
</iter>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.135"/>
</for>
<status status="PASS" starttime="20241230 08:16:20.103" endtime="20241230 08:16:20.135"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${CurrentOrg}</var>
<arg>//div[@id="contextDropdownMenu"]/span[@class="text"]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:20.168" level="INFO">${CurrentOrg} = QA_automatic_testing</msg>
<status status="PASS" starttime="20241230 08:16:20.135" endtime="20241230 08:16:20.168"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCompare}</var>
<arg>${CurrentOrg}</arg>
<arg>${OrganizationName}</arg>
<arg>No</arg>
<arg>No</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:20.168" level="INFO">${bCompare} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.168" endtime="20241230 08:16:20.168"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>log</arg>
<arg>No need to switch organisation ${OrganizationName} as its already selected</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log" library="BuiltIn">
<arg>No need to switch organisation ${OrganizationName} as its already selected</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:20.168" level="INFO">No need to switch organisation QA_automatic_testing as its already selected</msg>
<status status="PASS" starttime="20241230 08:16:20.168" endtime="20241230 08:16:20.168"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.168" endtime="20241230 08:16:20.168"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:20.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.168" endtime="20241230 08:16:20.168"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.168" endtime="20241230 08:16:20.168"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.087" endtime="20241230 08:16:20.168"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${data_string}</var>
<arg>[</arg>
<arg>["ID","MAIL","NAME","OPTOUT","TESTUSER"],</arg>
<arg>[1,"User1@example.com","User1",1,1],</arg>
<arg>[2,"User2@example.com","User2",2,2],</arg>
<arg>[3,"User3@example.com","User3",3,3],</arg>
<arg>[4,"User4@example.com","User4",4,4],</arg>
<arg>[5,"User5@example.com","User5",5,5],</arg>
<arg>[6,"User6@example.com","User6",6,6],</arg>
<arg>[7,"User7@example.com","User7",7,7],</arg>
<arg>[8,"User8@example.com","User8",8,8],</arg>
<arg>[9,"User9@example.com","User9",9,9],</arg>
<arg>[10,"User10@example.com","User10",10,10],</arg>
<arg>[11,"User11@example.com","User11",11,11],</arg>
<arg>[12,"User12@example.com","User12",12,12],</arg>
<arg>[13,"User13@example.com","User13",13,13],</arg>
<arg>[14,"User14@example.com","User14",14,14],</arg>
<arg>[15,"User15@example.com","User15",15,15],</arg>
<arg>[16,"User16@example.com","User16",16,16],</arg>
<arg>[17,"User17@example.com","User17",17,17],</arg>
<arg>[18,"User18@example.com","User18",18,18],</arg>
<arg>[19,"User19@example.com","User19",19,19],</arg>
<arg>[20,"User20@example.com","User20",20,20],</arg>
<arg>[21,"User21@example.com","User21",21,21],</arg>
<arg>[22,"User22@example.com","User22",22,22],</arg>
<arg>[23,"User23@example.com","User23",23,23],</arg>
<arg>[24,"User24@example.com","User24",24,24],</arg>
<arg>[25,"User25@example.com","User25",25,25],</arg>
<arg>[26,"User26@example.com","User26",26,26],</arg>
<arg>[27,"User27@example.com","User27",27,27],</arg>
<arg>[28,"User28@example.com","User28",28,28],</arg>
<arg>[29,"User29@example.com","User29",29,29],</arg>
<arg>[30,"User30@example.com","User30",30,30],</arg>
<arg>[31,"User31@example.com","User31",31,31],</arg>
<arg>[32,"User32@example.com","User32",32,32],</arg>
<arg>[33,"User33@example.com","User33",33,33],</arg>
<arg>[34,"User34@example.com","User34",34,34],</arg>
<arg>[35,"User35@example.com","User35",35,35]</arg>
<arg>]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20241230 08:16:20.168" level="INFO">${data_string} = [ ["ID","MAIL","NAME","OPTOUT","TESTUSER"], [1,"User1@example.com","User1",1,1], [2,"User2@example.com","User2",2,2], [3,"User3@example.com","User3",3,3], [4,"User4@example.com","User4",4,4], ...</msg>
<status status="PASS" starttime="20241230 08:16:20.168" endtime="20241230 08:16:20.168"/>
</kw>
<kw name="Create List Using API If Not Available And Add Data" library="list_usecases">
<arg>${SegmentListName}</arg>
<arg>${data_string}</arg>
<doc>This keywords checks if list is available, creates new if not available</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${ListAvailable}</var>
<arg>Verify If List Exists via API</arg>
<arg>${ListName}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Verify If List Exists via API" library="list_usecases">
<arg>${ListName}</arg>
<doc>This keywords is used to verify if the List exists using API, additional parameter ListNameApi is required if listname and api name differ</doc>
<if>
<branch type="IF" condition="'${ListNameApi}'=='${EMPTY}'">
<kw name="Set Variable" library="BuiltIn">
<var>${ListNameApi}</var>
<arg>${ListName}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:20.280" level="INFO">${ListNameApi} = Automation_DONOTUSE_SegmentList</msg>
<status status="PASS" starttime="20241230 08:16:20.280" endtime="20241230 08:16:20.280"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.280" endtime="20241230 08:16:20.280"/>
</branch>
<status status="PASS" starttime="20241230 08:16:20.265" endtime="20241230 08:16:20.280"/>
</if>
<kw name="Create Session No Logging" library="general_functions">
<arg>Api_Get_List</arg>
<arg>${URL}/api/</arg>
<arg>${headers}</arg>
<arg>max_retries=${Api_Max_Retries}</arg>
<arg>disable_warnings=${Api_Disable_Warnings}</arg>
<arg>timeout=${Api_Default_Timout}</arg>
<kw name="Set Log Level" library="BuiltIn">
<arg>NONE</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<status status="PASS" starttime="20241230 08:16:20.294" endtime="20241230 08:16:20.294"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{empty_headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" starttime="20241230 08:16:20.294" endtime="20241230 08:16:20.294"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${headers}</var>
<arg>${headers} == ${None}</arg>
<arg>${empty_headers}</arg>
<arg>${headers}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" starttime="20241230 08:16:20.297" endtime="20241230 08:16:20.297"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>create session</arg>
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" starttime="20241230 08:16:20.297" endtime="20241230 08:16:20.297"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.297" endtime="20241230 08:16:20.297"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20241230 08:16:20.297" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:16:20.297" endtime="20241230 08:16:20.297"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.280" endtime="20241230 08:16:20.297"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>Api_Get_List</arg>
<arg>url=/organizations/${Org}/lists?search=${ListName}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20241230 08:16:20.490" level="INFO">GET Request : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists?search=Automation_DONOTUSE_SegmentList 
 path_url=/Portal/api/organizations/QA_automatic_testing/lists?search=Automation_DONOTUSE_SegmentList 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'x-apikey': 'gfF37uycuwJLlau2AzHKMrxp3uHCOWxKvcus1pc09eU=:r7m4WxcsJJMzhHpYYzsUdT0PL194XBcc9DBGx3yJtG4=', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20241230 08:16:20.490" level="INFO">GET Response : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists?search=Automation_DONOTUSE_SegmentList 
 status=200, reason=OK 
 headers={'Date': 'Mon, 30 Dec 2024 07:16:16 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'pragma': 'no-cache', 'expires': '-1', 'x-ratelimit-limit': '2500, 2500;w=60', 'x-ratelimit-remaining': '2499', 'x-ratelimit-reset': '60', 'x-activity-id': '851672f5-3e1a-4e52-bdf9-875bb60e094f', 'x-operation-id': '5e174cdfc6fe424e45fc92731f0c1f9a', 'request-context': 'appId=cid-v1:bf05a8da-00d7-4a65-a5de-c0345ac655c4', 'access-control-expose-headers': 'Request-Context', 'x-content-type-options': 'nosniff', 'strict-transport-security': 'max-age=31536000; includeSubdomains', 'referrer-policy': 'strict-origin', 'x-xss-protection': '1; mode=block', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8fa03e503c2eeefb-LHR', 'Content-Encoding': 'gzip'} 
 body={
  "lists": [
    {
      "id": 585630,
      "type": "Userlist",
      "api_name": "Automation_DONOTUSE_SegmentList",
      "name": "Automation_DONOTUSE_SegmentList"
    }
  ]
} 
 </msg>
<msg timestamp="20241230 08:16:20.490" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20241230 08:16:20.297" endtime="20241230 08:16:20.490"/>
</kw>
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20241230 08:16:20.490" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20241230 08:16:20.490" endtime="20241230 08:16:20.490"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resp.status_code}</arg>
<arg>200</arg>
<arg>Verify If List Exists via API failed with ${resp.text}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20241230 08:16:20.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20241230 08:16:20.490" endtime="20241230 08:16:20.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>"api_name": "${ListNameApi}"</arg>
<arg>ignore_case=true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241230 08:16:20.539" endtime="20241230 08:16:20.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>"name": "${ListName}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20241230 08:16:20.571" endtime="20241230 08:16:20.588"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${resp}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20241230 08:16:20.588" endtime="20241230 08:16:20.588"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.245" endtime="20241230 08:16:20.601"/>
</kw>
<msg timestamp="20241230 08:16:20.601" level="INFO">${ListAvailable} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.245" endtime="20241230 08:16:20.601"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${ListAvailable}</arg>
<arg>Create List And Add Data Using API</arg>
<arg>${ListName}</arg>
<arg>${data_string}</arg>
<arg>${fieldname}</arg>
<arg>${datatype}</arg>
<arg>${Length}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:20.601" endtime="20241230 08:16:20.601"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.168" endtime="20241230 08:16:20.601"/>
</kw>
<status status="PASS" starttime="20241230 08:16:04.690" endtime="20241230 08:16:20.601"/>
</kw>
<test id="s1-s1-s1-t1" name="Create_List">
<kw name="Click on Lists Link" library="leftnavigationbar">
<doc>This keywords is used to Click On Lists Link</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${ListLink}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:20.608" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:20.608" endtime="20241230 08:16:20.608"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:20.608" endtime="20241230 08:16:20.636"/>
</kw>
<msg timestamp="20241230 08:16:20.636" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.608" endtime="20241230 08:16:20.636"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:20.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.636" endtime="20241230 08:16:20.636"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.608" endtime="20241230 08:16:20.636"/>
</iter>
<status status="PASS" starttime="20241230 08:16:20.608" endtime="20241230 08:16:20.636"/>
</for>
<status status="PASS" starttime="20241230 08:16:20.601" endtime="20241230 08:16:20.636"/>
</kw>
<kw name="Get Current Active Chapter" library="leftnavigationbar">
<var>${ActiveChapter}</var>
<doc>This keywords checks which chapter is active and returns its name</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Xpath}</var>
<arg>//div[contains(@class,"sg-flyout__item")][contains(@class,"sg-flyout__item--active")]//a</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:20.636" level="INFO">${Xpath} = //div[contains(@class,"sg-flyout__item")][contains(@class,"sg-flyout__item--active")]//a</msg>
<status status="PASS" starttime="20241230 08:16:20.636" endtime="20241230 08:16:20.636"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:20.657" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:20.636" endtime="20241230 08:16:20.657"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>CHAPTER_NOT_FOUND</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:20.657" endtime="20241230 08:16:20.657"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${Status}</var>
<var>${ActiveChapter}</var>
<arg>SeleniumLibrary.get element attribute</arg>
<arg>${Xpath}</arg>
<arg>sg-qa-id</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<arg>${Xpath}</arg>
<arg>sg-qa-id</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<status status="PASS" starttime="20241230 08:16:20.657" endtime="20241230 08:16:20.680"/>
</kw>
<msg timestamp="20241230 08:16:20.680" level="INFO">${Status} = PASS</msg>
<msg timestamp="20241230 08:16:20.680" level="INFO">${ActiveChapter} = $ctrl.flyoutMenu__item--APP_DATA_EXCHANGE</msg>
<status status="PASS" starttime="20241230 08:16:20.657" endtime="20241230 08:16:20.680"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:20.680" endtime="20241230 08:16:20.688"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>return from keyword</arg>
<arg>CHAPTER_NOT_FOUND</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:20.688" endtime="20241230 08:16:20.688"/>
</kw>
<kw name="Get Index Inside String" library="generalfunctions">
<var>${indexOfChapterName}</var>
<arg>${ActiveChapter}</arg>
<arg>item--</arg>
<arg>True</arg>
<doc>Gdu: Return location of stringtwo in stringone or -1 if not found
Arguments:  boolean bIgnoreCase:    Yes means function will ignore case
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne
            bReverse:   use to start search at the end</doc>
<msg timestamp="20241230 08:16:20.688" level="INFO">${indexOfChapterName} = 18</msg>
<status status="PASS" starttime="20241230 08:16:20.688" endtime="20241230 08:16:20.688"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${indexOfChapterName}</var>
<arg>${indexOfChapterName}+6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:16:20.688" level="INFO">${indexOfChapterName} = 24</msg>
<status status="PASS" starttime="20241230 08:16:20.688" endtime="20241230 08:16:20.688"/>
</kw>
<kw name="Get Substring" library="String">
<var>${substring}</var>
<arg>${ActiveChapter}</arg>
<arg>${indexOfChapterName}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241230 08:16:20.688" level="INFO">${substring} = APP_DATA_EXCHANGE</msg>
<status status="PASS" starttime="20241230 08:16:20.688" endtime="20241230 08:16:20.688"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${substring}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:20.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.688" endtime="20241230 08:16:20.688"/>
</kw>
<msg timestamp="20241230 08:16:20.688" level="INFO">${ActiveChapter} = APP_DATA_EXCHANGE</msg>
<status status="PASS" starttime="20241230 08:16:20.636" endtime="20241230 08:16:20.688"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCompareChapter}</var>
<arg>${ActiveChapter}</arg>
<arg>LISTS</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:20.688" level="INFO">${bCompareChapter} = False</msg>
<status status="PASS" starttime="20241230 08:16:20.688" endtime="20241230 08:16:20.688"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${ListLink}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:20.697" endtime="20241230 08:16:20.717"/>
</kw>
<msg timestamp="20241230 08:16:20.717" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.697" endtime="20241230 08:16:20.717"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:20.730" endtime="20241230 08:16:20.730"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:20.730" level="INFO">Clicking element '//a[contains(@sg-qa-id,'--APP_LISTS')]/i'.</msg>
<status status="PASS" starttime="20241230 08:16:20.730" endtime="20241230 08:16:20.836"/>
</kw>
<msg timestamp="20241230 08:16:20.837" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:20.730" endtime="20241230 08:16:20.837"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:20.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:20.838" endtime="20241230 08:16:20.838"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.688" endtime="20241230 08:16:20.838"/>
</kw>
<kw name="Confirm Browser Popup if appears" library="edit_topbuttonbar">
<kw name="Handle Simple Alert" library="generalfunctions">
<var>${bAlert}</var>
<doc>Gdu: Handle a simple alert
Click on ok on the alert</doc>
<msg timestamp="20241230 08:16:22.813" level="INFO">${bAlert} = False</msg>
<status status="PASS" starttime="20241230 08:16:20.838" endtime="20241230 08:16:22.813"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>not ${bAlert}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:22.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:22.813" endtime="20241230 08:16:22.813"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.838" endtime="20241230 08:16:22.813"/>
</kw>
<if>
<branch type="IF" condition="not ${bCompareChapter}">
<kw name="wait until pageloading spinner appears" library="leftnavigationbar">
<arg>NrOfLoops=10</arg>
<arg>Timeout=0.5</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:22.813" level="INFO">${xpath} = //div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:22.813" endtime="20241230 08:16:22.813"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:22.935" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:22.813" endtime="20241230 08:16:22.943"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:22.943" endtime="20241230 08:16:22.943"/>
</kw>
<kw name="Check Element Exists With For Loop and Timeout" library="general_functions">
<var>${status}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Loops with timout of Timeout untill either element is found or max Range is reached
returns True if element was found, False if not, calling function should trigger error if necessary
Please note both the visible check and count can take 0.5 seconds so the entire loop time is around 1.5 seconds</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:22.943" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:22.943" endtime="20241230 08:16:22.943"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${LastIndex}</var>
<arg>${Range}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:16:22.943" level="INFO">${LastIndex} = 9</msg>
<status status="PASS" starttime="20241230 08:16:22.943" endtime="20241230 08:16:22.943"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Range}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:22.943" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:22.943" endtime="20241230 08:16:22.943"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:22.958" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:22.950" endtime="20241230 08:16:22.958"/>
</kw>
<msg timestamp="20241230 08:16:22.958" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:22.950" endtime="20241230 08:16:22.958"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:22.966" endtime="20241230 08:16:22.966"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:22.975" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:22.966" endtime="20241230 08:16:22.975"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:22.975" endtime="20241230 08:16:22.975"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:22.975" endtime="20241230 08:16:22.975"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:23.476" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:22.975" endtime="20241230 08:16:23.476"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:23.476" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:23.476" endtime="20241230 08:16:23.476"/>
</kw>
<status status="PASS" starttime="20241230 08:16:22.943" endtime="20241230 08:16:23.476"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:23.479" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:23.479" endtime="20241230 08:16:23.479"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:23.495" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:23.479" endtime="20241230 08:16:23.495"/>
</kw>
<msg timestamp="20241230 08:16:23.495" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:23.479" endtime="20241230 08:16:23.495"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:23.495" endtime="20241230 08:16:23.495"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:23.508" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:23.495" endtime="20241230 08:16:23.508"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:23.508" endtime="20241230 08:16:23.508"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:23.508" endtime="20241230 08:16:23.511"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:24.025" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:23.511" endtime="20241230 08:16:24.025"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:24.025" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:24.025" endtime="20241230 08:16:24.025"/>
</kw>
<status status="PASS" starttime="20241230 08:16:23.476" endtime="20241230 08:16:24.025"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:24.029" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:24.025" endtime="20241230 08:16:24.029"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:24.041" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:24.029" endtime="20241230 08:16:24.041"/>
</kw>
<msg timestamp="20241230 08:16:24.041" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:24.029" endtime="20241230 08:16:24.041"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:24.041" endtime="20241230 08:16:24.041"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:24.044" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:24.041" endtime="20241230 08:16:24.044"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:24.044" endtime="20241230 08:16:24.044"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:24.044" endtime="20241230 08:16:24.044"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:24.550" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:24.044" endtime="20241230 08:16:24.550"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:24.550" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:24.550" endtime="20241230 08:16:24.550"/>
</kw>
<status status="PASS" starttime="20241230 08:16:24.025" endtime="20241230 08:16:24.550"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:24.550" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:24.550" endtime="20241230 08:16:24.550"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:24.565" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:24.550" endtime="20241230 08:16:24.565"/>
</kw>
<msg timestamp="20241230 08:16:24.565" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:24.550" endtime="20241230 08:16:24.565"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:24.565" endtime="20241230 08:16:24.565"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:24.578" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:24.565" endtime="20241230 08:16:24.578"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:24.578" endtime="20241230 08:16:24.578"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:24.578" endtime="20241230 08:16:24.578"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:25.091" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:24.578" endtime="20241230 08:16:25.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:25.091" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:25.091" endtime="20241230 08:16:25.091"/>
</kw>
<status status="PASS" starttime="20241230 08:16:24.550" endtime="20241230 08:16:25.091"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:25.094" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:25.094" endtime="20241230 08:16:25.094"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:25.110" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:25.094" endtime="20241230 08:16:25.110"/>
</kw>
<msg timestamp="20241230 08:16:25.110" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:25.094" endtime="20241230 08:16:25.110"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:25.110" endtime="20241230 08:16:25.110"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:25.123" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:25.110" endtime="20241230 08:16:25.123"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:25.123" endtime="20241230 08:16:25.123"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:25.127" endtime="20241230 08:16:25.127"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:25.640" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:25.127" endtime="20241230 08:16:25.640"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:25.640" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:25.640" endtime="20241230 08:16:25.640"/>
</kw>
<status status="PASS" starttime="20241230 08:16:25.091" endtime="20241230 08:16:25.640"/>
</iter>
<iter>
<var name="${INDEX}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:25.643" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:25.643" endtime="20241230 08:16:25.643"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:25.660" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:25.643" endtime="20241230 08:16:25.660"/>
</kw>
<msg timestamp="20241230 08:16:25.660" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:25.643" endtime="20241230 08:16:25.660"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:25.660" endtime="20241230 08:16:25.660"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:25.673" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:25.660" endtime="20241230 08:16:25.673"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:25.673" endtime="20241230 08:16:25.676"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:25.676" endtime="20241230 08:16:25.676"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:26.190" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:25.676" endtime="20241230 08:16:26.190"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:26.190" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:26.190" endtime="20241230 08:16:26.190"/>
</kw>
<status status="PASS" starttime="20241230 08:16:25.640" endtime="20241230 08:16:26.190"/>
</iter>
<iter>
<var name="${INDEX}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:26.193" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:26.193" endtime="20241230 08:16:26.193"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:26.206" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:26.193" endtime="20241230 08:16:26.206"/>
</kw>
<msg timestamp="20241230 08:16:26.206" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:26.193" endtime="20241230 08:16:26.206"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:26.206" endtime="20241230 08:16:26.206"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:26.209" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:26.209" endtime="20241230 08:16:26.209"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:26.209" endtime="20241230 08:16:26.209"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:26.209" endtime="20241230 08:16:26.209"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:26.723" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:26.209" endtime="20241230 08:16:26.723"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:26.723" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:26.723" endtime="20241230 08:16:26.723"/>
</kw>
<status status="PASS" starttime="20241230 08:16:26.190" endtime="20241230 08:16:26.723"/>
</iter>
<iter>
<var name="${INDEX}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:26.726" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:26.726" endtime="20241230 08:16:26.726"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:26.742" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:26.726" endtime="20241230 08:16:26.742"/>
</kw>
<msg timestamp="20241230 08:16:26.742" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:26.726" endtime="20241230 08:16:26.742"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:26.742" endtime="20241230 08:16:26.742"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:26.755" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:26.742" endtime="20241230 08:16:26.755"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:26.758" endtime="20241230 08:16:26.758"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:26.758" endtime="20241230 08:16:26.758"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:27.272" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:26.758" endtime="20241230 08:16:27.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.272" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:27.272" endtime="20241230 08:16:27.272"/>
</kw>
<status status="PASS" starttime="20241230 08:16:26.723" endtime="20241230 08:16:27.272"/>
</iter>
<iter>
<var name="${INDEX}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.272" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:27.272" endtime="20241230 08:16:27.272"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:27.288" level="FAIL">Element with locator '//div[@id="pageLoading"][contains(@style,"block")]/div[@class="spinner"]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:27.275" endtime="20241230 08:16:27.288"/>
</kw>
<msg timestamp="20241230 08:16:27.288" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:27.275" endtime="20241230 08:16:27.288"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.288" endtime="20241230 08:16:27.288"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:27.291" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:27.291" endtime="20241230 08:16:27.291"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.291" endtime="20241230 08:16:27.291"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:27.291" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:27.291" endtime="20241230 08:16:27.291"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.272" endtime="20241230 08:16:27.291"/>
</iter>
<status status="PASS" starttime="20241230 08:16:22.943" endtime="20241230 08:16:27.291"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bVisible}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:27.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:27.304" endtime="20241230 08:16:27.304"/>
</kw>
<msg timestamp="20241230 08:16:27.304" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:22.943" endtime="20241230 08:16:27.304"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${status}</arg>
<arg>log</arg>
<arg>Pageloading spinner not found after timeout, check if necessary</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:27.304" endtime="20241230 08:16:27.304"/>
</kw>
<status status="PASS" starttime="20241230 08:16:22.813" endtime="20241230 08:16:27.304"/>
</kw>
<kw name="wait until pageloading spinner dissapears" library="leftnavigationbar">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>//div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.307" level="INFO">${xpath} = //div[@id="pageLoading"][not(contains(@style,"display: none"))]/div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:27.307" endtime="20241230 08:16:27.307"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:27.320" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:27.307" endtime="20241230 08:16:27.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:27.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:27.323" endtime="20241230 08:16:27.323"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.320" endtime="20241230 08:16:27.323"/>
</kw>
<msg timestamp="20241230 08:16:27.323" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:27.307" endtime="20241230 08:16:27.323"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:27.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:27.323" endtime="20241230 08:16:27.323"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.307" endtime="20241230 08:16:27.323"/>
</kw>
<kw name="wait until lists spinner appears" library="leftnavigationbar">
<arg>NrOfLoops=10</arg>
<arg>Timeout=0.5</arg>
<kw name="wait until grid spinner appears" library="leftnavigationbar">
<arg>list-dashboard--grid</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>This keyword is used to wait until a chapter grid spinner appears</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Xpath}</var>
<arg>//div[@sg-qa-id="${ChapterGridName}__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.323" level="INFO">${Xpath} = //div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]</msg>
<status status="PASS" starttime="20241230 08:16:27.323" endtime="20241230 08:16:27.323"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:27.339" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:27.323" endtime="20241230 08:16:27.339"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>Check Element Exists With For Loop and Timeout</arg>
<arg>${Xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Element Exists With For Loop and Timeout" library="general_functions">
<arg>${Xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Loops with timout of Timeout untill either element is found or max Range is reached
returns True if element was found, False if not, calling function should trigger error if necessary
Please note both the visible check and count can take 0.5 seconds so the entire loop time is around 1.5 seconds</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.339" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:27.339" endtime="20241230 08:16:27.339"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${LastIndex}</var>
<arg>${Range}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:16:27.339" level="INFO">${LastIndex} = 9</msg>
<status status="PASS" starttime="20241230 08:16:27.339" endtime="20241230 08:16:27.339"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Range}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.353" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:27.353" endtime="20241230 08:16:27.353"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:27.356" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:27.353" endtime="20241230 08:16:27.356"/>
</kw>
<msg timestamp="20241230 08:16:27.356" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:27.353" endtime="20241230 08:16:27.356"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.356" endtime="20241230 08:16:27.356"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:27.372" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:27.369" endtime="20241230 08:16:27.372"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.372" endtime="20241230 08:16:27.372"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.372" endtime="20241230 08:16:27.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:27.886" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:27.372" endtime="20241230 08:16:27.886"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.886" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:27.886" endtime="20241230 08:16:27.886"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.353" endtime="20241230 08:16:27.886"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:27.886" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:27.886" endtime="20241230 08:16:27.886"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:27.906" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:27.889" endtime="20241230 08:16:27.906"/>
</kw>
<msg timestamp="20241230 08:16:27.906" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:27.889" endtime="20241230 08:16:27.906"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.906" endtime="20241230 08:16:27.906"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:27.906" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:27.906" endtime="20241230 08:16:27.906"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.918" endtime="20241230 08:16:27.918"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:27.921" endtime="20241230 08:16:27.921"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:28.435" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:27.921" endtime="20241230 08:16:28.435"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:28.435" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:28.435" endtime="20241230 08:16:28.435"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.886" endtime="20241230 08:16:28.435"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:28.438" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:28.435" endtime="20241230 08:16:28.438"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:28.454" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:28.438" endtime="20241230 08:16:28.454"/>
</kw>
<msg timestamp="20241230 08:16:28.454" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:28.438" endtime="20241230 08:16:28.454"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:28.454" endtime="20241230 08:16:28.454"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:28.454" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:28.454" endtime="20241230 08:16:28.454"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:28.467" endtime="20241230 08:16:28.467"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:28.467" endtime="20241230 08:16:28.467"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:28.968" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:28.467" endtime="20241230 08:16:28.968"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:28.968" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:28.968" endtime="20241230 08:16:28.968"/>
</kw>
<status status="PASS" starttime="20241230 08:16:28.435" endtime="20241230 08:16:28.968"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:28.971" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:28.971" endtime="20241230 08:16:28.971"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:28.988" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:28.971" endtime="20241230 08:16:28.988"/>
</kw>
<msg timestamp="20241230 08:16:28.988" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:28.971" endtime="20241230 08:16:28.988"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:28.988" endtime="20241230 08:16:28.988"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:29.000" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:28.988" endtime="20241230 08:16:29.000"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:29.000" endtime="20241230 08:16:29.000"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:29.000" endtime="20241230 08:16:29.000"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:29.517" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:29.003" endtime="20241230 08:16:29.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:29.517" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:29.517" endtime="20241230 08:16:29.517"/>
</kw>
<status status="PASS" starttime="20241230 08:16:28.968" endtime="20241230 08:16:29.517"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:29.517" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:29.517" endtime="20241230 08:16:29.517"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:29.533" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:29.522" endtime="20241230 08:16:29.533"/>
</kw>
<msg timestamp="20241230 08:16:29.533" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:29.522" endtime="20241230 08:16:29.533"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:29.533" endtime="20241230 08:16:29.533"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:29.541" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:29.533" endtime="20241230 08:16:29.541"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:29.541" endtime="20241230 08:16:29.541"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:29.541" endtime="20241230 08:16:29.549"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:30.050" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:29.549" endtime="20241230 08:16:30.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:30.050" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:30.050" endtime="20241230 08:16:30.050"/>
</kw>
<status status="PASS" starttime="20241230 08:16:29.517" endtime="20241230 08:16:30.050"/>
</iter>
<iter>
<var name="${INDEX}">6</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:30.053" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:30.053" endtime="20241230 08:16:30.053"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:30.069" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:30.053" endtime="20241230 08:16:30.069"/>
</kw>
<msg timestamp="20241230 08:16:30.069" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:30.053" endtime="20241230 08:16:30.069"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:30.069" endtime="20241230 08:16:30.069"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:30.086" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:30.069" endtime="20241230 08:16:30.086"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:30.086" endtime="20241230 08:16:30.086"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:30.086" endtime="20241230 08:16:30.086"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:30.599" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:30.086" endtime="20241230 08:16:30.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:30.599" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:30.599" endtime="20241230 08:16:30.599"/>
</kw>
<status status="PASS" starttime="20241230 08:16:30.050" endtime="20241230 08:16:30.599"/>
</iter>
<iter>
<var name="${INDEX}">7</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:30.603" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:30.603" endtime="20241230 08:16:30.603"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:30.615" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:30.603" endtime="20241230 08:16:30.615"/>
</kw>
<msg timestamp="20241230 08:16:30.615" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:30.603" endtime="20241230 08:16:30.615"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:30.615" endtime="20241230 08:16:30.618"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:30.618" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:30.618" endtime="20241230 08:16:30.618"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:30.618" endtime="20241230 08:16:30.618"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:30.632" endtime="20241230 08:16:30.632"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:31.132" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:30.632" endtime="20241230 08:16:31.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.132" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.132" endtime="20241230 08:16:31.132"/>
</kw>
<status status="PASS" starttime="20241230 08:16:30.599" endtime="20241230 08:16:31.132"/>
</iter>
<iter>
<var name="${INDEX}">8</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.135" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:31.135" endtime="20241230 08:16:31.135"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:31.135" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:31.135" endtime="20241230 08:16:31.149"/>
</kw>
<msg timestamp="20241230 08:16:31.149" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.135" endtime="20241230 08:16:31.149"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:31.149" endtime="20241230 08:16:31.149"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:31.152" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:31.152" endtime="20241230 08:16:31.152"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:31.152" endtime="20241230 08:16:31.152"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:31.152" endtime="20241230 08:16:31.152"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:31.666" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:31.165" endtime="20241230 08:16:31.666"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.666" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.666" endtime="20241230 08:16:31.666"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.132" endtime="20241230 08:16:31.666"/>
</iter>
<iter>
<var name="${INDEX}">9</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.666" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:31.666" endtime="20241230 08:16:31.666"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:31.682" level="FAIL">Element with locator '//div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"] | //sg-is-loading//div[contains(@class,"loading")]' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:31.670" endtime="20241230 08:16:31.682"/>
</kw>
<msg timestamp="20241230 08:16:31.682" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.670" endtime="20241230 08:16:31.682"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:31.682" endtime="20241230 08:16:31.682"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:31.686" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:31.682" endtime="20241230 08:16:31.686"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:31.686" endtime="20241230 08:16:31.686"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:31.698" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:31.698" endtime="20241230 08:16:31.698"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.666" endtime="20241230 08:16:31.698"/>
</iter>
<status status="PASS" starttime="20241230 08:16:27.339" endtime="20241230 08:16:31.698"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bVisible}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:31.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:31.698" endtime="20241230 08:16:31.698"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.339" endtime="20241230 08:16:31.698"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.339" endtime="20241230 08:16:31.698"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.323" endtime="20241230 08:16:31.701"/>
</kw>
<status status="PASS" starttime="20241230 08:16:27.323" endtime="20241230 08:16:31.701"/>
</kw>
<kw name="wait until lists spinner disappears" library="leftnavigationbar">
<doc>This keyword is used to wait until the list spinner disappears
This is only applicable when in or clicking on the lists tab</doc>
<kw name="wait until grid spinner disappears" library="leftnavigationbar">
<arg>list-dashboard--grid</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>This keyword is used to wait until the chapter grid spinner disappears
This is only applicable when in or clicking on the chapter tab</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Xpath}</var>
<arg>//div[@sg-qa-id="${ChapterGridName}__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.701" level="INFO">${Xpath} = //div[@sg-qa-id="list-dashboard--grid__spinner"][not(contains(@class,"ng-hide"))]//div[@class="spinner"]</msg>
<status status="PASS" starttime="20241230 08:16:31.701" endtime="20241230 08:16:31.701"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:31.718" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:31.701" endtime="20241230 08:16:31.718"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:31.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:31.718" endtime="20241230 08:16:31.718"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.718" endtime="20241230 08:16:31.718"/>
</kw>
<msg timestamp="20241230 08:16:31.718" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:31.701" endtime="20241230 08:16:31.718"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:31.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:31.718" endtime="20241230 08:16:31.718"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.701" endtime="20241230 08:16:31.718"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.701" endtime="20241230 08:16:31.718"/>
</kw>
<status status="PASS" starttime="20241230 08:16:22.813" endtime="20241230 08:16:31.718"/>
</branch>
<status status="PASS" starttime="20241230 08:16:22.813" endtime="20241230 08:16:31.718"/>
</if>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${ChapterSearchbox}</arg>
<arg>180</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.730" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.730" endtime="20241230 08:16:31.730"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:31.733" endtime="20241230 08:16:31.750"/>
</kw>
<msg timestamp="20241230 08:16:31.750" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:31.730" endtime="20241230 08:16:31.750"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:31.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:31.762" endtime="20241230 08:16:31.762"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.730" endtime="20241230 08:16:31.762"/>
</iter>
<status status="PASS" starttime="20241230 08:16:31.730" endtime="20241230 08:16:31.762"/>
</for>
<status status="PASS" starttime="20241230 08:16:31.718" endtime="20241230 08:16:31.762"/>
</kw>
<kw name="Set Focus To Element" library="SeleniumLibrary">
<arg>${ChapterSearchbox}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" starttime="20241230 08:16:31.762" endtime="20241230 08:16:31.795"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${VerifyListsTitle}</arg>
<arg>Verify title on Page</arg>
<arg>Lists</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Verify title on Page" library="general_functions">
<arg>Lists</arg>
<doc>Verify that the title on the page contains the correct text</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>//sg-title//*[text()='${Title}'] | //div[contains(@class,"chapter-header")]/*[text()='${Title}']</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.802" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.802" endtime="20241230 08:16:31.802"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:31.810" endtime="20241230 08:16:31.851"/>
</kw>
<msg timestamp="20241230 08:16:31.851" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:31.810" endtime="20241230 08:16:31.851"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:31.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:31.853" endtime="20241230 08:16:31.853"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.802" endtime="20241230 08:16:31.853"/>
</iter>
<status status="PASS" starttime="20241230 08:16:31.802" endtime="20241230 08:16:31.853"/>
</for>
<status status="PASS" starttime="20241230 08:16:31.802" endtime="20241230 08:16:31.853"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.802" endtime="20241230 08:16:31.853"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.795" endtime="20241230 08:16:31.853"/>
</kw>
<kw name="Disable Animations" library="loginpage">
<doc>This keyword should disable the animations of the slideouts &amp; dropdowns on the website, so we have less race conditions</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20241230 08:16:31.853" level="INFO">Executing JavaScript:
var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);
Without any arguments.</msg>
<status status="PASS" starttime="20241230 08:16:31.853" endtime="20241230 08:16:31.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:31.866" level="INFO">var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);</msg>
<status status="PASS" starttime="20241230 08:16:31.863" endtime="20241230 08:16:31.866"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.853" endtime="20241230 08:16:31.866"/>
</kw>
<kw name="Activate Root for Correct Search" library="leftnavigationbar">
<doc>When reopening SMC, previous folder may be selected by default, this may compromise the search</doc>
<kw name="Wait For Page Readystate" library="generalfunctions">
<arg>60</arg>
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<msg timestamp="20241230 08:16:31.873" level="INFO">Waiting for page to finish loading
Load Complete.</msg>
<status status="PASS" starttime="20241230 08:16:31.866" endtime="20241230 08:16:31.873"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Wait Until With For Loop</arg>
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:31.880" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.875" endtime="20241230 08:16:31.880"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:31.880" endtime="20241230 08:16:31.940"/>
</kw>
<msg timestamp="20241230 08:16:31.940" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:31.880" endtime="20241230 08:16:31.940"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:31.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:31.947" endtime="20241230 08:16:31.947"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.880" endtime="20241230 08:16:31.947"/>
</iter>
<status status="PASS" starttime="20241230 08:16:31.880" endtime="20241230 08:16:31.947"/>
</for>
<status status="PASS" starttime="20241230 08:16:31.875" endtime="20241230 08:16:31.947"/>
</kw>
<status status="PASS" starttime="20241230 08:16:31.875" endtime="20241230 08:16:31.947"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:31.954" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:31.947" endtime="20241230 08:16:31.954"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${NoResultsFound}</var>
<arg>${NoResultsFound}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:31.973" level="INFO">${NoResultsFound} = 0</msg>
<status status="PASS" starttime="20241230 08:16:31.954" endtime="20241230 08:16:31.973"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bReload}</var>
<arg>${CurrentPath} &lt; 1</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:31.973" level="INFO">${bReload} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.973" endtime="20241230 08:16:31.973"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bReload}</var>
<arg>${NoResultsFound} &gt; 0</arg>
<arg>${True}</arg>
<arg>${bReload}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:31.973" level="INFO">${bReload} = False</msg>
<status status="PASS" starttime="20241230 08:16:31.973" endtime="20241230 08:16:31.973"/>
</kw>
<if>
<branch type="IF" condition="${bReload}">
<kw name="Log" library="BuiltIn">
<arg>Breadcrumb not found, workaround was activated</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20241230 08:16:31.973" endtime="20241230 08:16:31.973"/>
</kw>
<kw name="Reload Page Contents" library="generalfunctions">
<doc>Gdu: Reload current page
Do not confuse with refresh page above which does not reload the page</doc>
<status status="NOT RUN" starttime="20241230 08:16:31.973" endtime="20241230 08:16:31.973"/>
</kw>
<kw name="Wait For Page Readystate" library="generalfunctions">
<arg>60</arg>
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<status status="NOT RUN" starttime="20241230 08:16:31.973" endtime="20241230 08:16:31.973"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:31.973" endtime="20241230 08:16:31.973"/>
</branch>
<status status="PASS" starttime="20241230 08:16:31.973" endtime="20241230 08:16:31.973"/>
</if>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:31.988" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:31.981" endtime="20241230 08:16:31.988"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CurrentPath} &lt; 1</arg>
<arg>Wait Until With For Loop</arg>
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:31.988" endtime="20241230 08:16:31.988"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${CurrentContentPath}</var>
<arg>${0}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:32.018" level="INFO">${CurrentContentPath} = 0</msg>
<status status="PASS" starttime="20241230 08:16:31.988" endtime="20241230 08:16:32.018"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:32.029" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:32.018" endtime="20241230 08:16:32.036"/>
</kw>
<if>
<branch type="IF" condition="${CurrentPath} &lt; 2">
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:32.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:32.037" endtime="20241230 08:16:32.037"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.036" endtime="20241230 08:16:32.037"/>
</branch>
<status status="PASS" starttime="20241230 08:16:32.036" endtime="20241230 08:16:32.037"/>
</if>
<status status="PASS" starttime="20241230 08:16:31.866" endtime="20241230 08:16:32.037"/>
</kw>
<status status="PASS" starttime="20241230 08:16:20.601" endtime="20241230 08:16:32.037"/>
</kw>
<kw name="Compare Snapshot" library="utils.logger">
<arg>Lists Dashboard</arg>
<arg>.10</arg>
<doc>captures a screenshot and logs the console log of the dev tools</doc>
<msg timestamp="20241230 08:16:32.185" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/Test_Suites.89_Sanitychecks.Listsandstaticsegments_Lists_Dashboard.png"&gt;&lt;img src="screenshots/Test_Suites.89_Sanitychecks.Listsandstaticsegments_Lists_Dashboard.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20241230 08:16:32.185" level="INFO">Capturing screenshot Test_Suites.89_Sanitychecks.Listsandstaticsegments_Lists_Dashboard.png with threshold 0.1 in folder screenshots</msg>
<status status="PASS" starttime="20241230 08:16:32.037" endtime="20241230 08:16:32.185"/>
</kw>
<kw name="Create New User List" library="list_usecases">
<arg>SanityUserList${d}</arg>
<doc>This keyword fills in the create new user list
The Name needs to be provided</doc>
<kw name="Click create New User List" library="topbuttonbar">
<kw name="Open Create List Wizard" library="topbuttonbar">
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Lists_wizard_dropdown_menu}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:32.185" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:32.185" endtime="20241230 08:16:32.185"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:32.198" endtime="20241230 08:16:32.222"/>
</kw>
<msg timestamp="20241230 08:16:32.222" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:32.198" endtime="20241230 08:16:32.222"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:32.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:32.222" endtime="20241230 08:16:32.222"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.185" endtime="20241230 08:16:32.222"/>
</iter>
<status status="PASS" starttime="20241230 08:16:32.185" endtime="20241230 08:16:32.222"/>
</for>
<status status="PASS" starttime="20241230 08:16:32.185" endtime="20241230 08:16:32.222"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${ChapterSearchbox}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:32.231" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:32.231" endtime="20241230 08:16:32.231"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:32.234" endtime="20241230 08:16:32.250"/>
</kw>
<msg timestamp="20241230 08:16:32.250" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:32.231" endtime="20241230 08:16:32.250"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:32.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:32.250" endtime="20241230 08:16:32.250"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.231" endtime="20241230 08:16:32.250"/>
</iter>
<status status="PASS" starttime="20241230 08:16:32.231" endtime="20241230 08:16:32.250"/>
</for>
<status status="PASS" starttime="20241230 08:16:32.222" endtime="20241230 08:16:32.250"/>
</kw>
<kw name="Wait hover and click" library="general_functions">
<arg>${Lists_wizard_new_button}</arg>
<doc>This keyword is used to wait an element, hover over it and click with fail safe this element</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${xpath}</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:32.263" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:32.263" endtime="20241230 08:16:32.263"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:32.263" endtime="20241230 08:16:32.294"/>
</kw>
<msg timestamp="20241230 08:16:32.294" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:32.263" endtime="20241230 08:16:32.294"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:32.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:32.294" endtime="20241230 08:16:32.294"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.263" endtime="20241230 08:16:32.294"/>
</iter>
<status status="PASS" starttime="20241230 08:16:32.263" endtime="20241230 08:16:32.294"/>
</for>
<status status="PASS" starttime="20241230 08:16:32.250" endtime="20241230 08:16:32.294"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Mouse Over</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20241230 08:16:32.294" level="INFO">Simulating Mouse Over on element '//button[@sg-qa-id='list-dashboard-createList--main'] | //*[@sg-qa-id="sg-split-button"]/span'.</msg>
<status status="PASS" starttime="20241230 08:16:32.294" endtime="20241230 08:16:32.589"/>
</kw>
<msg timestamp="20241230 08:16:32.589" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:32.294" endtime="20241230 08:16:32.589"/>
</kw>
<if>
<branch type="IF" condition="not ${Status}">
<kw name="Capture Browser" library="utils.logger">
<doc>captures a screenshot and logs the console log of the dev tools</doc>
<status status="NOT RUN" starttime="20241230 08:16:32.589" endtime="20241230 08:16:32.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Unable to hover over element with xpath ${xpath}</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20241230 08:16:32.589" endtime="20241230 08:16:32.589"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:32.589" endtime="20241230 08:16:32.589"/>
</branch>
<status status="PASS" starttime="20241230 08:16:32.589" endtime="20241230 08:16:32.589"/>
</if>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${xpath}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:32.589" endtime="20241230 08:16:32.643"/>
</kw>
<msg timestamp="20241230 08:16:32.643" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:32.589" endtime="20241230 08:16:32.643"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:32.643" endtime="20241230 08:16:32.643"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:32.643" level="INFO">Clicking element '//button[@sg-qa-id='list-dashboard-createList--main'] | //*[@sg-qa-id="sg-split-button"]/span'.</msg>
<status status="PASS" starttime="20241230 08:16:32.643" endtime="20241230 08:16:32.769"/>
</kw>
<msg timestamp="20241230 08:16:32.769" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:32.643" endtime="20241230 08:16:32.769"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:32.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:32.769"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.589" endtime="20241230 08:16:32.769"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.250" endtime="20241230 08:16:32.769"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.185" endtime="20241230 08:16:32.769"/>
</kw>
<kw name="Wait And Click On Element" library="general_functions">
<arg>${Lists_wizard_create_list}</arg>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${xpath}</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:32.769" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:32.769"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:33.014"/>
</kw>
<msg timestamp="20241230 08:16:33.014" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:33.014"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:33.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:33.014" endtime="20241230 08:16:33.014"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:33.014"/>
</iter>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:33.014"/>
</for>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:33.014"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${xpath}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:33.014" endtime="20241230 08:16:33.042"/>
</kw>
<msg timestamp="20241230 08:16:33.042" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:33.014" endtime="20241230 08:16:33.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:33.042" endtime="20241230 08:16:33.042"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:33.042" level="INFO">Clicking element '//*[@sg-qa-id='create_list'] | //sg-thumbnail-icon//p[normalize-space()='List'] | //*[@sg-qa-id='create-list-thumbnail']'.</msg>
<status status="PASS" starttime="20241230 08:16:33.042" endtime="20241230 08:16:33.140"/>
</kw>
<msg timestamp="20241230 08:16:33.140" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:33.042" endtime="20241230 08:16:33.140"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:33.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.140"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.014" endtime="20241230 08:16:33.140"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.769" endtime="20241230 08:16:33.140"/>
</kw>
<kw name="Wait And Click On Element" library="general_functions">
<arg>${Lists_wizard_create_new_User_List}</arg>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${xpath}</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:33.140" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.140"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.381"/>
</kw>
<msg timestamp="20241230 08:16:33.381" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.381"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:33.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:33.381" endtime="20241230 08:16:33.381"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.381"/>
</iter>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.381"/>
</for>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.381"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${xpath}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:33.381" endtime="20241230 08:16:33.418"/>
</kw>
<msg timestamp="20241230 08:16:33.418" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:33.381" endtime="20241230 08:16:33.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:33.425" endtime="20241230 08:16:33.425"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:33.425" level="INFO">Clicking element '//div[@sg-qa-id='create_list_user'] | //a//p[contains(text(),'Audience')] | //*[@sg-qa-id='create-audience-list-thumbnail']'.</msg>
<status status="PASS" starttime="20241230 08:16:33.425" endtime="20241230 08:16:33.544"/>
</kw>
<msg timestamp="20241230 08:16:33.544" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:33.425" endtime="20241230 08:16:33.544"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:33.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:33.544" endtime="20241230 08:16:33.544"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.381" endtime="20241230 08:16:33.544"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.140" endtime="20241230 08:16:33.544"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.185" endtime="20241230 08:16:33.544"/>
</kw>
<kw name="Enter List Wizard Name" library="list_shared">
<arg>${list_wizard_Name}</arg>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${lists_NameInput}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:33.544" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:33.544" endtime="20241230 08:16:33.544"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:33.560" endtime="20241230 08:16:33.817"/>
</kw>
<msg timestamp="20241230 08:16:33.817" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:33.558" endtime="20241230 08:16:33.817"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:33.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:33.817" endtime="20241230 08:16:33.817"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.558" endtime="20241230 08:16:33.817"/>
</iter>
<status status="PASS" starttime="20241230 08:16:33.544" endtime="20241230 08:16:33.817"/>
</for>
<status status="PASS" starttime="20241230 08:16:33.544" endtime="20241230 08:16:33.817"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${lists_NameInput}</arg>
<arg>${list_wizard_Name}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:33.817" level="INFO">Typing text 'SanityUserList1735542964' into text field '//input[@name="ListPropertiesModel_Name"] | //mat-form-field[@sg-qa-id='list-name-form-field']//input'.</msg>
<status status="PASS" starttime="20241230 08:16:33.817" endtime="20241230 08:16:33.995"/>
</kw>
<if>
<branch type="IF" condition="${UseGrizzlyListsWizard}">
<kw name="Activate lists advanced tab" library="list_usecases">
<doc>Activate the lists advanced tab if not already activated</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Properties_TabBasicLists} | ${Properties_TabAdvancedLists}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:33.995" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:33.995"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.025"/>
</kw>
<msg timestamp="20241230 08:16:34.025" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.025"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.033" endtime="20241230 08:16:34.033"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.033"/>
</iter>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.033"/>
</for>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.033"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Properties_TabAdvancedListsActive}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:34.047" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:34.033" endtime="20241230 08:16:34.047"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:34.047" endtime="20241230 08:16:34.047"/>
</kw>
<kw name="Wait hover and click" library="general_functions">
<arg>${Properties_TabAdvancedLists}</arg>
<doc>This keyword is used to wait an element, hover over it and click with fail safe this element</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${xpath}</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:34.057" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:34.051" endtime="20241230 08:16:34.057"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:34.057" endtime="20241230 08:16:34.078"/>
</kw>
<msg timestamp="20241230 08:16:34.078" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.057" endtime="20241230 08:16:34.078"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.078" endtime="20241230 08:16:34.078"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.057" endtime="20241230 08:16:34.078"/>
</iter>
<status status="PASS" starttime="20241230 08:16:34.057" endtime="20241230 08:16:34.086"/>
</for>
<status status="PASS" starttime="20241230 08:16:34.051" endtime="20241230 08:16:34.086"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Mouse Over</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20241230 08:16:34.088" level="INFO">Simulating Mouse Over on element '//*[@sg-qa-id="sg-toggle-button-allfields"]'.</msg>
<status status="PASS" starttime="20241230 08:16:34.086" endtime="20241230 08:16:34.379"/>
</kw>
<msg timestamp="20241230 08:16:34.379" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.086" endtime="20241230 08:16:34.383"/>
</kw>
<if>
<branch type="IF" condition="not ${Status}">
<kw name="Capture Browser" library="utils.logger">
<doc>captures a screenshot and logs the console log of the dev tools</doc>
<status status="NOT RUN" starttime="20241230 08:16:34.383" endtime="20241230 08:16:34.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Unable to hover over element with xpath ${xpath}</arg>
<arg>WARN</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20241230 08:16:34.383" endtime="20241230 08:16:34.383"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:34.383" endtime="20241230 08:16:34.383"/>
</branch>
<status status="PASS" starttime="20241230 08:16:34.383" endtime="20241230 08:16:34.383"/>
</if>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${xpath}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:34.383" endtime="20241230 08:16:34.412"/>
</kw>
<msg timestamp="20241230 08:16:34.412" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.383" endtime="20241230 08:16:34.412"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:34.412" endtime="20241230 08:16:34.412"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:34.420" level="INFO">Clicking element '//*[@sg-qa-id="sg-toggle-button-allfields"]'.</msg>
<status status="PASS" starttime="20241230 08:16:34.420" endtime="20241230 08:16:34.507"/>
</kw>
<msg timestamp="20241230 08:16:34.515" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.420" endtime="20241230 08:16:34.515"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.515" endtime="20241230 08:16:34.515"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.383" endtime="20241230 08:16:34.515"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.051" endtime="20241230 08:16:34.515"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Properties_TabAdvancedListsActive}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:34.515" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:34.515" endtime="20241230 08:16:34.515"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:34.525" endtime="20241230 08:16:34.560"/>
</kw>
<msg timestamp="20241230 08:16:34.560" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.525" endtime="20241230 08:16:34.560"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.560"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.515" endtime="20241230 08:16:34.560"/>
</iter>
<status status="PASS" starttime="20241230 08:16:34.515" endtime="20241230 08:16:34.560"/>
</for>
<status status="PASS" starttime="20241230 08:16:34.515" endtime="20241230 08:16:34.560"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.560"/>
</kw>
<kw name="Wait And Click On Element" library="general_functions">
<arg>${lists_DescriptionInput}</arg>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${xpath}</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:34.560" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.560"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.593"/>
</kw>
<msg timestamp="20241230 08:16:34.593" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.593"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.593" endtime="20241230 08:16:34.605"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.605"/>
</iter>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.605"/>
</for>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.605"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${xpath}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:34.610" endtime="20241230 08:16:34.640"/>
</kw>
<msg timestamp="20241230 08:16:34.640" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.605" endtime="20241230 08:16:34.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:34.640" endtime="20241230 08:16:34.640"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:34.640" level="INFO">Clicking element '//input[@name="ListPropertiesModel_Description"] | //mat-form-field[@sg-qa-id='list-description-form-field']//textarea'.</msg>
<status status="PASS" starttime="20241230 08:16:34.640" endtime="20241230 08:16:34.755"/>
</kw>
<msg timestamp="20241230 08:16:34.755" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.640" endtime="20241230 08:16:34.755"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.755" endtime="20241230 08:16:34.755"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.605" endtime="20241230 08:16:34.755"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.560" endtime="20241230 08:16:34.755"/>
</kw>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.755"/>
</branch>
<branch type="ELSE">
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${lists_DescriptionInput}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<status status="NOT RUN" starttime="20241230 08:16:34.755" endtime="20241230 08:16:34.755"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:34.755" endtime="20241230 08:16:34.755"/>
</branch>
<status status="PASS" starttime="20241230 08:16:33.995" endtime="20241230 08:16:34.755"/>
</if>
<status status="PASS" starttime="20241230 08:16:33.544" endtime="20241230 08:16:34.755"/>
</kw>
<kw name="Create List and Verify Success Message" library="list_shared">
<kw name="Wait And Click On Element" library="general_functions">
<arg>${lists_CreateBtn}</arg>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${xpath}</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:34.770" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:34.770" endtime="20241230 08:16:34.770"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:34.770" endtime="20241230 08:16:34.806"/>
</kw>
<msg timestamp="20241230 08:16:34.806" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.770" endtime="20241230 08:16:34.806"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.806" endtime="20241230 08:16:34.806"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.770" endtime="20241230 08:16:34.806"/>
</iter>
<status status="PASS" starttime="20241230 08:16:34.770" endtime="20241230 08:16:34.806"/>
</for>
<status status="PASS" starttime="20241230 08:16:34.770" endtime="20241230 08:16:34.806"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${xpath}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:34.814" endtime="20241230 08:16:34.851"/>
</kw>
<msg timestamp="20241230 08:16:34.851" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.806" endtime="20241230 08:16:34.851"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:34.851" endtime="20241230 08:16:34.851"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:34.851" level="INFO">Clicking element '//button[contains(@sg-qa-id, 'list-wizard__next') and not(contains(@class,'k-state-disabled')) and not(contains(@disabled,'disabled'))] | //button[contains(@sg-qa-id, 'sg-save-button') and not(contains(@class,'sg-button-disabled'))]'.</msg>
<status status="PASS" starttime="20241230 08:16:34.851" endtime="20241230 08:16:34.977"/>
</kw>
<msg timestamp="20241230 08:16:34.977" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:34.851" endtime="20241230 08:16:34.977"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:34.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:34.981" endtime="20241230 08:16:34.981"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.806" endtime="20241230 08:16:34.981"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.767" endtime="20241230 08:16:34.981"/>
</kw>
<kw name="Check for ResultsDiv" library="topbuttonbar">
<arg>Success=${True}</arg>
<arg>MustExist=${True}</arg>
<arg>Expected_Message=List saved successfully</arg>
<arg>Stop=201</arg>
<doc>This function alternates between checking for succesdiv and errordiv and
Passes if GREEN banner is shown and Success=TRUE(default)/Empty and MustExist=True(default)/False
Passes if GREEN banner is not shown, Success=TRUE(default)/Empty and MustExist=False and RED banner is NOT shown
Fails if GREEN banner is not shown and and Success=TRUE(default)/Empty and MustExist=True(default)
Fails if GREEN banner does not contain expected Message when Success=TRUE/Empty and Msg is not empty (default Empty)
Fails if RED banner is shown and Success=TRUE(default)/Empty
Passes if RED banner is shown and Success=FALSE and MustExist=True(default)/False
Passes if RED banner is not shown, Success=FALSE and MustExist=False (Green banner can be Shown or Not)
Fails if RED banner is not shown and Success=FALSE and MustExist=True
Fails if RED banner does not contain expected Error when Success=FALSE and Msg is not empty (default Empty)
Use param ${MultiMessage}=True and a list of messages when more than 1 message is expected</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bGreen}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:35.090" level="INFO">${bGreen} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.090" endtime="20241230 08:16:35.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bRed}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:35.090" level="INFO">${bRed} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.090" endtime="20241230 08:16:35.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bSaveWasHandled}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:35.090" level="INFO">${bSaveWasHandled} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.090" endtime="20241230 08:16:35.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bEnoughErrors}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:35.093" level="INFO">${bEnoughErrors} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.093" endtime="20241230 08:16:35.093"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${countSuc}</var>
<arg>${SuccessDiv}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.111" level="INFO">${countSuc} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.093" endtime="20241230 08:16:35.111"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${countErr}</var>
<arg>${ErrorDiv}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.127" level="INFO">${countErr} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.111" endtime="20241230 08:16:35.127"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bGreen}</var>
<arg>${countSuc} &gt; 0</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:35.127" level="INFO">${bGreen} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bRed}</var>
<arg>${countErr} &gt; 0</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:35.127" level="INFO">${bRed} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${countSuc} &gt; 0 and ${bSaveWasHandled}</arg>
<arg>Close handle save message</arg>
<arg>${JourneyType}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</kw>
<if>
<branch type="IF" condition="${MultiMessage}">
<kw name="Get Length" library="BuiltIn">
<var>${ExpectedCount}</var>
<arg>${ListOfMessages}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</kw>
<if>
<branch type="IF" condition="${countErr} &gt;= ${ExpectedCount}">
<kw name="Set Variable" library="BuiltIn">
<var>${bEnoughErrors}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</branch>
<status status="NOT RUN" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</if>
<status status="NOT RUN" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</branch>
<branch type="ELSE">
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bGreen} or ${bRed}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</kw>
<status status="PASS" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</branch>
<status status="PASS" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.127"/>
</if>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>//div/span[text()="Confirm save before launch"]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.143" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.127" endtime="20241230 08:16:35.143"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>Handle Automation Related Save Dialogue</arg>
<arg>${JourneyType}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.143" endtime="20241230 08:16:35.143"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bSaveWasHandled}</var>
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:35.154" level="INFO">${bSaveWasHandled} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.154" endtime="20241230 08:16:35.154"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>//div[contains(text(),"Do you want to save your changes before ")]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.158" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.154" endtime="20241230 08:16:35.158"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>Confirm Save dialogue and verify dissapearance</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.158" endtime="20241230 08:16:35.158"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>//div/span[text()="Confirm save before publish"]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.174" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.171" endtime="20241230 08:16:35.174"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>Confirm Save dialogue and verify dissapearance</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.174" endtime="20241230 08:16:35.187"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:35.688" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:35.187" endtime="20241230 08:16:35.688"/>
</kw>
<status status="PASS" starttime="20241230 08:16:35.093" endtime="20241230 08:16:35.688"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${countSuc}</var>
<arg>${SuccessDiv}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.691" level="INFO">${countSuc} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.688" endtime="20241230 08:16:35.691"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${countErr}</var>
<arg>${ErrorDiv}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.707" level="INFO">${countErr} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.691" endtime="20241230 08:16:35.707"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bGreen}</var>
<arg>${countSuc} &gt; 0</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:35.707" level="INFO">${bGreen} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bRed}</var>
<arg>${countErr} &gt; 0</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:35.707" level="INFO">${bRed} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${countSuc} &gt; 0 and ${bSaveWasHandled}</arg>
<arg>Close handle save message</arg>
<arg>${JourneyType}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</kw>
<if>
<branch type="IF" condition="${MultiMessage}">
<kw name="Get Length" library="BuiltIn">
<var>${ExpectedCount}</var>
<arg>${ListOfMessages}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</kw>
<if>
<branch type="IF" condition="${countErr} &gt;= ${ExpectedCount}">
<kw name="Set Variable" library="BuiltIn">
<var>${bEnoughErrors}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</branch>
<status status="NOT RUN" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</if>
<status status="NOT RUN" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</branch>
<branch type="ELSE">
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bGreen} or ${bRed}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</kw>
<status status="PASS" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</branch>
<status status="PASS" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.707"/>
</if>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>//div/span[text()="Confirm save before launch"]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.723" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.707" endtime="20241230 08:16:35.723"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>Handle Automation Related Save Dialogue</arg>
<arg>${JourneyType}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.723" endtime="20241230 08:16:35.723"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bSaveWasHandled}</var>
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:35.723" level="INFO">${bSaveWasHandled} = False</msg>
<status status="PASS" starttime="20241230 08:16:35.723" endtime="20241230 08:16:35.723"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>//div[contains(text(),"Do you want to save your changes before ")]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.740" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.723" endtime="20241230 08:16:35.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>Confirm Save dialogue and verify dissapearance</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.740" endtime="20241230 08:16:35.740"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>//div/span[text()="Confirm save before publish"]</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:35.756" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:35.740" endtime="20241230 08:16:35.756"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0 and ${HandleSave}</arg>
<arg>Confirm Save dialogue and verify dissapearance</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:35.756" endtime="20241230 08:16:35.756"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>0.5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:36.270" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:35.756" endtime="20241230 08:16:36.270"/>
</kw>
<status status="PASS" starttime="20241230 08:16:35.688" endtime="20241230 08:16:36.270"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${countSuc}</var>
<arg>${SuccessDiv}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:36.273" level="INFO">${countSuc} = 1</msg>
<status status="PASS" starttime="20241230 08:16:36.270" endtime="20241230 08:16:36.273"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${countErr}</var>
<arg>${ErrorDiv}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:36.289" level="INFO">${countErr} = 0</msg>
<status status="PASS" starttime="20241230 08:16:36.273" endtime="20241230 08:16:36.289"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bGreen}</var>
<arg>${countSuc} &gt; 0</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.289" level="INFO">${bGreen} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bRed}</var>
<arg>${countErr} &gt; 0</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.289" level="INFO">${bRed} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${countSuc} &gt; 0 and ${bSaveWasHandled}</arg>
<arg>Close handle save message</arg>
<arg>${JourneyType}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<if>
<branch type="IF" condition="${MultiMessage}">
<kw name="Get Length" library="BuiltIn">
<var>${ExpectedCount}</var>
<arg>${ListOfMessages}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<if>
<branch type="IF" condition="${countErr} &gt;= ${ExpectedCount}">
<kw name="Set Variable" library="BuiltIn">
<var>${bEnoughErrors}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</branch>
<status status="NOT RUN" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</if>
<status status="NOT RUN" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</branch>
<branch type="ELSE">
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bGreen} or ${bRed}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:36.289" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</branch>
<status status="PASS" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</if>
<status status="PASS" starttime="20241230 08:16:36.270" endtime="20241230 08:16:36.289"/>
</iter>
<status status="PASS" starttime="20241230 08:16:35.093" endtime="20241230 08:16:36.289"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bSaveWasHandled}</arg>
<arg>Close handle save message</arg>
<arg>${JourneyType}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.289" endtime="20241230 08:16:36.289"/>
</kw>
<if>
<branch type="IF" condition="${MultiMessage}">
<kw name="Check Multiple Errormessages for expected Messages" library="topbuttonbar">
<arg>${ExpectedCount}</arg>
<arg>${bEnoughErrors}</arg>
<arg>${ListOfMessages}</arg>
<status status="NOT RUN" starttime="20241230 08:16:36.301" endtime="20241230 08:16:36.301"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.301" endtime="20241230 08:16:36.301"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:36.301" endtime="20241230 08:16:36.301"/>
</branch>
<status status="PASS" starttime="20241230 08:16:36.301" endtime="20241230 08:16:36.301"/>
</if>
<kw name="Run Keyword If" library="BuiltIn">
<var>${txtGreen}</var>
<arg>${bGreen}</arg>
<arg>Get Green Banner Error Text</arg>
<arg>${True}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Green Banner Error Text" library="topbuttonbar">
<arg>${True}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${SuccessMessageDiv}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:36.318" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:36.304" endtime="20241230 08:16:36.318"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>Log to report and console</arg>
<arg>Successmessage could not be retrieved as banner is not available (anymore)</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.321" endtime="20241230 08:16:36.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>SucNotFound</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.321" endtime="20241230 08:16:36.321"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${SuccessText}</var>
<arg>get text</arg>
<arg>${SuccessMessageDiv}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Text" library="SeleniumLibrary">
<arg>${SuccessMessageDiv}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="PASS" starttime="20241230 08:16:36.321" endtime="20241230 08:16:36.337"/>
</kw>
<msg timestamp="20241230 08:16:36.337" level="INFO">${status} = PASS</msg>
<msg timestamp="20241230 08:16:36.337" level="INFO">${SuccessText} = List saved successfully</msg>
<status status="PASS" starttime="20241230 08:16:36.321" endtime="20241230 08:16:36.337"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Found text '${SuccessText}'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241230 08:16:36.337" endtime="20241230 08:16:36.351"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${SuccessText}</var>
<arg>${SuccessText.replace("\n", "")}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:36.374" level="INFO">${SuccessText} = List saved successfully</msg>
<status status="PASS" starttime="20241230 08:16:36.351" endtime="20241230 08:16:36.374"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${SuccessText}</var>
<arg>'${status}'=='PASS'</arg>
<arg>${SuccessText}</arg>
<arg>SucNotFound</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.382" level="INFO">${SuccessText} = List saved successfully</msg>
<status status="PASS" starttime="20241230 08:16:36.382" endtime="20241230 08:16:36.382"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCompare}</var>
<arg>${SuccessText}</arg>
<arg>${EMPTY}</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:36.405" level="INFO">Passed variable is empty</msg>
<msg timestamp="20241230 08:16:36.405" level="INFO">${bCompare} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.382" endtime="20241230 08:16:36.405"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${SuccessText}</var>
<arg>${bCompare}</arg>
<arg>SucNotFound</arg>
<arg>${SuccessText}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.405" level="INFO">${SuccessText} = List saved successfully</msg>
<status status="PASS" starttime="20241230 08:16:36.405" endtime="20241230 08:16:36.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bCompare}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.405" endtime="20241230 08:16:36.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Report}</arg>
<arg>log to report and console</arg>
<arg>Green Banner Successmessage: '${SuccessText}'</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log to report and console" library="general_functions">
<arg>Green Banner Successmessage: '${SuccessText}'</arg>
<doc>This keyword is used to combine the normal 'Log' (to report) + the 'Log to console' keywords in 1 keyword</doc>
<kw name="Log" library="BuiltIn">
<arg>${LogText}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:36.405" level="INFO">Green Banner Successmessage: 'List saved successfully'</msg>
<status status="PASS" starttime="20241230 08:16:36.405" endtime="20241230 08:16:36.405"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${LogText}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241230 08:16:36.413" endtime="20241230 08:16:36.413"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.405" endtime="20241230 08:16:36.413"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.405" endtime="20241230 08:16:36.413"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${SuccessText}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:36.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:36.413" endtime="20241230 08:16:36.413"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.304" endtime="20241230 08:16:36.413"/>
</kw>
<msg timestamp="20241230 08:16:36.413" level="INFO">${txtGreen} = List saved successfully</msg>
<status status="PASS" starttime="20241230 08:16:36.301" endtime="20241230 08:16:36.413"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${txtRed}</var>
<arg>${bRed}</arg>
<arg>Get Red Banner Error Text</arg>
<arg>${True}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:16:36.413" endtime="20241230 08:16:36.436"/>
</kw>
<msg timestamp="20241230 08:16:36.436" level="INFO">${txtRed} = </msg>
<status status="PASS" starttime="20241230 08:16:36.413" endtime="20241230 08:16:36.436"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bFail}</var>
<arg>${bRed} and ${Success}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.444" level="INFO">${bFail} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.436" endtime="20241230 08:16:36.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.444" endtime="20241230 08:16:36.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>close all success or error messages</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.444" endtime="20241230 08:16:36.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>log to report and console</arg>
<arg>Error ${txtRed} was displayed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.444" endtime="20241230 08:16:36.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>run keyword and return status</arg>
<arg>Check and log validation issues</arg>
<arg>${txtRed}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.444" endtime="20241230 08:16:36.444"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${bFail}</arg>
<arg>Error Banner was displayed while expecting success</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.444" endtime="20241230 08:16:36.444"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bFail}</var>
<arg>${Success} and ${MustExist} and not ${bGreen}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.444" level="INFO">${bFail} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.444" endtime="20241230 08:16:36.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.444" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>close all success or error messages</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.451" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${bFail}</arg>
<arg>Green Banner was not displayed while expected</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.451" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bFail}</var>
<arg>not ${Success} and ${MustExist} and not ${bRed}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.451" level="INFO">${bFail} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.451" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.451" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>close all success or error messages</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.451" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${bFail}</arg>
<arg>Red Banner was not displayed while expected</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.451" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${bGreen} or ${bRed}</arg>
<arg>log to report and console</arg>
<arg>No banner displayed, please check if this function needs to be called at this point</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:36.451" endtime="20241230 08:16:36.451"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${MustExist}</arg>
<arg>log to report and console</arg>
<arg>No use in checking message if banner does not need to be displayed</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:36.459" endtime="20241230 08:16:36.459"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${MustExist}</arg>
<arg>close all success or error messages</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:36.459" endtime="20241230 08:16:36.459"/>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<arg>${MustExist}</arg>
<arg>return from keyword</arg>
<arg>${False}</arg>
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<status status="PASS" starttime="20241230 08:16:36.459" endtime="20241230 08:16:36.459"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCheckBanner}</var>
<arg>${Expected_Message}</arg>
<arg>${EMPTY}</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:36.482" level="INFO">Passed variable is empty</msg>
<msg timestamp="20241230 08:16:36.482" level="INFO">${bCheckBanner} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.459" endtime="20241230 08:16:36.482"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bCheckBanner}</var>
<arg>${bCheckBanner}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.482" level="INFO">${bCheckBanner} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.482" endtime="20241230 08:16:36.482"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bSkipCheck1}</var>
<arg>${txtGreen}</arg>
<arg>SucNotFound</arg>
<arg>No</arg>
<arg>No</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:36.482" level="INFO">${bSkipCheck1} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.482" endtime="20241230 08:16:36.482"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bSkipCheck2}</var>
<arg>${txtRed}</arg>
<arg>ErrNotFound</arg>
<arg>No</arg>
<arg>No</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:36.482" level="INFO">Passed variable is empty</msg>
<msg timestamp="20241230 08:16:36.482" level="INFO">${bSkipCheck2} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.482" endtime="20241230 08:16:36.482"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bCompare}</var>
<arg>${Success} and ${bGreen} and ${bCheckBanner} and not ${bSkipCheck1}</arg>
<arg>compare strings</arg>
<arg>${txtGreen}</arg>
<arg>${Expected_Message}</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Compare Strings" library="generalfunctions">
<arg>${txtGreen}</arg>
<arg>${Expected_Message}</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<status status="PASS" starttime="20241230 08:16:36.490" endtime="20241230 08:16:36.490"/>
</kw>
<msg timestamp="20241230 08:16:36.490" level="INFO">${bCompare} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.490" endtime="20241230 08:16:36.490"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bSkipClose}</var>
<arg>${Success} and not ${bCompare} and ${bIgnoreMessageMismatch}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.490" level="INFO">${bSkipClose} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.490" endtime="20241230 08:16:36.490"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bFail}</var>
<arg>${Success} and not ${bCompare} and not ${bIgnoreMessageMismatch}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.490" level="INFO">${bFail} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.490" endtime="20241230 08:16:36.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.490" endtime="20241230 08:16:36.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bResetFailure}</var>
<arg>${bFail} and ${bSaveWasHandled}</arg>
<arg>Check for required message directly</arg>
<arg>${Expected_Message}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:16:36.498" endtime="20241230 08:16:36.498"/>
</kw>
<msg timestamp="20241230 08:16:36.498" level="INFO">${bResetFailure} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.490" endtime="20241230 08:16:36.498"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bFail}</var>
<arg>${bSaveWasHandled} and ${bResetFailure}</arg>
<arg>${True}</arg>
<arg>${bFail}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.498" level="INFO">${bFail} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.498" endtime="20241230 08:16:36.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>close all success or error messages</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.498" endtime="20241230 08:16:36.498"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${bFail}</arg>
<arg>Expected Success Message '${Expected_Message}' was not displayed, found text '${txtGreen}'</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.498" endtime="20241230 08:16:36.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bGreen} and ${bCheckBanner} and ${bSkipCheck1}</arg>
<arg>Log to report and console</arg>
<arg>WARNING: Green Banner was gone before text could be extracted</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.498" endtime="20241230 08:16:36.498"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bCompare}</var>
<arg>${bRed} and ${bCheckBanner} and not ${Success} and not ${bSkipCheck2}</arg>
<arg>compare strings</arg>
<arg>${txtRed}</arg>
<arg>${Expected_Message}</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:16:36.506" endtime="20241230 08:16:36.506"/>
</kw>
<msg timestamp="20241230 08:16:36.506" level="INFO">${bCompare} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.506" endtime="20241230 08:16:36.506"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bSkipClose}</var>
<arg>not ${Success} and not ${bCompare} and ${bIgnoreMessageMismatch}</arg>
<arg>${True}</arg>
<arg>${bSkipClose}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.506" level="INFO">${bSkipClose} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.506" endtime="20241230 08:16:36.506"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bFail}</var>
<arg>not ${Success} and not ${bCompare} and not ${bIgnoreMessageMismatch}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:36.506" level="INFO">${bFail} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.506" endtime="20241230 08:16:36.506"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.506" endtime="20241230 08:16:36.506"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bFail}</arg>
<arg>close all success or error messages</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.506" endtime="20241230 08:16:36.506"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${bFail}</arg>
<arg>Expected Failure Message '${Expected_Message}' was not displayed, found text '${txtRed}'</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.506" endtime="20241230 08:16:36.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bRed} and ${bCheckBanner} and ${bSkipCheck2}</arg>
<arg>Log to report and console</arg>
<arg>WARNING: Red Banner was gone before text could be extracted</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.513" endtime="20241230 08:16:36.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CloseAll} and not ${bCheckBanner}</arg>
<arg>Close all success or error messages</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.515" endtime="20241230 08:16:36.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CloseAll} and ${bCheckBanner} and not ${bSkipClose}</arg>
<arg>Close message with expected text</arg>
<arg>${Expected_Message}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Close message with expected text" library="topbuttonbar">
<arg>${Expected_Message}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${xPathOfMessageToClose}</var>
<arg>//div[contains(@class,'sg-notification ')]/div[contains(text(),"${BannerMessage}")]//following-sibling::span</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:36.515" level="INFO">${xPathOfMessageToClose} = //div[contains(@class,'sg-notification ')]/div[contains(text(),"List saved successfully")]//following-sibling::span</msg>
<status status="PASS" starttime="20241230 08:16:36.515" endtime="20241230 08:16:36.515"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>0</value>
<value>20</value>
<iter>
<var name="${INDEX}">0</var>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xPathOfMessageToClose}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:36.540" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:36.515" endtime="20241230 08:16:36.540"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 1">
<kw name="Capture Browser" library="utils.logger">
<doc>captures a screenshot and logs the console log of the dev tools</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.540" endtime="20241230 08:16:36.540"/>
</kw>
<kw name="Log to report and console" library="general_functions">
<arg>More than one message with '${BannerMessage}' found, looping</arg>
<doc>This keyword is used to combine the normal 'Log' (to report) + the 'Log to console' keywords in 1 keyword</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.540" endtime="20241230 08:16:36.540"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:36.540" endtime="20241230 08:16:36.540"/>
</branch>
<branch type="ELSE IF" condition="${count} &lt; 1">
<kw name="Log to report and console" library="general_functions">
<arg>Message has already dissapeared, continue</arg>
<doc>This keyword is used to combine the normal 'Log' (to report) + the 'Log to console' keywords in 1 keyword</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.544" endtime="20241230 08:16:36.544"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<status status="NOT RUN" starttime="20241230 08:16:36.544" endtime="20241230 08:16:36.544"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:36.540" endtime="20241230 08:16:36.544"/>
</branch>
<status status="PASS" starttime="20241230 08:16:36.540" endtime="20241230 08:16:36.544"/>
</if>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>click element with fail safe</arg>
<arg>${xPathOfMessageToClose}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${xPathOfMessageToClose}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:36.548" endtime="20241230 08:16:36.579"/>
</kw>
<msg timestamp="20241230 08:16:36.579" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.548" endtime="20241230 08:16:36.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.579" endtime="20241230 08:16:36.579"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:36.579" level="INFO">Clicking element '//div[contains(@class,'sg-notification ')]/div[contains(text(),"List saved successfully")]//following-sibling::span'.</msg>
<status status="PASS" starttime="20241230 08:16:36.579" endtime="20241230 08:16:36.644"/>
</kw>
<msg timestamp="20241230 08:16:36.644" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.579" endtime="20241230 08:16:36.644"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:36.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:36.657" endtime="20241230 08:16:36.657"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.544" endtime="20241230 08:16:36.657"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.544" endtime="20241230 08:16:36.657"/>
</kw>
<if>
<branch type="IF" condition="${count} &lt; 2">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Element Is Not Visible With For Loop</arg>
<arg>${xPathOfMessageToClose}</arg>
<arg>3</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Element Is Not Visible With For Loop" library="general_functions">
<arg>${xPathOfMessageToClose}</arg>
<arg>3</arg>
<doc>This keyword is used to wait on widget to not to be displayed, used arguments are widget and stop value of loop as a optional value</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:36.660" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.660" endtime="20241230 08:16:36.660"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Not Visible</arg>
<arg>${Widget}</arg>
<arg>${Timeout}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Not Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>${Timeout}</arg>
<doc>Waits until the element ``locator`` is not visible.</doc>
<status status="PASS" starttime="20241230 08:16:36.660" endtime="20241230 08:16:36.673"/>
</kw>
<msg timestamp="20241230 08:16:36.673" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.660" endtime="20241230 08:16:36.673"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<arg>Return From Keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:36.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:36.673" endtime="20241230 08:16:36.673"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.673" endtime="20241230 08:16:36.673"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.660" endtime="20241230 08:16:36.673"/>
</iter>
<status status="PASS" starttime="20241230 08:16:36.660" endtime="20241230 08:16:36.673"/>
</for>
<status status="PASS" starttime="20241230 08:16:36.660" endtime="20241230 08:16:36.673"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.657" endtime="20241230 08:16:36.673"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20241230 08:16:36.673" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:36.673" endtime="20241230 08:16:36.673"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.657" endtime="20241230 08:16:36.673"/>
</branch>
<status status="PASS" starttime="20241230 08:16:36.657" endtime="20241230 08:16:36.673"/>
</if>
<status status="PASS" starttime="20241230 08:16:36.515" endtime="20241230 08:16:36.673"/>
</iter>
<status status="PASS" starttime="20241230 08:16:36.515" endtime="20241230 08:16:36.673"/>
</for>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${xPathOfMessageToClose}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:36.685" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:36.681" endtime="20241230 08:16:36.685"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>log</arg>
<arg>Unable to close message with text '${BannerMessage}'</arg>
<arg>WARN</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.692"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.692"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<arg>element is not visible with for loop</arg>
<arg>${xPathOfMessageToClose}</arg>
<arg>FailOnStillThere=${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.692"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.515" endtime="20241230 08:16:36.692"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.515" endtime="20241230 08:16:36.692"/>
</kw>
<status status="PASS" starttime="20241230 08:16:35.028" endtime="20241230 08:16:36.692"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>//sg-nav-item[@sg-id="list_fields"]/div[contains(@class,"sg-nav-item--active")]</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:36.692" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.692"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:36.700" endtime="20241230 08:16:36.957"/>
</kw>
<msg timestamp="20241230 08:16:36.957" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.957"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:36.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:36.957" endtime="20241230 08:16:36.957"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.957"/>
</iter>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.957"/>
</for>
<status status="PASS" starttime="20241230 08:16:36.692" endtime="20241230 08:16:36.957"/>
</kw>
<status status="PASS" starttime="20241230 08:16:34.755" endtime="20241230 08:16:36.957"/>
</kw>
<kw name="Click on Lists Link" library="leftnavigationbar">
<doc>This keywords is used to Click On Lists Link</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${ListLink}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:36.965" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:36.965" endtime="20241230 08:16:36.965"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:36.965" endtime="20241230 08:16:37.309"/>
</kw>
<msg timestamp="20241230 08:16:37.309" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:36.965" endtime="20241230 08:16:37.309"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:37.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:37.309" endtime="20241230 08:16:37.309"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.965" endtime="20241230 08:16:37.309"/>
</iter>
<status status="PASS" starttime="20241230 08:16:36.965" endtime="20241230 08:16:37.309"/>
</for>
<status status="PASS" starttime="20241230 08:16:36.965" endtime="20241230 08:16:37.309"/>
</kw>
<kw name="Get Current Active Chapter" library="leftnavigationbar">
<var>${ActiveChapter}</var>
<doc>This keywords checks which chapter is active and returns its name</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Xpath}</var>
<arg>//div[contains(@class,"sg-flyout__item")][contains(@class,"sg-flyout__item--active")]//a</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:37.309" level="INFO">${Xpath} = //div[contains(@class,"sg-flyout__item")][contains(@class,"sg-flyout__item--active")]//a</msg>
<status status="PASS" starttime="20241230 08:16:37.309" endtime="20241230 08:16:37.309"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:37.334" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:37.309" endtime="20241230 08:16:37.334"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>CHAPTER_NOT_FOUND</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:37.334" endtime="20241230 08:16:37.337"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${Status}</var>
<var>${ActiveChapter}</var>
<arg>SeleniumLibrary.get element attribute</arg>
<arg>${Xpath}</arg>
<arg>sg-qa-id</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<arg>${Xpath}</arg>
<arg>sg-qa-id</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<status status="PASS" starttime="20241230 08:16:37.338" endtime="20241230 08:16:37.369"/>
</kw>
<msg timestamp="20241230 08:16:37.369" level="INFO">${Status} = PASS</msg>
<msg timestamp="20241230 08:16:37.369" level="INFO">${ActiveChapter} = $ctrl.flyoutMenu__item--APP_LISTS</msg>
<status status="PASS" starttime="20241230 08:16:37.338" endtime="20241230 08:16:37.369"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>capture browser</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:37.377" endtime="20241230 08:16:37.377"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'FAIL'</arg>
<arg>return from keyword</arg>
<arg>CHAPTER_NOT_FOUND</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:37.377" endtime="20241230 08:16:37.377"/>
</kw>
<kw name="Get Index Inside String" library="generalfunctions">
<var>${indexOfChapterName}</var>
<arg>${ActiveChapter}</arg>
<arg>item--</arg>
<arg>True</arg>
<doc>Gdu: Return location of stringtwo in stringone or -1 if not found
Arguments:  boolean bIgnoreCase:    Yes means function will ignore case
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne
            bReverse:   use to start search at the end</doc>
<msg timestamp="20241230 08:16:37.377" level="INFO">${indexOfChapterName} = 18</msg>
<status status="PASS" starttime="20241230 08:16:37.377" endtime="20241230 08:16:37.377"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${indexOfChapterName}</var>
<arg>${indexOfChapterName}+6</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:16:37.377" level="INFO">${indexOfChapterName} = 24</msg>
<status status="PASS" starttime="20241230 08:16:37.377" endtime="20241230 08:16:37.377"/>
</kw>
<kw name="Get Substring" library="String">
<var>${substring}</var>
<arg>${ActiveChapter}</arg>
<arg>${indexOfChapterName}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20241230 08:16:37.377" level="INFO">${substring} = APP_LISTS</msg>
<status status="PASS" starttime="20241230 08:16:37.377" endtime="20241230 08:16:37.377"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${substring}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:37.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:37.385" endtime="20241230 08:16:37.385"/>
</kw>
<msg timestamp="20241230 08:16:37.385" level="INFO">${ActiveChapter} = APP_LISTS</msg>
<status status="PASS" starttime="20241230 08:16:37.309" endtime="20241230 08:16:37.385"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCompareChapter}</var>
<arg>${ActiveChapter}</arg>
<arg>LISTS</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:16:37.385" level="INFO">${bCompareChapter} = True</msg>
<status status="PASS" starttime="20241230 08:16:37.385" endtime="20241230 08:16:37.385"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${ListLink}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:37.392" endtime="20241230 08:16:37.416"/>
</kw>
<msg timestamp="20241230 08:16:37.416" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:37.392" endtime="20241230 08:16:37.424"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:37.424" endtime="20241230 08:16:37.424"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:37.424" level="INFO">Clicking element '//a[contains(@sg-qa-id,'--APP_LISTS')]/i'.</msg>
<status status="PASS" starttime="20241230 08:16:37.424" endtime="20241230 08:16:37.513"/>
</kw>
<msg timestamp="20241230 08:16:37.513" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:37.424" endtime="20241230 08:16:37.513"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:37.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:37.513" endtime="20241230 08:16:37.513"/>
</kw>
<status status="PASS" starttime="20241230 08:16:37.385" endtime="20241230 08:16:37.513"/>
</kw>
<kw name="Confirm Browser Popup if appears" library="edit_topbuttonbar">
<kw name="Handle Simple Alert" library="generalfunctions">
<var>${bAlert}</var>
<doc>Gdu: Handle a simple alert
Click on ok on the alert</doc>
<msg timestamp="20241230 08:16:39.330" level="INFO">${bAlert} = False</msg>
<status status="PASS" starttime="20241230 08:16:37.513" endtime="20241230 08:16:39.330"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>not ${bAlert}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.330"/>
</kw>
<status status="PASS" starttime="20241230 08:16:37.513" endtime="20241230 08:16:39.330"/>
</kw>
<if>
<branch type="IF" condition="not ${bCompareChapter}">
<kw name="wait until pageloading spinner appears" library="leftnavigationbar">
<arg>NrOfLoops=10</arg>
<arg>Timeout=0.5</arg>
<status status="NOT RUN" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.330"/>
</kw>
<kw name="wait until pageloading spinner dissapears" library="leftnavigationbar">
<status status="NOT RUN" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.330"/>
</kw>
<kw name="wait until lists spinner appears" library="leftnavigationbar">
<arg>NrOfLoops=10</arg>
<arg>Timeout=0.5</arg>
<status status="NOT RUN" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.330"/>
</kw>
<kw name="wait until lists spinner disappears" library="leftnavigationbar">
<doc>This keyword is used to wait until the list spinner disappears
This is only applicable when in or clicking on the lists tab</doc>
<status status="NOT RUN" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.330"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.330"/>
</branch>
<status status="PASS" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.330"/>
</if>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${ChapterSearchbox}</arg>
<arg>180</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.338" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.338" endtime="20241230 08:16:39.338"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:39.338" endtime="20241230 08:16:39.374"/>
</kw>
<msg timestamp="20241230 08:16:39.374" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:39.338" endtime="20241230 08:16:39.374"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.374" endtime="20241230 08:16:39.374"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.338" endtime="20241230 08:16:39.374"/>
</iter>
<status status="PASS" starttime="20241230 08:16:39.338" endtime="20241230 08:16:39.374"/>
</for>
<status status="PASS" starttime="20241230 08:16:39.330" endtime="20241230 08:16:39.374"/>
</kw>
<kw name="Set Focus To Element" library="SeleniumLibrary">
<arg>${ChapterSearchbox}</arg>
<doc>Sets the focus to the element identified by ``locator``.</doc>
<status status="PASS" starttime="20241230 08:16:39.374" endtime="20241230 08:16:39.407"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${VerifyListsTitle}</arg>
<arg>Verify title on Page</arg>
<arg>Lists</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Verify title on Page" library="general_functions">
<arg>Lists</arg>
<doc>Verify that the title on the page contains the correct text</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>//sg-title//*[text()='${Title}'] | //div[contains(@class,"chapter-header")]/*[text()='${Title}']</arg>
<arg>${Stop}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.407" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.407"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.442"/>
</kw>
<msg timestamp="20241230 08:16:39.442" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.442"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.442" endtime="20241230 08:16:39.442"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.442"/>
</iter>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.442"/>
</for>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.442"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.442"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.407" endtime="20241230 08:16:39.442"/>
</kw>
<kw name="Disable Animations" library="loginpage">
<doc>This keyword should disable the animations of the slideouts &amp; dropdowns on the website, so we have less race conditions</doc>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20241230 08:16:39.450" level="INFO">Executing JavaScript:
var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);
Without any arguments.</msg>
<status status="PASS" starttime="20241230 08:16:39.442" endtime="20241230 08:16:39.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:16:39.508" level="INFO">var foo = document.createElement('style');foo.innerHTML = "* { transition: unset !important; }";document.head.appendChild(foo);</msg>
<status status="PASS" starttime="20241230 08:16:39.508" endtime="20241230 08:16:39.508"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.442" endtime="20241230 08:16:39.508"/>
</kw>
<kw name="Activate Root for Correct Search" library="leftnavigationbar">
<doc>When reopening SMC, previous folder may be selected by default, this may compromise the search</doc>
<kw name="Wait For Page Readystate" library="generalfunctions">
<arg>60</arg>
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<msg timestamp="20241230 08:16:39.516" level="INFO">Waiting for page to finish loading
Load Complete.</msg>
<status status="PASS" starttime="20241230 08:16:39.508" endtime="20241230 08:16:39.516"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Wait Until With For Loop</arg>
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.524" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.524" endtime="20241230 08:16:39.524"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:39.524" endtime="20241230 08:16:39.552"/>
</kw>
<msg timestamp="20241230 08:16:39.552" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:39.524" endtime="20241230 08:16:39.552"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.552" endtime="20241230 08:16:39.552"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.524" endtime="20241230 08:16:39.552"/>
</iter>
<status status="PASS" starttime="20241230 08:16:39.524" endtime="20241230 08:16:39.552"/>
</for>
<status status="PASS" starttime="20241230 08:16:39.524" endtime="20241230 08:16:39.552"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.524" endtime="20241230 08:16:39.552"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:39.568" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:39.552" endtime="20241230 08:16:39.568"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${NoResultsFound}</var>
<arg>${NoResultsFound}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:39.583" level="INFO">${NoResultsFound} = 0</msg>
<status status="PASS" starttime="20241230 08:16:39.568" endtime="20241230 08:16:39.583"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bReload}</var>
<arg>${CurrentPath} &lt; 1</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:39.583" level="INFO">${bReload} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.583"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bReload}</var>
<arg>${NoResultsFound} &gt; 0</arg>
<arg>${True}</arg>
<arg>${bReload}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:39.583" level="INFO">${bReload} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.583"/>
</kw>
<if>
<branch type="IF" condition="${bReload}">
<kw name="Log" library="BuiltIn">
<arg>Breadcrumb not found, workaround was activated</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.583"/>
</kw>
<kw name="Reload Page Contents" library="generalfunctions">
<doc>Gdu: Reload current page
Do not confuse with refresh page above which does not reload the page</doc>
<status status="NOT RUN" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.583"/>
</kw>
<kw name="Wait For Page Readystate" library="generalfunctions">
<arg>60</arg>
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<status status="NOT RUN" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.583"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.583"/>
</branch>
<status status="PASS" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.583"/>
</if>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:39.600" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:39.583" endtime="20241230 08:16:39.600"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CurrentPath} &lt; 1</arg>
<arg>Wait Until With For Loop</arg>
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:39.600" endtime="20241230 08:16:39.600"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${CurrentContentPath}</var>
<arg>${0}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.629" level="INFO">${CurrentContentPath} = 0</msg>
<status status="PASS" starttime="20241230 08:16:39.600" endtime="20241230 08:16:39.629"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:39.633" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:39.629" endtime="20241230 08:16:39.633"/>
</kw>
<if>
<branch type="IF" condition="${CurrentPath} &lt; 2">
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:39.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.646" endtime="20241230 08:16:39.647"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.645" endtime="20241230 08:16:39.647"/>
</branch>
<status status="PASS" starttime="20241230 08:16:39.633" endtime="20241230 08:16:39.647"/>
</if>
<status status="PASS" starttime="20241230 08:16:39.508" endtime="20241230 08:16:39.647"/>
</kw>
<status status="PASS" starttime="20241230 08:16:36.957" endtime="20241230 08:16:39.647"/>
</kw>
<status status="PASS" starttime="20241230 08:16:32.185" endtime="20241230 08:16:39.647"/>
</kw>
<kw name="Search And Open Existing List" library="list_usecases">
<arg>SanityUserList${d}</arg>
<doc>Search and Open Existing List fails now and then, the list is not opened for editing</doc>
<kw name="Search List" library="list_dashboard">
<arg>${ListName}</arg>
<doc>This keywords is used to Search a list</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${ChapterSearchbox}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.648" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.648" endtime="20241230 08:16:39.648"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:39.648" endtime="20241230 08:16:39.677"/>
</kw>
<msg timestamp="20241230 08:16:39.677" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:39.648" endtime="20241230 08:16:39.677"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.677" endtime="20241230 08:16:39.677"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.648" endtime="20241230 08:16:39.677"/>
</iter>
<status status="PASS" starttime="20241230 08:16:39.648" endtime="20241230 08:16:39.677"/>
</for>
<status status="PASS" starttime="20241230 08:16:39.648" endtime="20241230 08:16:39.677"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${All_Filter}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.685" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.685" endtime="20241230 08:16:39.685"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:39.685" endtime="20241230 08:16:39.713"/>
</kw>
<msg timestamp="20241230 08:16:39.713" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:39.685" endtime="20241230 08:16:39.713"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.713" endtime="20241230 08:16:39.713"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.685" endtime="20241230 08:16:39.713"/>
</iter>
<status status="PASS" starttime="20241230 08:16:39.685" endtime="20241230 08:16:39.713"/>
</for>
<status status="PASS" starttime="20241230 08:16:39.677" endtime="20241230 08:16:39.713"/>
</kw>
<kw name="Disable all last set filters" library="dashboard">
<doc>When reopening SMC, previous filters may be selected by default, this may compromise the search</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${AllFilter}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.713" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.713" endtime="20241230 08:16:39.713"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:39.726" endtime="20241230 08:16:39.741"/>
</kw>
<msg timestamp="20241230 08:16:39.741" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:39.713" endtime="20241230 08:16:39.749"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.749" endtime="20241230 08:16:39.749"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.713" endtime="20241230 08:16:39.749"/>
</iter>
<status status="PASS" starttime="20241230 08:16:39.713" endtime="20241230 08:16:39.749"/>
</for>
<status status="PASS" starttime="20241230 08:16:39.713" endtime="20241230 08:16:39.749"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${appSwitcher}</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:39.749" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:39.749" endtime="20241230 08:16:39.749"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:39.749" endtime="20241230 08:16:39.777"/>
</kw>
<msg timestamp="20241230 08:16:39.777" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:39.749" endtime="20241230 08:16:39.777"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:39.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:39.777" endtime="20241230 08:16:39.777"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.749" endtime="20241230 08:16:39.777"/>
</iter>
<status status="PASS" starttime="20241230 08:16:39.749" endtime="20241230 08:16:39.777"/>
</for>
<status status="PASS" starttime="20241230 08:16:39.749" endtime="20241230 08:16:39.777"/>
</kw>
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${appSwitcher}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20241230 08:16:39.777" level="INFO">Simulating Mouse Over on element '//div[@id="applicationDropdownMenu"]/span'.</msg>
<status status="PASS" starttime="20241230 08:16:39.777" endtime="20241230 08:16:40.065"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${AllFilterActive}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:40.081" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:40.065" endtime="20241230 08:16:40.081"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${count} &gt; 0</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:40.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:40.081" endtime="20241230 08:16:40.081"/>
</kw>
<status status="PASS" starttime="20241230 08:16:39.713" endtime="20241230 08:16:40.081"/>
</kw>
<kw name="Activate Root for Correct Search" library="leftnavigationbar">
<doc>When reopening SMC, previous folder may be selected by default, this may compromise the search</doc>
<kw name="Wait For Page Readystate" library="generalfunctions">
<arg>60</arg>
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<msg timestamp="20241230 08:16:40.090" level="INFO">Waiting for page to finish loading
Load Complete.</msg>
<status status="PASS" starttime="20241230 08:16:40.090" endtime="20241230 08:16:40.090"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Wait Until With For Loop</arg>
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:40.098" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:40.098" endtime="20241230 08:16:40.098"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20241230 08:16:40.098" endtime="20241230 08:16:40.122"/>
</kw>
<msg timestamp="20241230 08:16:40.122" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:40.098" endtime="20241230 08:16:40.122"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:40.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:40.122" endtime="20241230 08:16:40.122"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.098" endtime="20241230 08:16:40.122"/>
</iter>
<status status="PASS" starttime="20241230 08:16:40.098" endtime="20241230 08:16:40.122"/>
</for>
<status status="PASS" starttime="20241230 08:16:40.098" endtime="20241230 08:16:40.122"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.090" endtime="20241230 08:16:40.122"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:40.130" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:40.122" endtime="20241230 08:16:40.130"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${NoResultsFound}</var>
<arg>${NoResultsFound}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:40.138" level="INFO">${NoResultsFound} = 0</msg>
<status status="PASS" starttime="20241230 08:16:40.130" endtime="20241230 08:16:40.146"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bReload}</var>
<arg>${CurrentPath} &lt; 1</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:40.146" level="INFO">${bReload} = False</msg>
<status status="PASS" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.146"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bReload}</var>
<arg>${NoResultsFound} &gt; 0</arg>
<arg>${True}</arg>
<arg>${bReload}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:16:40.146" level="INFO">${bReload} = False</msg>
<status status="PASS" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.146"/>
</kw>
<if>
<branch type="IF" condition="${bReload}">
<kw name="Log" library="BuiltIn">
<arg>Breadcrumb not found, workaround was activated</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.146"/>
</kw>
<kw name="Reload Page Contents" library="generalfunctions">
<doc>Gdu: Reload current page
Do not confuse with refresh page above which does not reload the page</doc>
<status status="NOT RUN" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.146"/>
</kw>
<kw name="Wait For Page Readystate" library="generalfunctions">
<arg>60</arg>
<doc>Waits for the page to finish loading by checking its readystate = complete</doc>
<status status="NOT RUN" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.146"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.146"/>
</branch>
<status status="PASS" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.146"/>
</if>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:40.162" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:40.146" endtime="20241230 08:16:40.162"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${CurrentPath} &lt; 1</arg>
<arg>Wait Until With For Loop</arg>
<arg>${Breadcrumbs}</arg>
<arg>60</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:40.162" endtime="20241230 08:16:40.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${CurrentContentPath}</var>
<arg>${0}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:40.178" level="INFO">${CurrentContentPath} = 0</msg>
<status status="PASS" starttime="20241230 08:16:40.162" endtime="20241230 08:16:40.178"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${CurrentPath}</var>
<arg>${Breadcrumbs}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:40.194" level="INFO">${CurrentPath} = 1</msg>
<status status="PASS" starttime="20241230 08:16:40.186" endtime="20241230 08:16:40.194"/>
</kw>
<if>
<branch type="IF" condition="${CurrentPath} &lt; 2">
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:40.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:40.194" endtime="20241230 08:16:40.194"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.194" endtime="20241230 08:16:40.194"/>
</branch>
<status status="PASS" starttime="20241230 08:16:40.194" endtime="20241230 08:16:40.194"/>
</if>
<status status="PASS" starttime="20241230 08:16:40.081" endtime="20241230 08:16:40.194"/>
</kw>
<kw name="Click Element With Fail Safe" library="general_functions">
<arg>${ChapterSearchbox}</arg>
<doc>A click on an element ALWAYS works, no need to hammer the button 50 times in a loop as fast as robot can handle it
This does not only stress the system and result in decreased performance, but also hides bad automation code
If your keywords are failing because of this change, please consider using keywords 'wait until with for loop' and 'Wait Until Page Contains With For Loop'</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Wait Until Element Is Enabled</arg>
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Enabled" library="SeleniumLibrary">
<arg>${xpath}</arg>
<arg>3</arg>
<doc>Waits until the element ``locator`` is enabled.</doc>
<status status="PASS" starttime="20241230 08:16:40.202" endtime="20241230 08:16:40.226"/>
</kw>
<msg timestamp="20241230 08:16:40.226" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20241230 08:16:40.202" endtime="20241230 08:16:40.226"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${Status}</arg>
<arg>log to report and console</arg>
<arg>Only active elements can be clicked on, actionclick may be required</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:40.226" endtime="20241230 08:16:40.226"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Click Element</arg>
<arg>${xpath}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:40.234" level="INFO">Clicking element '//*[contains(@sg-qa-id,"__search")] | //input[@sg-qa-id="sg-search-input"] | //sg-search//input[contains(@id,"mat-input-")] | //input[@placeholder='Search...']'.</msg>
<status status="PASS" starttime="20241230 08:16:40.234" endtime="20241230 08:16:40.322"/>
</kw>
<msg timestamp="20241230 08:16:40.322" level="INFO">${Status} = True</msg>
<status status="PASS" starttime="20241230 08:16:40.234" endtime="20241230 08:16:40.322"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:40.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:40.322" endtime="20241230 08:16:40.322"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.194" endtime="20241230 08:16:40.322"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>${ChapterSearchbox}</arg>
<arg>${ListName}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20241230 08:16:40.330" level="INFO">Typing text 'SanityUserList1735542964' into text field '//*[contains(@sg-qa-id,"__search")] | //input[@sg-qa-id="sg-search-input"] | //sg-search//input[contains(@id,"mat-input-")] | //input[@placeholder='Search...']'.</msg>
<status status="PASS" starttime="20241230 08:16:40.322" endtime="20241230 08:16:40.818"/>
</kw>
<if>
<branch type="IF" condition="${UseGrizzlyLists}">
<kw name="wait until general grid spinner appears" library="leftnavigationbar">
<arg>NrOfLoops=5</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${Xpath}</var>
<arg>//sg-is-loading-overlay//i[@class='flex spinner']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:40.818" level="INFO">${Xpath} = //sg-is-loading-overlay//i[@class='flex spinner']</msg>
<status status="PASS" starttime="20241230 08:16:40.818" endtime="20241230 08:16:40.818"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:40.828" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:40.818" endtime="20241230 08:16:40.828"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>Check Element Exists With For Loop and Timeout</arg>
<arg>${Xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Check Element Exists With For Loop and Timeout" library="general_functions">
<arg>${Xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<doc>Loops with timout of Timeout untill either element is found or max Range is reached
returns True if element was found, False if not, calling function should trigger error if necessary
Please note both the visible check and count can take 0.5 seconds so the entire loop time is around 1.5 seconds</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:40.840" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:40.840" endtime="20241230 08:16:40.840"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${LastIndex}</var>
<arg>${Range}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:16:40.844" level="INFO">${LastIndex} = 4</msg>
<status status="PASS" starttime="20241230 08:16:40.840" endtime="20241230 08:16:40.844"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Range}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:40.844" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:40.844" endtime="20241230 08:16:40.844"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:40.860" level="FAIL">Element with locator '//sg-is-loading-overlay//i[@class='flex spinner']' not found.</msg>
<status status="FAIL" starttime="20241230 08:16:40.844" endtime="20241230 08:16:40.860"/>
</kw>
<msg timestamp="20241230 08:16:40.860" level="INFO">${EleVisibleStatus} = False</msg>
<status status="PASS" starttime="20241230 08:16:40.844" endtime="20241230 08:16:40.860"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:40.860" endtime="20241230 08:16:40.860"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:40.860" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:40.860" endtime="20241230 08:16:40.860"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${bDoesNotHaveToBeDisplayed} and ${count} &gt; 0</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:40.860" endtime="20241230 08:16:40.873"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${INDEX} == ${LastIndex}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:40.873" endtime="20241230 08:16:40.873"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:41.374" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:40.873" endtime="20241230 08:16:41.374"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:41.374" level="INFO">${bVisible} = False</msg>
<status status="PASS" starttime="20241230 08:16:41.374" endtime="20241230 08:16:41.374"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.844" endtime="20241230 08:16:41.374"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Set Variable" library="BuiltIn">
<var>${bVisible}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:41.374" level="INFO">${bVisible} = True</msg>
<status status="PASS" starttime="20241230 08:16:41.374" endtime="20241230 08:16:41.374"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EleVisibleStatus}</var>
<arg>Element Should Be Visible</arg>
<arg>${Locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>${Locator}</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:41.394" level="INFO">Element '//sg-is-loading-overlay//i[@class='flex spinner']' is displayed.</msg>
<status status="PASS" starttime="20241230 08:16:41.379" endtime="20241230 08:16:41.394"/>
</kw>
<msg timestamp="20241230 08:16:41.394" level="INFO">${EleVisibleStatus} = True</msg>
<status status="PASS" starttime="20241230 08:16:41.374" endtime="20241230 08:16:41.394"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${EleVisibleStatus}</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:41.406" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:41.406" endtime="20241230 08:16:41.406"/>
</kw>
<status status="PASS" starttime="20241230 08:16:41.374" endtime="20241230 08:16:41.406"/>
</iter>
<status status="PASS" starttime="20241230 08:16:40.844" endtime="20241230 08:16:41.406"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bVisible}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:41.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:41.406" endtime="20241230 08:16:41.406"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.840" endtime="20241230 08:16:41.406"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.828" endtime="20241230 08:16:41.406"/>
</kw>
<status status="PASS" starttime="20241230 08:16:40.818" endtime="20241230 08:16:41.406"/>
</kw>
<kw name="wait until general grid spinner disappears" library="leftnavigationbar">
<doc>This keyword is used to wait until the chapter grid spinner disappears
Spinner appears when switching chapters or switching folder within a chapter
Keyword is intended to replace wait until content/journey/list spinner when all are updated to grizzly</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Xpath}</var>
<arg>//sg-is-loading-overlay//i[@class='flex spinner']</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:41.410" level="INFO">${Xpath} = //sg-is-loading-overlay//i[@class='flex spinner']</msg>
<status status="PASS" starttime="20241230 08:16:41.410" endtime="20241230 08:16:41.410"/>
</kw>
<kw name="Check if spinner disappeared" library="leftnavigationbar">
<var>${bDisappeared}</var>
<arg>${xpath}</arg>
<arg>${NrOfLoops}</arg>
<arg>${Timeout}</arg>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:41.423" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:41.410" endtime="20241230 08:16:41.423"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:41.423" endtime="20241230 08:16:41.426"/>
</kw>
<for flavor="IN RANGE">
<var>${Index}</var>
<value>0</value>
<value>${NrOfLoops}</value>
<iter>
<var name="${Index}">0</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:41.426" endtime="20241230 08:16:41.426"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:41.940" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:41.426" endtime="20241230 08:16:41.940"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:41.943" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:41.940" endtime="20241230 08:16:41.943"/>
</kw>
<status status="PASS" starttime="20241230 08:16:41.426" endtime="20241230 08:16:41.943"/>
</iter>
<iter>
<var name="${Index}">1</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:41.943" endtime="20241230 08:16:41.943"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:42.457" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:41.943" endtime="20241230 08:16:42.457"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:42.460" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:42.457" endtime="20241230 08:16:42.460"/>
</kw>
<status status="PASS" starttime="20241230 08:16:41.943" endtime="20241230 08:16:42.460"/>
</iter>
<iter>
<var name="${Index}">2</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:42.460" endtime="20241230 08:16:42.460"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:42.973" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:42.472" endtime="20241230 08:16:42.973"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:42.976" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20241230 08:16:42.973" endtime="20241230 08:16:42.976"/>
</kw>
<status status="PASS" starttime="20241230 08:16:42.460" endtime="20241230 08:16:42.976"/>
</iter>
<iter>
<var name="${Index}">3</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:42.976" endtime="20241230 08:16:42.976"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${Timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241230 08:16:43.490" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20241230 08:16:42.989" endtime="20241230 08:16:43.490"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Xpath}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:16:43.493" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:16:43.490" endtime="20241230 08:16:43.493"/>
</kw>
<status status="PASS" starttime="20241230 08:16:42.976" endtime="20241230 08:16:43.493"/>
</iter>
<iter>
<var name="${Index}">4</var>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<msg timestamp="20241230 08:16:43.506" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20241230 08:16:43.506" endtime="20241230 08:16:43.506"/>
</kw>
<status status="PASS" starttime="20241230 08:16:43.493" endtime="20241230 08:16:43.506"/>
</iter>
<status status="PASS" starttime="20241230 08:16:41.426" endtime="20241230 08:16:43.506"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${count} &lt; 1</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:43.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:43.509" endtime="20241230 08:16:43.509"/>
</kw>
<status status="PASS" starttime="20241230 08:16:43.506" endtime="20241230 08:16:43.509"/>
</kw>
<msg timestamp="20241230 08:16:43.509" level="INFO">${bDisappeared} = True</msg>
<status status="PASS" starttime="20241230 08:16:41.410" endtime="20241230 08:16:43.509"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bDisappeared}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:16:43.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:16:43.509" endtime="20241230 08:16:43.509"/>
</kw>
<status status="PASS" starttime="20241230 08:16:41.406" endtime="20241230 08:16:43.509"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${ListNameGrid}/a[normalize-space()='${ListName}']</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<kw name="Set Variable" library="BuiltIn">
<var>${Status}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:16:43.509" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:43.509" endtime="20241230 08:16:43.509"/>
</kw>
<for flavor="IN RANGE">
<var>${INDEX}</var>
<value>1</value>
<value>${Stop}</value>
<iter>
<var name="${INDEX}">1</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:44.140" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:43.509" endtime="20241230 08:16:44.140"/>
</kw>
<msg timestamp="20241230 08:16:44.140" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:43.509" endtime="20241230 08:16:44.140"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:44.140" endtime="20241230 08:16:44.140"/>
</kw>
<status status="PASS" starttime="20241230 08:16:43.509" endtime="20241230 08:16:44.140"/>
</iter>
<iter>
<var name="${INDEX}">2</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:44.782" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:44.140" endtime="20241230 08:16:44.782"/>
</kw>
<msg timestamp="20241230 08:16:44.782" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:44.140" endtime="20241230 08:16:44.782"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:44.782" endtime="20241230 08:16:44.782"/>
</kw>
<status status="PASS" starttime="20241230 08:16:44.140" endtime="20241230 08:16:44.782"/>
</iter>
<iter>
<var name="${INDEX}">3</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:45.412" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:44.785" endtime="20241230 08:16:45.412"/>
</kw>
<msg timestamp="20241230 08:16:45.412" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:44.785" endtime="20241230 08:16:45.412"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:45.412" endtime="20241230 08:16:45.412"/>
</kw>
<status status="PASS" starttime="20241230 08:16:44.785" endtime="20241230 08:16:45.412"/>
</iter>
<iter>
<var name="${INDEX}">4</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:46.042" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:45.416" endtime="20241230 08:16:46.042"/>
</kw>
<msg timestamp="20241230 08:16:46.042" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:45.416" endtime="20241230 08:16:46.042"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:46.042" endtime="20241230 08:16:46.042"/>
</kw>
<status status="PASS" starttime="20241230 08:16:45.412" endtime="20241230 08:16:46.042"/>
</iter>
<iter>
<var name="${INDEX}">5</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:46.688" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:46.045" endtime="20241230 08:16:46.688"/>
</kw>
<msg timestamp="20241230 08:16:46.688" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:46.045" endtime="20241230 08:16:46.688"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:46.688" endtime="20241230 08:16:46.691"/>
</kw>
<status status="PASS" starttime="20241230 08:16:46.045" endtime="20241230 08:16:46.691"/>
</iter>
<iter>
<var name="${INDEX}">6</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:47.334" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:46.691" endtime="20241230 08:16:47.334"/>
</kw>
<msg timestamp="20241230 08:16:47.334" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:46.691" endtime="20241230 08:16:47.334"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:47.338" endtime="20241230 08:16:47.338"/>
</kw>
<status status="PASS" starttime="20241230 08:16:46.691" endtime="20241230 08:16:47.338"/>
</iter>
<iter>
<var name="${INDEX}">7</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:47.980" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:47.338" endtime="20241230 08:16:47.980"/>
</kw>
<msg timestamp="20241230 08:16:47.980" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:47.338" endtime="20241230 08:16:47.980"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:47.980" endtime="20241230 08:16:47.980"/>
</kw>
<status status="PASS" starttime="20241230 08:16:47.338" endtime="20241230 08:16:47.980"/>
</iter>
<iter>
<var name="${INDEX}">8</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:48.610" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:47.984" endtime="20241230 08:16:48.610"/>
</kw>
<msg timestamp="20241230 08:16:48.610" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:47.984" endtime="20241230 08:16:48.610"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:48.612" endtime="20241230 08:16:48.612"/>
</kw>
<status status="PASS" starttime="20241230 08:16:47.980" endtime="20241230 08:16:48.612"/>
</iter>
<iter>
<var name="${INDEX}">9</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:49.240" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:48.612" endtime="20241230 08:16:49.240"/>
</kw>
<msg timestamp="20241230 08:16:49.240" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:48.612" endtime="20241230 08:16:49.240"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:49.240" endtime="20241230 08:16:49.240"/>
</kw>
<status status="PASS" starttime="20241230 08:16:48.612" endtime="20241230 08:16:49.240"/>
</iter>
<iter>
<var name="${INDEX}">10</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:49.886" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:49.243" endtime="20241230 08:16:49.886"/>
</kw>
<msg timestamp="20241230 08:16:49.886" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:49.243" endtime="20241230 08:16:49.886"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:49.886" endtime="20241230 08:16:49.889"/>
</kw>
<status status="PASS" starttime="20241230 08:16:49.243" endtime="20241230 08:16:49.889"/>
</iter>
<iter>
<var name="${INDEX}">11</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:50.597" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:49.889" endtime="20241230 08:16:50.597"/>
</kw>
<msg timestamp="20241230 08:16:50.597" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:49.889" endtime="20241230 08:16:50.597"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:50.597" endtime="20241230 08:16:50.597"/>
</kw>
<status status="PASS" starttime="20241230 08:16:49.889" endtime="20241230 08:16:50.597"/>
</iter>
<iter>
<var name="${INDEX}">12</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:51.227" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:50.597" endtime="20241230 08:16:51.227"/>
</kw>
<msg timestamp="20241230 08:16:51.227" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:50.597" endtime="20241230 08:16:51.227"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:51.227" endtime="20241230 08:16:51.227"/>
</kw>
<status status="PASS" starttime="20241230 08:16:50.597" endtime="20241230 08:16:51.227"/>
</iter>
<iter>
<var name="${INDEX}">13</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:51.841" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:51.231" endtime="20241230 08:16:51.841"/>
</kw>
<msg timestamp="20241230 08:16:51.841" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:51.231" endtime="20241230 08:16:51.841"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:51.841" endtime="20241230 08:16:51.844"/>
</kw>
<status status="PASS" starttime="20241230 08:16:51.227" endtime="20241230 08:16:51.844"/>
</iter>
<iter>
<var name="${INDEX}">14</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:52.487" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:51.844" endtime="20241230 08:16:52.487"/>
</kw>
<msg timestamp="20241230 08:16:52.487" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:51.844" endtime="20241230 08:16:52.487"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:52.487" endtime="20241230 08:16:52.487"/>
</kw>
<status status="PASS" starttime="20241230 08:16:51.844" endtime="20241230 08:16:52.487"/>
</iter>
<iter>
<var name="${INDEX}">15</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:53.101" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:52.491" endtime="20241230 08:16:53.101"/>
</kw>
<msg timestamp="20241230 08:16:53.101" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:52.491" endtime="20241230 08:16:53.101"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:53.101" endtime="20241230 08:16:53.101"/>
</kw>
<status status="PASS" starttime="20241230 08:16:52.487" endtime="20241230 08:16:53.101"/>
</iter>
<iter>
<var name="${INDEX}">16</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:53.723" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:53.104" endtime="20241230 08:16:53.723"/>
</kw>
<msg timestamp="20241230 08:16:53.723" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:53.104" endtime="20241230 08:16:53.723"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:53.723" endtime="20241230 08:16:53.723"/>
</kw>
<status status="PASS" starttime="20241230 08:16:53.101" endtime="20241230 08:16:53.723"/>
</iter>
<iter>
<var name="${INDEX}">17</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:54.348" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:53.723" endtime="20241230 08:16:54.348"/>
</kw>
<msg timestamp="20241230 08:16:54.348" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:53.723" endtime="20241230 08:16:54.348"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:54.348" endtime="20241230 08:16:54.348"/>
</kw>
<status status="PASS" starttime="20241230 08:16:53.723" endtime="20241230 08:16:54.348"/>
</iter>
<iter>
<var name="${INDEX}">18</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:54.989" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:54.348" endtime="20241230 08:16:54.989"/>
</kw>
<msg timestamp="20241230 08:16:54.989" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:54.348" endtime="20241230 08:16:54.989"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:54.989" endtime="20241230 08:16:54.989"/>
</kw>
<status status="PASS" starttime="20241230 08:16:54.348" endtime="20241230 08:16:54.989"/>
</iter>
<iter>
<var name="${INDEX}">19</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:55.622" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:54.989" endtime="20241230 08:16:55.622"/>
</kw>
<msg timestamp="20241230 08:16:55.622" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:54.989" endtime="20241230 08:16:55.622"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:55.624" endtime="20241230 08:16:55.624"/>
</kw>
<status status="PASS" starttime="20241230 08:16:54.989" endtime="20241230 08:16:55.624"/>
</iter>
<iter>
<var name="${INDEX}">20</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:56.251" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:55.624" endtime="20241230 08:16:56.251"/>
</kw>
<msg timestamp="20241230 08:16:56.251" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:55.624" endtime="20241230 08:16:56.251"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:56.251" endtime="20241230 08:16:56.251"/>
</kw>
<status status="PASS" starttime="20241230 08:16:55.624" endtime="20241230 08:16:56.251"/>
</iter>
<iter>
<var name="${INDEX}">21</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:56.889" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:56.251" endtime="20241230 08:16:56.889"/>
</kw>
<msg timestamp="20241230 08:16:56.889" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:56.251" endtime="20241230 08:16:56.889"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:56.889" endtime="20241230 08:16:56.889"/>
</kw>
<status status="PASS" starttime="20241230 08:16:56.251" endtime="20241230 08:16:56.889"/>
</iter>
<iter>
<var name="${INDEX}">22</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:57.511" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:56.889" endtime="20241230 08:16:57.511"/>
</kw>
<msg timestamp="20241230 08:16:57.511" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:56.889" endtime="20241230 08:16:57.511"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:57.511" endtime="20241230 08:16:57.514"/>
</kw>
<status status="PASS" starttime="20241230 08:16:56.889" endtime="20241230 08:16:57.514"/>
</iter>
<iter>
<var name="${INDEX}">23</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:58.157" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:57.514" endtime="20241230 08:16:58.157"/>
</kw>
<msg timestamp="20241230 08:16:58.157" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:57.514" endtime="20241230 08:16:58.157"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:58.157" endtime="20241230 08:16:58.160"/>
</kw>
<status status="PASS" starttime="20241230 08:16:57.514" endtime="20241230 08:16:58.160"/>
</iter>
<iter>
<var name="${INDEX}">24</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:58.803" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:58.160" endtime="20241230 08:16:58.803"/>
</kw>
<msg timestamp="20241230 08:16:58.803" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:58.160" endtime="20241230 08:16:58.803"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:58.803" endtime="20241230 08:16:58.806"/>
</kw>
<status status="PASS" starttime="20241230 08:16:58.160" endtime="20241230 08:16:58.806"/>
</iter>
<iter>
<var name="${INDEX}">25</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:16:59.433" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:58.806" endtime="20241230 08:16:59.433"/>
</kw>
<msg timestamp="20241230 08:16:59.433" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:58.806" endtime="20241230 08:16:59.433"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:16:59.433" endtime="20241230 08:16:59.433"/>
</kw>
<status status="PASS" starttime="20241230 08:16:58.806" endtime="20241230 08:16:59.433"/>
</iter>
<iter>
<var name="${INDEX}">26</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:00.063" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:16:59.436" endtime="20241230 08:17:00.063"/>
</kw>
<msg timestamp="20241230 08:17:00.063" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:16:59.436" endtime="20241230 08:17:00.063"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:00.063" endtime="20241230 08:17:00.063"/>
</kw>
<status status="PASS" starttime="20241230 08:16:59.433" endtime="20241230 08:17:00.063"/>
</iter>
<iter>
<var name="${INDEX}">27</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:00.709" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:00.067" endtime="20241230 08:17:00.709"/>
</kw>
<msg timestamp="20241230 08:17:00.709" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:00.067" endtime="20241230 08:17:00.709"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:00.709" endtime="20241230 08:17:00.712"/>
</kw>
<status status="PASS" starttime="20241230 08:17:00.063" endtime="20241230 08:17:00.712"/>
</iter>
<iter>
<var name="${INDEX}">28</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:01.323" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:00.712" endtime="20241230 08:17:01.323"/>
</kw>
<msg timestamp="20241230 08:17:01.323" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:00.712" endtime="20241230 08:17:01.323"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:01.323" endtime="20241230 08:17:01.323"/>
</kw>
<status status="PASS" starttime="20241230 08:17:00.712" endtime="20241230 08:17:01.323"/>
</iter>
<iter>
<var name="${INDEX}">29</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:01.953" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:01.326" endtime="20241230 08:17:01.953"/>
</kw>
<msg timestamp="20241230 08:17:01.953" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:01.326" endtime="20241230 08:17:01.953"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:01.953" endtime="20241230 08:17:01.953"/>
</kw>
<status status="PASS" starttime="20241230 08:17:01.323" endtime="20241230 08:17:01.953"/>
</iter>
<iter>
<var name="${INDEX}">30</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:02.599" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:01.956" endtime="20241230 08:17:02.599"/>
</kw>
<msg timestamp="20241230 08:17:02.599" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:01.956" endtime="20241230 08:17:02.599"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:02.602" endtime="20241230 08:17:02.602"/>
</kw>
<status status="PASS" starttime="20241230 08:17:01.956" endtime="20241230 08:17:02.602"/>
</iter>
<iter>
<var name="${INDEX}">31</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:03.229" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:02.602" endtime="20241230 08:17:03.229"/>
</kw>
<msg timestamp="20241230 08:17:03.229" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:02.602" endtime="20241230 08:17:03.229"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:03.229" endtime="20241230 08:17:03.229"/>
</kw>
<status status="PASS" starttime="20241230 08:17:02.602" endtime="20241230 08:17:03.232"/>
</iter>
<iter>
<var name="${INDEX}">32</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:03.847" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:03.232" endtime="20241230 08:17:03.847"/>
</kw>
<msg timestamp="20241230 08:17:03.847" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:03.232" endtime="20241230 08:17:03.847"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:03.847" endtime="20241230 08:17:03.847"/>
</kw>
<status status="PASS" starttime="20241230 08:17:03.232" endtime="20241230 08:17:03.847"/>
</iter>
<iter>
<var name="${INDEX}">33</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:04.461" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:03.847" endtime="20241230 08:17:04.461"/>
</kw>
<msg timestamp="20241230 08:17:04.461" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:03.847" endtime="20241230 08:17:04.461"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:04.464" endtime="20241230 08:17:04.464"/>
</kw>
<status status="PASS" starttime="20241230 08:17:03.847" endtime="20241230 08:17:04.464"/>
</iter>
<iter>
<var name="${INDEX}">34</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:05.102" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:04.466" endtime="20241230 08:17:05.102"/>
</kw>
<msg timestamp="20241230 08:17:05.102" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:04.466" endtime="20241230 08:17:05.102"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:05.102" endtime="20241230 08:17:05.102"/>
</kw>
<status status="PASS" starttime="20241230 08:17:04.464" endtime="20241230 08:17:05.102"/>
</iter>
<iter>
<var name="${INDEX}">35</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:05.716" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:05.106" endtime="20241230 08:17:05.716"/>
</kw>
<msg timestamp="20241230 08:17:05.716" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:05.106" endtime="20241230 08:17:05.716"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:05.716" endtime="20241230 08:17:05.716"/>
</kw>
<status status="PASS" starttime="20241230 08:17:05.106" endtime="20241230 08:17:05.716"/>
</iter>
<iter>
<var name="${INDEX}">36</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:06.347" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:05.720" endtime="20241230 08:17:06.347"/>
</kw>
<msg timestamp="20241230 08:17:06.347" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:05.720" endtime="20241230 08:17:06.347"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:06.347" endtime="20241230 08:17:06.350"/>
</kw>
<status status="PASS" starttime="20241230 08:17:05.716" endtime="20241230 08:17:06.350"/>
</iter>
<iter>
<var name="${INDEX}">37</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:06.976" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:06.350" endtime="20241230 08:17:06.976"/>
</kw>
<msg timestamp="20241230 08:17:06.976" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:06.350" endtime="20241230 08:17:06.976"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:06.976" endtime="20241230 08:17:06.979"/>
</kw>
<status status="PASS" starttime="20241230 08:17:06.350" endtime="20241230 08:17:06.979"/>
</iter>
<iter>
<var name="${INDEX}">38</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:07.597" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:06.979" endtime="20241230 08:17:07.597"/>
</kw>
<msg timestamp="20241230 08:17:07.597" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:06.979" endtime="20241230 08:17:07.597"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:07.597" endtime="20241230 08:17:07.597"/>
</kw>
<status status="PASS" starttime="20241230 08:17:06.979" endtime="20241230 08:17:07.597"/>
</iter>
<iter>
<var name="${INDEX}">39</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:08.227" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:07.597" endtime="20241230 08:17:08.227"/>
</kw>
<msg timestamp="20241230 08:17:08.227" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:07.597" endtime="20241230 08:17:08.227"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:08.227" endtime="20241230 08:17:08.227"/>
</kw>
<status status="PASS" starttime="20241230 08:17:07.597" endtime="20241230 08:17:08.227"/>
</iter>
<iter>
<var name="${INDEX}">40</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:08.860" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:08.227" endtime="20241230 08:17:08.860"/>
</kw>
<msg timestamp="20241230 08:17:08.860" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:08.227" endtime="20241230 08:17:08.860"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:08.860" endtime="20241230 08:17:08.860"/>
</kw>
<status status="PASS" starttime="20241230 08:17:08.227" endtime="20241230 08:17:08.860"/>
</iter>
<iter>
<var name="${INDEX}">41</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:09.494" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:08.860" endtime="20241230 08:17:09.494"/>
</kw>
<msg timestamp="20241230 08:17:09.494" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:08.860" endtime="20241230 08:17:09.494"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:09.494" endtime="20241230 08:17:09.494"/>
</kw>
<status status="PASS" starttime="20241230 08:17:08.860" endtime="20241230 08:17:09.494"/>
</iter>
<iter>
<var name="${INDEX}">42</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:10.126" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:09.502" endtime="20241230 08:17:10.126"/>
</kw>
<msg timestamp="20241230 08:17:10.126" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:09.494" endtime="20241230 08:17:10.126"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:10.126" endtime="20241230 08:17:10.126"/>
</kw>
<status status="PASS" starttime="20241230 08:17:09.494" endtime="20241230 08:17:10.126"/>
</iter>
<iter>
<var name="${INDEX}">43</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:10.750" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:10.126" endtime="20241230 08:17:10.750"/>
</kw>
<msg timestamp="20241230 08:17:10.750" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:10.126" endtime="20241230 08:17:10.750"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:10.750" endtime="20241230 08:17:10.750"/>
</kw>
<status status="PASS" starttime="20241230 08:17:10.126" endtime="20241230 08:17:10.750"/>
</iter>
<iter>
<var name="${INDEX}">44</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:11.386" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:10.750" endtime="20241230 08:17:11.386"/>
</kw>
<msg timestamp="20241230 08:17:11.386" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:10.750" endtime="20241230 08:17:11.386"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:11.386" endtime="20241230 08:17:11.389"/>
</kw>
<status status="PASS" starttime="20241230 08:17:10.750" endtime="20241230 08:17:11.389"/>
</iter>
<iter>
<var name="${INDEX}">45</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:12.016" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:11.389" endtime="20241230 08:17:12.016"/>
</kw>
<msg timestamp="20241230 08:17:12.016" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:11.389" endtime="20241230 08:17:12.016"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:12.016" endtime="20241230 08:17:12.016"/>
</kw>
<status status="PASS" starttime="20241230 08:17:11.389" endtime="20241230 08:17:12.016"/>
</iter>
<iter>
<var name="${INDEX}">46</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:12.646" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:12.016" endtime="20241230 08:17:12.646"/>
</kw>
<msg timestamp="20241230 08:17:12.646" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:12.016" endtime="20241230 08:17:12.646"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:12.649" endtime="20241230 08:17:12.649"/>
</kw>
<status status="PASS" starttime="20241230 08:17:12.016" endtime="20241230 08:17:12.649"/>
</iter>
<iter>
<var name="${INDEX}">47</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:13.284" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:12.649" endtime="20241230 08:17:13.284"/>
</kw>
<msg timestamp="20241230 08:17:13.284" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:12.649" endtime="20241230 08:17:13.284"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:13.284" endtime="20241230 08:17:13.284"/>
</kw>
<status status="PASS" starttime="20241230 08:17:12.649" endtime="20241230 08:17:13.284"/>
</iter>
<iter>
<var name="${INDEX}">48</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:13.911" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:13.284" endtime="20241230 08:17:13.911"/>
</kw>
<msg timestamp="20241230 08:17:13.912" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:13.284" endtime="20241230 08:17:13.912"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:13.912" endtime="20241230 08:17:13.912"/>
</kw>
<status status="PASS" starttime="20241230 08:17:13.284" endtime="20241230 08:17:13.912"/>
</iter>
<iter>
<var name="${INDEX}">49</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:14.568" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:13.912" endtime="20241230 08:17:14.568"/>
</kw>
<msg timestamp="20241230 08:17:14.568" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:13.912" endtime="20241230 08:17:14.568"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:14.572" endtime="20241230 08:17:14.572"/>
</kw>
<status status="PASS" starttime="20241230 08:17:13.912" endtime="20241230 08:17:14.572"/>
</iter>
<iter>
<var name="${INDEX}">50</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:15.215" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:14.572" endtime="20241230 08:17:15.215"/>
</kw>
<msg timestamp="20241230 08:17:15.215" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:14.572" endtime="20241230 08:17:15.215"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:15.215" endtime="20241230 08:17:15.218"/>
</kw>
<status status="PASS" starttime="20241230 08:17:14.572" endtime="20241230 08:17:15.218"/>
</iter>
<iter>
<var name="${INDEX}">51</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:15.845" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:15.218" endtime="20241230 08:17:15.845"/>
</kw>
<msg timestamp="20241230 08:17:15.845" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:15.218" endtime="20241230 08:17:15.845"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:15.845" endtime="20241230 08:17:15.845"/>
</kw>
<status status="PASS" starttime="20241230 08:17:15.218" endtime="20241230 08:17:15.845"/>
</iter>
<iter>
<var name="${INDEX}">52</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:16.491" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:15.847" endtime="20241230 08:17:16.491"/>
</kw>
<msg timestamp="20241230 08:17:16.491" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:15.847" endtime="20241230 08:17:16.491"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:16.491" endtime="20241230 08:17:16.491"/>
</kw>
<status status="PASS" starttime="20241230 08:17:15.847" endtime="20241230 08:17:16.491"/>
</iter>
<iter>
<var name="${INDEX}">53</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:17.137" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:16.494" endtime="20241230 08:17:17.137"/>
</kw>
<msg timestamp="20241230 08:17:17.137" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:16.494" endtime="20241230 08:17:17.137"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:17.140" endtime="20241230 08:17:17.140"/>
</kw>
<status status="PASS" starttime="20241230 08:17:16.494" endtime="20241230 08:17:17.140"/>
</iter>
<iter>
<var name="${INDEX}">54</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:17.751" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:17.140" endtime="20241230 08:17:17.751"/>
</kw>
<msg timestamp="20241230 08:17:17.751" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:17.140" endtime="20241230 08:17:17.751"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:17.751" endtime="20241230 08:17:17.751"/>
</kw>
<status status="PASS" starttime="20241230 08:17:17.140" endtime="20241230 08:17:17.751"/>
</iter>
<iter>
<var name="${INDEX}">55</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:18.381" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:17.751" endtime="20241230 08:17:18.381"/>
</kw>
<msg timestamp="20241230 08:17:18.381" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:17.751" endtime="20241230 08:17:18.381"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:18.381" endtime="20241230 08:17:18.381"/>
</kw>
<status status="PASS" starttime="20241230 08:17:17.751" endtime="20241230 08:17:18.381"/>
</iter>
<iter>
<var name="${INDEX}">56</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:19.010" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:18.384" endtime="20241230 08:17:19.010"/>
</kw>
<msg timestamp="20241230 08:17:19.010" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:18.384" endtime="20241230 08:17:19.010"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:19.010" endtime="20241230 08:17:19.010"/>
</kw>
<status status="PASS" starttime="20241230 08:17:18.384" endtime="20241230 08:17:19.010"/>
</iter>
<iter>
<var name="${INDEX}">57</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:19.632" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:19.014" endtime="20241230 08:17:19.632"/>
</kw>
<msg timestamp="20241230 08:17:19.632" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:19.014" endtime="20241230 08:17:19.632"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:19.632" endtime="20241230 08:17:19.632"/>
</kw>
<status status="PASS" starttime="20241230 08:17:19.010" endtime="20241230 08:17:19.632"/>
</iter>
<iter>
<var name="${INDEX}">58</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:20.254" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:19.632" endtime="20241230 08:17:20.254"/>
</kw>
<msg timestamp="20241230 08:17:20.254" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:19.632" endtime="20241230 08:17:20.254"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:20.254" endtime="20241230 08:17:20.254"/>
</kw>
<status status="PASS" starttime="20241230 08:17:19.632" endtime="20241230 08:17:20.254"/>
</iter>
<iter>
<var name="${INDEX}">59</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:20.900" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:20.257" endtime="20241230 08:17:20.900"/>
</kw>
<msg timestamp="20241230 08:17:20.900" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:20.257" endtime="20241230 08:17:20.900"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:20.900" endtime="20241230 08:17:20.904"/>
</kw>
<status status="PASS" starttime="20241230 08:17:20.254" endtime="20241230 08:17:20.904"/>
</iter>
<iter>
<var name="${INDEX}">60</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:21.547" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:20.904" endtime="20241230 08:17:21.547"/>
</kw>
<msg timestamp="20241230 08:17:21.547" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:20.904" endtime="20241230 08:17:21.547"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:21.547" endtime="20241230 08:17:21.550"/>
</kw>
<status status="PASS" starttime="20241230 08:17:20.904" endtime="20241230 08:17:21.550"/>
</iter>
<iter>
<var name="${INDEX}">61</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:22.177" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:21.550" endtime="20241230 08:17:22.177"/>
</kw>
<msg timestamp="20241230 08:17:22.177" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:21.550" endtime="20241230 08:17:22.177"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:22.177" endtime="20241230 08:17:22.177"/>
</kw>
<status status="PASS" starttime="20241230 08:17:21.550" endtime="20241230 08:17:22.177"/>
</iter>
<iter>
<var name="${INDEX}">62</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:22.807" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:22.177" endtime="20241230 08:17:22.807"/>
</kw>
<msg timestamp="20241230 08:17:22.807" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:22.177" endtime="20241230 08:17:22.807"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:22.807" endtime="20241230 08:17:22.807"/>
</kw>
<status status="PASS" starttime="20241230 08:17:22.177" endtime="20241230 08:17:22.807"/>
</iter>
<iter>
<var name="${INDEX}">63</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:23.420" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:22.810" endtime="20241230 08:17:23.420"/>
</kw>
<msg timestamp="20241230 08:17:23.420" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:22.810" endtime="20241230 08:17:23.420"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:23.420" endtime="20241230 08:17:23.424"/>
</kw>
<status status="PASS" starttime="20241230 08:17:22.807" endtime="20241230 08:17:23.424"/>
</iter>
<iter>
<var name="${INDEX}">64</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:24.050" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:23.424" endtime="20241230 08:17:24.050"/>
</kw>
<msg timestamp="20241230 08:17:24.050" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:23.424" endtime="20241230 08:17:24.050"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:24.050" endtime="20241230 08:17:24.050"/>
</kw>
<status status="PASS" starttime="20241230 08:17:23.424" endtime="20241230 08:17:24.050"/>
</iter>
<iter>
<var name="${INDEX}">65</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:24.696" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:24.053" endtime="20241230 08:17:24.696"/>
</kw>
<msg timestamp="20241230 08:17:24.696" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:24.053" endtime="20241230 08:17:24.696"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:24.696" endtime="20241230 08:17:24.696"/>
</kw>
<status status="PASS" starttime="20241230 08:17:24.053" endtime="20241230 08:17:24.696"/>
</iter>
<iter>
<var name="${INDEX}">66</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:25.342" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:24.700" endtime="20241230 08:17:25.342"/>
</kw>
<msg timestamp="20241230 08:17:25.342" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:24.700" endtime="20241230 08:17:25.342"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:25.342" endtime="20241230 08:17:25.345"/>
</kw>
<status status="PASS" starttime="20241230 08:17:24.696" endtime="20241230 08:17:25.345"/>
</iter>
<iter>
<var name="${INDEX}">67</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:25.989" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:25.345" endtime="20241230 08:17:25.989"/>
</kw>
<msg timestamp="20241230 08:17:25.989" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:25.345" endtime="20241230 08:17:25.989"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:25.989" endtime="20241230 08:17:25.989"/>
</kw>
<status status="PASS" starttime="20241230 08:17:25.345" endtime="20241230 08:17:25.989"/>
</iter>
<iter>
<var name="${INDEX}">68</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:26.619" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:25.993" endtime="20241230 08:17:26.619"/>
</kw>
<msg timestamp="20241230 08:17:26.619" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:25.993" endtime="20241230 08:17:26.619"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:26.619" endtime="20241230 08:17:26.619"/>
</kw>
<status status="PASS" starttime="20241230 08:17:25.989" endtime="20241230 08:17:26.619"/>
</iter>
<iter>
<var name="${INDEX}">69</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:27.265" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:26.619" endtime="20241230 08:17:27.265"/>
</kw>
<msg timestamp="20241230 08:17:27.265" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:26.619" endtime="20241230 08:17:27.265"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:27.265" endtime="20241230 08:17:27.265"/>
</kw>
<status status="PASS" starttime="20241230 08:17:26.619" endtime="20241230 08:17:27.265"/>
</iter>
<iter>
<var name="${INDEX}">70</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:27.912" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:27.268" endtime="20241230 08:17:27.912"/>
</kw>
<msg timestamp="20241230 08:17:27.912" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:27.268" endtime="20241230 08:17:27.912"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:27.912" endtime="20241230 08:17:27.912"/>
</kw>
<status status="PASS" starttime="20241230 08:17:27.265" endtime="20241230 08:17:27.912"/>
</iter>
<iter>
<var name="${INDEX}">71</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:28.541" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:27.915" endtime="20241230 08:17:28.541"/>
</kw>
<msg timestamp="20241230 08:17:28.541" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:27.915" endtime="20241230 08:17:28.541"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:28.541" endtime="20241230 08:17:28.544"/>
</kw>
<status status="PASS" starttime="20241230 08:17:27.915" endtime="20241230 08:17:28.544"/>
</iter>
<iter>
<var name="${INDEX}">72</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:29.187" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:28.544" endtime="20241230 08:17:29.187"/>
</kw>
<msg timestamp="20241230 08:17:29.187" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:28.544" endtime="20241230 08:17:29.187"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:29.187" endtime="20241230 08:17:29.187"/>
</kw>
<status status="PASS" starttime="20241230 08:17:28.544" endtime="20241230 08:17:29.187"/>
</iter>
<iter>
<var name="${INDEX}">73</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:29.817" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:29.191" endtime="20241230 08:17:29.817"/>
</kw>
<msg timestamp="20241230 08:17:29.817" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:29.191" endtime="20241230 08:17:29.817"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:29.817" endtime="20241230 08:17:29.817"/>
</kw>
<status status="PASS" starttime="20241230 08:17:29.187" endtime="20241230 08:17:29.817"/>
</iter>
<iter>
<var name="${INDEX}">74</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:30.447" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:29.820" endtime="20241230 08:17:30.447"/>
</kw>
<msg timestamp="20241230 08:17:30.447" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:29.820" endtime="20241230 08:17:30.447"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:30.447" endtime="20241230 08:17:30.450"/>
</kw>
<status status="PASS" starttime="20241230 08:17:29.820" endtime="20241230 08:17:30.450"/>
</iter>
<iter>
<var name="${INDEX}">75</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:31.093" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:30.450" endtime="20241230 08:17:31.093"/>
</kw>
<msg timestamp="20241230 08:17:31.093" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:30.450" endtime="20241230 08:17:31.093"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:31.093" endtime="20241230 08:17:31.096"/>
</kw>
<status status="PASS" starttime="20241230 08:17:30.450" endtime="20241230 08:17:31.096"/>
</iter>
<iter>
<var name="${INDEX}">76</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:31.739" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:31.096" endtime="20241230 08:17:31.739"/>
</kw>
<msg timestamp="20241230 08:17:31.739" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:31.096" endtime="20241230 08:17:31.739"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:31.739" endtime="20241230 08:17:31.739"/>
</kw>
<status status="PASS" starttime="20241230 08:17:31.096" endtime="20241230 08:17:31.739"/>
</iter>
<iter>
<var name="${INDEX}">77</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:32.369" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:31.743" endtime="20241230 08:17:32.369"/>
</kw>
<msg timestamp="20241230 08:17:32.369" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:31.743" endtime="20241230 08:17:32.369"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:32.369" endtime="20241230 08:17:32.372"/>
</kw>
<status status="PASS" starttime="20241230 08:17:31.739" endtime="20241230 08:17:32.372"/>
</iter>
<iter>
<var name="${INDEX}">78</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:32.990" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:32.372" endtime="20241230 08:17:32.990"/>
</kw>
<msg timestamp="20241230 08:17:32.990" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:32.372" endtime="20241230 08:17:32.990"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:32.990" endtime="20241230 08:17:32.990"/>
</kw>
<status status="PASS" starttime="20241230 08:17:32.372" endtime="20241230 08:17:32.990"/>
</iter>
<iter>
<var name="${INDEX}">79</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:33.629" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:32.990" endtime="20241230 08:17:33.629"/>
</kw>
<msg timestamp="20241230 08:17:33.629" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:32.990" endtime="20241230 08:17:33.629"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:33.629" endtime="20241230 08:17:33.629"/>
</kw>
<status status="PASS" starttime="20241230 08:17:32.990" endtime="20241230 08:17:33.629"/>
</iter>
<iter>
<var name="${INDEX}">80</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:34.259" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:33.633" endtime="20241230 08:17:34.259"/>
</kw>
<msg timestamp="20241230 08:17:34.259" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:33.633" endtime="20241230 08:17:34.259"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:34.259" endtime="20241230 08:17:34.262"/>
</kw>
<status status="PASS" starttime="20241230 08:17:33.629" endtime="20241230 08:17:34.262"/>
</iter>
<iter>
<var name="${INDEX}">81</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:34.889" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:34.262" endtime="20241230 08:17:34.889"/>
</kw>
<msg timestamp="20241230 08:17:34.889" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:34.262" endtime="20241230 08:17:34.889"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:34.889" endtime="20241230 08:17:34.892"/>
</kw>
<status status="PASS" starttime="20241230 08:17:34.262" endtime="20241230 08:17:34.892"/>
</iter>
<iter>
<var name="${INDEX}">82</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:35.526" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:34.892" endtime="20241230 08:17:35.526"/>
</kw>
<msg timestamp="20241230 08:17:35.526" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:34.892" endtime="20241230 08:17:35.526"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:35.526" endtime="20241230 08:17:35.526"/>
</kw>
<status status="PASS" starttime="20241230 08:17:34.892" endtime="20241230 08:17:35.526"/>
</iter>
<iter>
<var name="${INDEX}">83</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:36.165" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:35.526" endtime="20241230 08:17:36.165"/>
</kw>
<msg timestamp="20241230 08:17:36.165" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:35.526" endtime="20241230 08:17:36.165"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:36.165" endtime="20241230 08:17:36.168"/>
</kw>
<status status="PASS" starttime="20241230 08:17:35.526" endtime="20241230 08:17:36.168"/>
</iter>
<iter>
<var name="${INDEX}">84</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:36.811" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:36.168" endtime="20241230 08:17:36.811"/>
</kw>
<msg timestamp="20241230 08:17:36.811" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:36.168" endtime="20241230 08:17:36.811"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:36.811" endtime="20241230 08:17:36.811"/>
</kw>
<status status="PASS" starttime="20241230 08:17:36.168" endtime="20241230 08:17:36.811"/>
</iter>
<iter>
<var name="${INDEX}">85</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:37.457" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:36.815" endtime="20241230 08:17:37.457"/>
</kw>
<msg timestamp="20241230 08:17:37.457" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:36.815" endtime="20241230 08:17:37.457"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:37.457" endtime="20241230 08:17:37.457"/>
</kw>
<status status="PASS" starttime="20241230 08:17:36.815" endtime="20241230 08:17:37.457"/>
</iter>
<iter>
<var name="${INDEX}">86</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:38.088" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:37.457" endtime="20241230 08:17:38.088"/>
</kw>
<msg timestamp="20241230 08:17:38.088" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:37.457" endtime="20241230 08:17:38.088"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:38.088" endtime="20241230 08:17:38.088"/>
</kw>
<status status="PASS" starttime="20241230 08:17:37.457" endtime="20241230 08:17:38.088"/>
</iter>
<iter>
<var name="${INDEX}">87</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:38.717" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:38.091" endtime="20241230 08:17:38.717"/>
</kw>
<msg timestamp="20241230 08:17:38.717" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:38.091" endtime="20241230 08:17:38.717"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:38.717" endtime="20241230 08:17:38.717"/>
</kw>
<status status="PASS" starttime="20241230 08:17:38.088" endtime="20241230 08:17:38.717"/>
</iter>
<iter>
<var name="${INDEX}">88</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:39.347" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:38.721" endtime="20241230 08:17:39.347"/>
</kw>
<msg timestamp="20241230 08:17:39.347" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:38.721" endtime="20241230 08:17:39.347"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:39.351" endtime="20241230 08:17:39.351"/>
</kw>
<status status="PASS" starttime="20241230 08:17:38.717" endtime="20241230 08:17:39.351"/>
</iter>
<iter>
<var name="${INDEX}">89</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:39.994" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:39.351" endtime="20241230 08:17:39.994"/>
</kw>
<msg timestamp="20241230 08:17:39.994" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:39.351" endtime="20241230 08:17:39.994"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:39.994" endtime="20241230 08:17:39.994"/>
</kw>
<status status="PASS" starttime="20241230 08:17:39.351" endtime="20241230 08:17:39.994"/>
</iter>
<iter>
<var name="${INDEX}">90</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:40.624" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:39.997" endtime="20241230 08:17:40.624"/>
</kw>
<msg timestamp="20241230 08:17:40.624" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:39.997" endtime="20241230 08:17:40.624"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:40.624" endtime="20241230 08:17:40.626"/>
</kw>
<status status="PASS" starttime="20241230 08:17:39.994" endtime="20241230 08:17:40.626"/>
</iter>
<iter>
<var name="${INDEX}">91</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:41.270" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:40.626" endtime="20241230 08:17:41.270"/>
</kw>
<msg timestamp="20241230 08:17:41.270" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:40.626" endtime="20241230 08:17:41.270"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:41.270" endtime="20241230 08:17:41.270"/>
</kw>
<status status="PASS" starttime="20241230 08:17:40.626" endtime="20241230 08:17:41.270"/>
</iter>
<iter>
<var name="${INDEX}">92</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:41.916" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:41.273" endtime="20241230 08:17:41.916"/>
</kw>
<msg timestamp="20241230 08:17:41.916" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:41.273" endtime="20241230 08:17:41.916"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:41.916" endtime="20241230 08:17:41.918"/>
</kw>
<status status="PASS" starttime="20241230 08:17:41.273" endtime="20241230 08:17:41.918"/>
</iter>
<iter>
<var name="${INDEX}">93</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:42.546" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:41.918" endtime="20241230 08:17:42.546"/>
</kw>
<msg timestamp="20241230 08:17:42.546" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:41.918" endtime="20241230 08:17:42.546"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:42.549" endtime="20241230 08:17:42.549"/>
</kw>
<status status="PASS" starttime="20241230 08:17:41.918" endtime="20241230 08:17:42.549"/>
</iter>
<iter>
<var name="${INDEX}">94</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:43.176" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:42.549" endtime="20241230 08:17:43.176"/>
</kw>
<msg timestamp="20241230 08:17:43.176" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:42.549" endtime="20241230 08:17:43.176"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:43.178" endtime="20241230 08:17:43.178"/>
</kw>
<status status="PASS" starttime="20241230 08:17:42.549" endtime="20241230 08:17:43.178"/>
</iter>
<iter>
<var name="${INDEX}">95</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:43.788" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:43.178" endtime="20241230 08:17:43.788"/>
</kw>
<msg timestamp="20241230 08:17:43.788" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:43.178" endtime="20241230 08:17:43.788"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:43.788" endtime="20241230 08:17:43.788"/>
</kw>
<status status="PASS" starttime="20241230 08:17:43.178" endtime="20241230 08:17:43.788"/>
</iter>
<iter>
<var name="${INDEX}">96</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:44.476" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:43.788" endtime="20241230 08:17:44.476"/>
</kw>
<msg timestamp="20241230 08:17:44.476" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:43.788" endtime="20241230 08:17:44.476"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:44.476" endtime="20241230 08:17:44.476"/>
</kw>
<status status="PASS" starttime="20241230 08:17:43.788" endtime="20241230 08:17:44.476"/>
</iter>
<iter>
<var name="${INDEX}">97</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:45.114" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:44.483" endtime="20241230 08:17:45.114"/>
</kw>
<msg timestamp="20241230 08:17:45.114" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:44.476" endtime="20241230 08:17:45.114"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:45.114" endtime="20241230 08:17:45.118"/>
</kw>
<status status="PASS" starttime="20241230 08:17:44.476" endtime="20241230 08:17:45.118"/>
</iter>
<iter>
<var name="${INDEX}">98</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:45.719" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:45.118" endtime="20241230 08:17:45.719"/>
</kw>
<msg timestamp="20241230 08:17:45.719" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:45.118" endtime="20241230 08:17:45.719"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:45.719" endtime="20241230 08:17:45.719"/>
</kw>
<status status="PASS" starttime="20241230 08:17:45.118" endtime="20241230 08:17:45.719"/>
</iter>
<iter>
<var name="${INDEX}">99</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:46.349" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:45.719" endtime="20241230 08:17:46.349"/>
</kw>
<msg timestamp="20241230 08:17:46.349" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:45.719" endtime="20241230 08:17:46.349"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:46.349" endtime="20241230 08:17:46.349"/>
</kw>
<status status="PASS" starttime="20241230 08:17:45.719" endtime="20241230 08:17:46.349"/>
</iter>
<iter>
<var name="${INDEX}">100</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${Status}</var>
<arg>Wait Until Element Is Visible</arg>
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${Widget}</arg>
<arg>0.5</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<msg timestamp="20241230 08:17:46.994" level="FAIL">Element '//*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964']' not visible after 500 milliseconds.</msg>
<status status="FAIL" starttime="20241230 08:17:46.349" endtime="20241230 08:17:46.994"/>
</kw>
<msg timestamp="20241230 08:17:46.994" level="INFO">${Status} = False</msg>
<status status="PASS" starttime="20241230 08:17:46.349" endtime="20241230 08:17:46.994"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${Status}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:46.994" endtime="20241230 08:17:46.994"/>
</kw>
<status status="PASS" starttime="20241230 08:17:46.349" endtime="20241230 08:17:46.994"/>
</iter>
<status status="PASS" starttime="20241230 08:16:43.509" endtime="20241230 08:17:46.994"/>
</for>
<if>
<branch type="IF" condition="${LogFailures}">
<kw name="Capture Browser" library="utils.logger">
<doc>captures a screenshot and logs the console log of the dev tools</doc>
<msg timestamp="20241230 08:17:47.150" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/Test%20Suites.89%20Sanitychecks.Listsandstaticsegments/selenium-screenshot-1.png"&gt;&lt;img src="screenshots/Test%20Suites.89%20Sanitychecks.Listsandstaticsegments/selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20241230 08:17:47.150" level="INFO">[]</msg>
<status status="PASS" starttime="20241230 08:17:46.994" endtime="20241230 08:17:47.150"/>
</kw>
<kw name="print extra logging to report for debugging" library="general_functions">
<arg>${Widget}</arg>
<doc>Clear Error reporting for wait untill with for loop</doc>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${count}</var>
<arg>${Widget}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20241230 08:17:47.167" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241230 08:17:47.150" endtime="20241230 08:17:47.167"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 1">
<kw name="Log to report and console" library="general_functions">
<arg>WARNING: More than 1 (${count}) elements found when waiting for element with xpath ${Widget}, first element was not be visible</arg>
<doc>This keyword is used to combine the normal 'Log' (to report) + the 'Log to console' keywords in 1 keyword</doc>
<status status="NOT RUN" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</branch>
<branch type="ELSE IF" condition="${count} &lt; 1">
<kw name="Log to report and console" library="general_functions">
<arg>WARNING: Element with xpath ${Widget} was not found</arg>
<doc>This keyword is used to combine the normal 'Log' (to report) + the 'Log to console' keywords in 1 keyword</doc>
<kw name="Log" library="BuiltIn">
<arg>${LogText}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:17:47.167" level="INFO">WARNING: Element with xpath //*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964'] was not found</msg>
<status status="PASS" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${LogText}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</branch>
<branch type="ELSE">
<kw name="Log to report and console" library="general_functions">
<arg>WARNING: Element with xpath ${Widget} was found but not visible</arg>
<doc>This keyword is used to combine the normal 'Log' (to report) + the 'Log to console' keywords in 1 keyword</doc>
<status status="NOT RUN" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</branch>
<status status="PASS" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.167"/>
</if>
<status status="PASS" starttime="20241230 08:17:47.150" endtime="20241230 08:17:47.167"/>
</kw>
<status status="PASS" starttime="20241230 08:17:46.994" endtime="20241230 08:17:47.167"/>
</branch>
<status status="PASS" starttime="20241230 08:17:46.994" endtime="20241230 08:17:47.167"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>Wait Until With For Loop: Element ${Widget} was not found</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241230 08:17:47.182" level="FAIL">Wait Until With For Loop: Element //*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964'] was not found</msg>
<status status="FAIL" starttime="20241230 08:17:47.167" endtime="20241230 08:17:47.182"/>
</kw>
<status status="FAIL" starttime="20241230 08:16:43.509" endtime="20241230 08:17:47.183"/>
</kw>
<status status="FAIL" starttime="20241230 08:16:40.818" endtime="20241230 08:17:47.183"/>
</branch>
<branch type="ELSE">
<kw name="wait until search grid spinner appears" library="leftnavigationbar">
<doc>Use this keyword when searching for a journey. message, whatever on the main tabs
as soon as the search content is entered, this spinner will show until the search results are loaded</doc>
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</kw>
<kw name="Wait until grid search spinner dissapears" library="leftnavigationbar">
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>${Lists_grid}//*[text()='${ListName}']</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</kw>
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</branch>
<status status="FAIL" starttime="20241230 08:16:40.818" endtime="20241230 08:17:47.183"/>
</if>
<status status="FAIL" starttime="20241230 08:16:39.648" endtime="20241230 08:17:47.183"/>
</kw>
<kw name="Open Existing List" library="list_usecases">
<arg>${ListName}</arg>
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</kw>
<kw name="Wait Until With For Loop" library="general_functions">
<arg>//*[contains(@sg-qa-id,'list-top-action-bar')]</arg>
<doc>This keyword is used to wait on widget to be displayed, used arguments are widget and stop value:Maximum number of iterations
Use LogFailures=False when running with ignore error to avoid excessive logging and screenshots for something that is expected to fail</doc>
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</kw>
<status status="FAIL" starttime="20241230 08:16:39.648" endtime="20241230 08:17:47.183"/>
</kw>
<kw name="Compare Snapshot" library="utils.logger">
<arg>Lists Item</arg>
<arg>.10</arg>
<doc>captures a screenshot and logs the console log of the dev tools</doc>
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</kw>
<kw name="Check Userlist Default Fields" library="list_user">
<doc>After creation of a userlist, check if all required default fields are present</doc>
<status status="NOT RUN" starttime="20241230 08:17:47.183" endtime="20241230 08:17:47.183"/>
</kw>
<doc>sanity check to create a list</doc>
<tag>FOCUS</tag>
<tag>LISTS</tag>
<tag>OWNER-ADA</tag>
<tag>SANITY</tag>
<status status="FAIL" starttime="20241230 08:16:20.601" endtime="20241230 08:17:47.198">Wait Until With For Loop: Element //*[@sg-qa-id="lists-list-name"]/a[normalize-space()='SanityUserList1735542964'] was not found</status>
</test>
<kw name="Custom Suite Teardown" type="TEARDOWN">
<kw name="Log to report and console" library="general_functions">
<arg>Delete List and segment used</arg>
<doc>This keyword is used to combine the normal 'Log' (to report) + the 'Log to console' keywords in 1 keyword</doc>
<kw name="Log" library="BuiltIn">
<arg>${LogText}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:17:47.203" level="INFO">Delete List and segment used</msg>
<status status="PASS" starttime="20241230 08:17:47.203" endtime="20241230 08:17:47.203"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${LogText}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241230 08:17:47.203" endtime="20241230 08:17:47.203"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.199" endtime="20241230 08:17:47.203"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Delete Lists via API</arg>
<arg>SanityUserList${d}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Delete Lists via API" library="list_usecases">
<arg>SanityUserList${d}</arg>
<kw name="Check If List Exists via API" library="list_usecases">
<var>${bExists}</var>
<arg>${Listname}</arg>
<arg>${org}</arg>
<doc>Returns True if exists, false if not</doc>
<kw name="Create Session No Logging" library="general_functions">
<arg>Api_Get_ListEx</arg>
<arg>${URL}/api/</arg>
<arg>${headers}</arg>
<arg>max_retries=${Api_Max_Retries}</arg>
<arg>disable_warnings=${Api_Disable_Warnings}</arg>
<arg>timeout=${Api_Default_Timout}</arg>
<kw name="Set Log Level" library="BuiltIn">
<arg>NONE</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<status status="PASS" starttime="20241230 08:17:47.234" endtime="20241230 08:17:47.234"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{empty_headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" starttime="20241230 08:17:47.234" endtime="20241230 08:17:47.234"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${headers}</var>
<arg>${headers} == ${None}</arg>
<arg>${empty_headers}</arg>
<arg>${headers}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" starttime="20241230 08:17:47.234" endtime="20241230 08:17:47.234"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>create session</arg>
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" starttime="20241230 08:17:47.234" endtime="20241230 08:17:47.234"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.234" endtime="20241230 08:17:47.234"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20241230 08:17:47.234" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:17:47.234" endtime="20241230 08:17:47.234"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.234" endtime="20241230 08:17:47.246"/>
</kw>
<kw name="Get On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>Api_Get_ListEx</arg>
<arg>url=/organizations/${Organization}/lists?search=${ListName}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20241230 08:17:47.456" level="INFO">GET Request : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists?search=SanityUserList1735542964 
 path_url=/Portal/api/organizations/QA_automatic_testing/lists?search=SanityUserList1735542964 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'x-apikey': 'gfF37uycuwJLlau2AzHKMrxp3uHCOWxKvcus1pc09eU=:r7m4WxcsJJMzhHpYYzsUdT0PL194XBcc9DBGx3yJtG4=', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg timestamp="20241230 08:17:47.456" level="INFO">GET Response : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists?search=SanityUserList1735542964 
 status=200, reason=OK 
 headers={'Date': 'Mon, 30 Dec 2024 07:17:45 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'pragma': 'no-cache', 'expires': '-1', 'x-ratelimit-limit': '2500, 2500;w=60', 'x-ratelimit-remaining': '2499', 'x-ratelimit-reset': '60', 'x-activity-id': '23c6caf2-84c4-422b-a228-a12a9db52759', 'x-operation-id': 'a60afb9a47065a563724cc9c24dac5dc', 'request-context': 'appId=cid-v1:bf05a8da-00d7-4a65-a5de-c0345ac655c4', 'access-control-expose-headers': 'Request-Context', 'x-content-type-options': 'nosniff', 'strict-transport-security': 'max-age=31536000; includeSubdomains', 'referrer-policy': 'strict-origin', 'x-xss-protection': '1; mode=block', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8fa04080c91ccd20-LHR', 'Content-Encoding': 'gzip'} 
 body={
  "lists": [
    {
      "id": 895745,
      "type": "Userlist",
      "api_name": "SanityUserList1735542964",
      "name": "SanityUserList1735542964"
    }
  ]
} 
 </msg>
<msg timestamp="20241230 08:17:47.456" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20241230 08:17:47.251" endtime="20241230 08:17:47.456"/>
</kw>
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20241230 08:17:47.456" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20241230 08:17:47.456" endtime="20241230 08:17:47.456"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bContains}</var>
<arg>${resp.text}</arg>
<arg>"api_name": "${ListName}"</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:17:47.487" level="INFO">${bContains} = True</msg>
<status status="PASS" starttime="20241230 08:17:47.464" endtime="20241230 08:17:47.487"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${bContains}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:17:47.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:17:47.495" endtime="20241230 08:17:47.495"/>
</kw>
<msg timestamp="20241230 08:17:47.495" level="INFO">${bExists} = True</msg>
<status status="PASS" starttime="20241230 08:17:47.230" endtime="20241230 08:17:47.495"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${bExists}</arg>
<arg>Fail</arg>
<arg>Cannot delete ${Listname} as it was not found in organisation ${org}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:47.495" endtime="20241230 08:17:47.495"/>
</kw>
<kw name="Create Session No Logging" library="general_functions">
<arg>Api_Delete_List</arg>
<arg>${URL}/api/</arg>
<arg>${headers}</arg>
<arg>max_retries=${Api_Max_Retries}</arg>
<arg>disable_warnings=${Api_Disable_Warnings}</arg>
<arg>timeout=${Api_Default_Timout}</arg>
<kw name="Set Log Level" library="BuiltIn">
<arg>NONE</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<status status="PASS" starttime="20241230 08:17:47.495" endtime="20241230 08:17:47.495"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{empty_headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" starttime="20241230 08:17:47.495" endtime="20241230 08:17:47.495"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${headers}</var>
<arg>${headers} == ${None}</arg>
<arg>${empty_headers}</arg>
<arg>${headers}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" starttime="20241230 08:17:47.495" endtime="20241230 08:17:47.495"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>create session</arg>
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" starttime="20241230 08:17:47.505" endtime="20241230 08:17:47.506"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.495" endtime="20241230 08:17:47.506"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20241230 08:17:47.506" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:17:47.506" endtime="20241230 08:17:47.506"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.495" endtime="20241230 08:17:47.506"/>
</kw>
<kw name="Delete On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>Api_Delete_List</arg>
<arg>url=/organizations/${org}/lists/${Listname}?dropTable=true</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20241230 08:17:47.942" level="INFO">DELETE Request : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists/SanityUserList1735542964?dropTable=true 
 path_url=/Portal/api/organizations/QA_automatic_testing/lists/SanityUserList1735542964?dropTable=true 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'x-apikey': 'gfF37uycuwJLlau2AzHKMrxp3uHCOWxKvcus1pc09eU=:r7m4WxcsJJMzhHpYYzsUdT0PL194XBcc9DBGx3yJtG4=', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20241230 08:17:47.942" level="INFO">DELETE Response : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists/SanityUserList1735542964?dropTable=true 
 status=200, reason=OK 
 headers={'Date': 'Mon, 30 Dec 2024 07:17:46 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'pragma': 'no-cache', 'expires': '-1', 'x-ratelimit-limit': '2500, 2500;w=60', 'x-ratelimit-remaining': '2498', 'x-ratelimit-reset': '60', 'x-activity-id': 'ae661551-3e92-4f9b-8e26-6eedd3e9ba57', 'x-operation-id': 'df06ff80dbe8f2b3aef25589727ae292', 'request-context': 'appId=cid-v1:bf05a8da-00d7-4a65-a5de-c0345ac655c4', 'access-control-expose-headers': 'Request-Context', 'x-content-type-options': 'nosniff', 'strict-transport-security': 'max-age=31536000; includeSubdomains', 'referrer-policy': 'strict-origin', 'x-xss-protection': '1; mode=block', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8fa040824f284886-LHR', 'Content-Encoding': 'gzip'} 
 body={
  "errors": [],
  "result_code": "Succeeded",
  "message": "The list has been deleted successfully."
} 
 </msg>
<msg timestamp="20241230 08:17:47.942" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20241230 08:17:47.506" endtime="20241230 08:17:47.942"/>
</kw>
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20241230 08:17:47.942" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20241230 08:17:47.942" endtime="20241230 08:17:47.942"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bCodeOK}</var>
<arg>'${resp.status_code}'</arg>
<arg>'200'</arg>
<arg>No</arg>
<arg>No</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:17:47.973" level="INFO">${bCodeOK} = True</msg>
<status status="PASS" starttime="20241230 08:17:47.942" endtime="20241230 08:17:47.973"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bResponseNotFound}</var>
<arg>'${resp.status_code}'</arg>
<arg>'404'</arg>
<arg>No</arg>
<arg>No</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:17:48.004" level="INFO">${bResponseNotFound} = False</msg>
<status status="PASS" starttime="20241230 08:17:47.973" endtime="20241230 08:17:48.004"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bResponseErrorFound}</var>
<arg>${resp.text}</arg>
<arg>"error_code": "ERROR",</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:17:48.023" level="INFO">${bResponseErrorFound} = False</msg>
<status status="PASS" starttime="20241230 08:17:48.004" endtime="20241230 08:17:48.023"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bResponseUnexpectedError}</var>
<arg>'${resp.status_code}'</arg>
<arg>'500'</arg>
<arg>No</arg>
<arg>No</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:17:48.055" level="INFO">${bResponseUnexpectedError} = False</msg>
<status status="PASS" starttime="20241230 08:17:48.023" endtime="20241230 08:17:48.055"/>
</kw>
<kw name="Get correct String for logging to report" library="journey_usecases">
<var>${CurrentTestInfo}</var>
<doc>Generates correct string to print Test Suite and Test into report</doc>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${CurrentSuite}</var>
<arg>set variable</arg>
<arg>${SUITE_NAME}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${SUITE_NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:17:48.055" endtime="20241230 08:17:48.055"/>
</kw>
<msg timestamp="20241230 08:17:48.055" level="INFO">${status} = PASS</msg>
<msg timestamp="20241230 08:17:48.055" level="INFO">${CurrentSuite} = Test Suites.89 Sanitychecks.Listsandstaticsegments</msg>
<status status="PASS" starttime="20241230 08:17:48.055" endtime="20241230 08:17:48.055"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${CurrentSuite}</var>
<arg>'${status}'=='PASS'</arg>
<arg>${CurrentSuite}</arg>
<arg>SuiteNotFound</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:17:48.055" level="INFO">${CurrentSuite} = Test Suites.89 Sanitychecks.Listsandstaticsegments</msg>
<status status="PASS" starttime="20241230 08:17:48.055" endtime="20241230 08:17:48.055"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${CurrentTestName}</var>
<arg>set variable</arg>
<arg>${TEST_NAME}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${TEST_NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:17:48.119" level="FAIL">Variable '${TEST_NAME}' not found. Did you mean:
    ${PREV_TEST_NAME}</msg>
<status status="FAIL" starttime="20241230 08:17:48.071" endtime="20241230 08:17:48.119"/>
</kw>
<msg timestamp="20241230 08:17:48.119" level="INFO">${status} = FAIL</msg>
<msg timestamp="20241230 08:17:48.119" level="INFO">${CurrentTestName} = Variable '${TEST_NAME}' not found. Did you mean:
    ${PREV_TEST_NAME}</msg>
<status status="PASS" starttime="20241230 08:17:48.070" endtime="20241230 08:17:48.119"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${CurrentTestName}</var>
<arg>'${status}'=='PASS'</arg>
<arg>${CurrentTestName}</arg>
<arg>NotFound</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:17:48.119" level="INFO">${CurrentTestName} = NotFound</msg>
<status status="PASS" starttime="20241230 08:17:48.119" endtime="20241230 08:17:48.119"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bTestFound}</var>
<arg>'${status}'=='PASS'</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:17:48.119" level="INFO">${bTestFound} = False</msg>
<status status="PASS" starttime="20241230 08:17:48.119" endtime="20241230 08:17:48.119"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${PrevTestName}</var>
<arg>set variable</arg>
<arg>${PREV_TEST_NAME}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${PREV_TEST_NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241230 08:17:48.119" endtime="20241230 08:17:48.119"/>
</kw>
<msg timestamp="20241230 08:17:48.119" level="INFO">${status} = PASS</msg>
<msg timestamp="20241230 08:17:48.119" level="INFO">${PrevTestName} = Create_List</msg>
<status status="PASS" starttime="20241230 08:17:48.119" endtime="20241230 08:17:48.119"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${PrevTestName}</var>
<arg>'${status}'=='PASS' and not '${PrevTestName}'=='${EMPTY}'</arg>
<arg>${PrevTestName}</arg>
<arg>NotFound</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:17:48.136" level="INFO">${PrevTestName} = Create_List</msg>
<status status="PASS" starttime="20241230 08:17:48.119" endtime="20241230 08:17:48.136"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bPrevTestFound}</var>
<arg>'${status}'=='PASS' and not '${PrevTestName}'=='NotFound'</arg>
<arg>${True}</arg>
<arg>${False}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:17:48.151" level="INFO">${bPrevTestFound} = True</msg>
<status status="PASS" starttime="20241230 08:17:48.151" endtime="20241230 08:17:48.151"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${bSuiteSetupOrTeardown}</var>
<arg>${bTestFound}</arg>
<arg>${False}</arg>
<arg>${True}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20241230 08:17:48.152" level="INFO">${bSuiteSetupOrTeardown} = True</msg>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${returnString}</var>
<arg>Suite Setup or Teardown of ${CurrentSuite}:</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:17:48.152" level="INFO">${returnString} = Suite Setup or Teardown of Test Suites.89 Sanitychecks.Listsandstaticsegments:</msg>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bSuiteSetupOrTeardown} and not ${bPrevTestFound}</arg>
<arg>return from keyword</arg>
<arg>${returnString}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${returnString}</var>
<arg>Suite Setup or Teardown of ${CurrentSuite} - After Test ${PrevTestName}:</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241230 08:17:48.152" level="INFO">${returnString} = Suite Setup or Teardown of Test Suites.89 Sanitychecks.Listsandstaticsegments - After Test Create_List:</msg>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bSuiteSetupOrTeardown}</arg>
<arg>return from keyword</arg>
<arg>${returnString}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${returnString}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:17:48.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<msg timestamp="20241230 08:17:48.152" level="INFO">${CurrentTestInfo} = Suite Setup or Teardown of Test Suites.89 Sanitychecks.Listsandstaticsegments - After Test Create_List:</msg>
<status status="PASS" starttime="20241230 08:17:48.055" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Compare Strings" library="generalfunctions">
<var>${bIsCleanup}</var>
<arg>${CurrentTestInfo}</arg>
<arg>zzCleanupJourneys</arg>
<arg>Yes</arg>
<arg>Yes</arg>
<doc>Gdu: Compare 2 strings and return true if they match, return false if they don't match
Arguments:  boolean bIgnoreCase:    Yes means function will return true even if the cases don't match
            boolean bContains:  Yes means function will return true if stringOne contains stringTwo
            stringOne:  the first string that may or may not contain stringTwo
            stringTwo:  the string that can match (part of) stringOne</doc>
<msg timestamp="20241230 08:17:48.152" level="INFO">${bIsCleanup} = False</msg>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${bIsCleanup} and not ${bResponseNotFound} and not ${bCodeOK}</arg>
<arg>log</arg>
<arg>${CurrentTestInfo} Failed to delete ${Listname}, error code ${resp.status_code}, response '${resp.text}'</arg>
<arg>ERROR</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bResponseUnexpectedError} and ${iRetry} &gt; 0</arg>
<arg>sleep</arg>
<arg>2</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bResponseUnexpectedError} and ${iRetry} &gt; 0</arg>
<arg>run keyword and ignore error</arg>
<arg>Delete Lists via API</arg>
<arg>${Listname}</arg>
<arg>${org}</arg>
<arg>iRetry=${0}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.152"/>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<arg>${bResponseErrorFound}</arg>
<arg>Response text contains ERROR: ${resp.text}</arg>
<doc>Fails if the given condition is true.</doc>
<status status="PASS" starttime="20241230 08:17:48.152" endtime="20241230 08:17:48.200"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${bCodeOK}</arg>
<arg>Response code for Delete List was ${resp.status_code} and not expected 200</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20241230 08:17:48.200" endtime="20241230 08:17:48.217"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.207" endtime="20241230 08:17:48.217"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.203" endtime="20241230 08:17:48.217"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Delete Segment Via API</arg>
<arg>${SegmentListName}</arg>
<arg>${StaticSegmentCSV}_${d}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Delete Segment Via API" library="list_usecases">
<arg>${SegmentListName}</arg>
<arg>${StaticSegmentCSV}_${d}</arg>
<doc>Deletes specified segment of given list</doc>
<kw name="Create Session No Logging" library="general_functions">
<arg>Api_DelSegm</arg>
<arg>${URL}/api/</arg>
<arg>${headers}</arg>
<arg>max_retries=${Api_Max_Retries}</arg>
<arg>disable_warnings=${Api_Disable_Warnings}</arg>
<arg>timeout=${Api_Default_Timout}</arg>
<kw name="Set Log Level" library="BuiltIn">
<arg>NONE</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<status status="PASS" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.233"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{empty_headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.233"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${headers}</var>
<arg>${headers} == ${None}</arg>
<arg>${empty_headers}</arg>
<arg>${headers}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="PASS" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.233"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>create session</arg>
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>alias=${alias}</arg>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<arg>cookies=${cookies}</arg>
<arg>auth=${auth}</arg>
<arg>timeout=${timeout}</arg>
<arg>proxies=${proxies}</arg>
<arg>verify=${verify}</arg>
<arg>debug=${debug}</arg>
<arg>max_retries=${max_retries}</arg>
<arg>backoff_factor=${backoff_factor}</arg>
<arg>disable_warnings=${disable_warnings}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.233"/>
</kw>
<status status="PASS" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.233"/>
</kw>
<kw name="Set Log Level" library="BuiltIn">
<arg>INFO</arg>
<doc>Sets the log threshold to the specified level and returns the old level.</doc>
<msg timestamp="20241230 08:17:48.233" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.233"/>
</kw>
<status status="PASS" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.233"/>
</kw>
<kw name="Delete On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>Api_DelSegm</arg>
<arg>/organizations/${ORGANISATION}/lists/${ListAPIName}/segments/${SegmentNameAPI}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20241230 08:17:48.413" level="INFO">DELETE Request : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists/Automation_DONOTUSE_SegmentList/segments/Automation_ListStaticSeg_CSV_1735542964 
 path_url=/Portal/api/organizations/QA_automatic_testing/lists/Automation_DONOTUSE_SegmentList/segments/Automation_ListStaticSeg_CSV_1735542964 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive', 'x-apikey': 'gfF37uycuwJLlau2AzHKMrxp3uHCOWxKvcus1pc09eU=:r7m4WxcsJJMzhHpYYzsUdT0PL194XBcc9DBGx3yJtG4=', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20241230 08:17:48.413" level="INFO">DELETE Response : url=https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists/Automation_DONOTUSE_SegmentList/segments/Automation_ListStaticSeg_CSV_1735542964 
 status=400, reason=Bad Request 
 headers={'Date': 'Mon, 30 Dec 2024 07:17:46 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '216', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache', 'pragma': 'no-cache', 'expires': '-1', 'x-ratelimit-limit': '2500, 2500;w=60', 'x-ratelimit-remaining': '2497', 'x-ratelimit-reset': '60', 'x-activity-id': '2e5b0cd8-21c9-474e-a77a-783594de5a7d', 'x-operation-id': 'c41e3fce096e1764a3ce7d8e49d21c80', 'request-context': 'appId=cid-v1:bf05a8da-00d7-4a65-a5de-c0345ac655c4', 'access-control-expose-headers': 'Request-Context', 'x-content-type-options': 'nosniff', 'strict-transport-security': 'max-age=31536000; includeSubdomains', 'referrer-policy': 'strict-origin', 'x-xss-protection': '1; mode=block', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8fa04086f93aef49-LHR'} 
 body={
  "errors": [
    {
      "error_code": "LIST_VALIDATION_APISEGMENTNOTFOUND",
      "description": "Segment with specified API name does not exist"
    }
  ],
  "result_code": "Failed",
  "message": null
} 
 </msg>
<msg timestamp="20241230 08:17:48.413" level="INFO">${resp} = None</msg>
<msg timestamp="20241230 08:17:48.413" level="FAIL">HTTPError: 400 Client Error: Bad Request for url: https://test.slgnt.io/Portal/api/organizations/QA_automatic_testing/lists/Automation_DONOTUSE_SegmentList/segments/Automation_ListStaticSeg_CSV_1735542964</msg>
<status status="FAIL" starttime="20241230 08:17:48.233" endtime="20241230 08:17:48.425"/>
</kw>
<kw name="Delete All Sessions" library="RequestsLibrary">
<doc>Removes all the session objects</doc>
<msg timestamp="20241230 08:17:48.425" level="INFO">Deleting All Sessions</msg>
<status status="PASS" starttime="20241230 08:17:48.425" endtime="20241230 08:17:48.425"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resp.status_code}</arg>
<arg>200</arg>
<arg>Delete Segment Via API failed with ${resp.text}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20241230 08:17:48.445" level="FAIL">Resolving variable '${resp.status_code}' failed: AttributeError: 'NoneType' object has no attribute 'status_code'</msg>
<status status="FAIL" starttime="20241230 08:17:48.425" endtime="20241230 08:17:48.445"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${resp.text}</arg>
<arg>"error_code": "ERROR",</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<msg timestamp="20241230 08:17:48.478" level="FAIL">Resolving variable '${resp.text}' failed: AttributeError: 'NoneType' object has no attribute 'text'</msg>
<status status="FAIL" starttime="20241230 08:17:48.445" endtime="20241230 08:17:48.478"/>
</kw>
<status status="FAIL" starttime="20241230 08:17:48.232" endtime="20241230 08:17:48.478"/>
</kw>
<status status="PASS" starttime="20241230 08:17:48.217" endtime="20241230 08:17:48.478"/>
</kw>
<kw name="Close Browser and end TestCase" library="topheaderbar">
<doc>This keyword is used to close the browser at the end of the TC</doc>
<kw name="Set Selenium Speed" library="SeleniumLibrary">
<arg>0</arg>
<doc>Sets the delay that is waited after each Selenium command.</doc>
<status status="PASS" starttime="20241230 08:17:48.490" endtime="20241230 08:17:48.490"/>
</kw>
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20241230 08:17:48.490" endtime="20241230 08:17:53.126"/>
</kw>
<status status="PASS" starttime="20241230 08:17:48.478" endtime="20241230 08:17:53.126"/>
</kw>
<status status="PASS" starttime="20241230 08:17:47.199" endtime="20241230 08:17:53.126"/>
</kw>
<doc>Tests to validate that the content creation/publish working</doc>
<status status="FAIL" starttime="20241230 08:16:03.934" endtime="20241230 08:17:53.126"/>
</suite>
<status status="FAIL" starttime="20241230 08:16:03.931" endtime="20241230 08:17:53.126"/>
</suite>
<kw name="Execute on Suite Teardown" type="TEARDOWN">
<kw name="Run Keyword" library="BuiltIn">
<arg>Move Screenshots To Generate Final Report</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Move Screenshots To Generate Final Report">
<kw name="Evaluate" library="BuiltIn">
<var>${system}</var>
<arg>platform.system()</arg>
<arg>platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241230 08:17:53.141" level="INFO">${system} = Windows</msg>
<status status="PASS" starttime="20241230 08:17:53.141" endtime="20241230 08:17:53.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${system}' == 'Windows'</arg>
<arg>Move Screenshots Via Run Process</arg>
<arg>Powershell.exe</arg>
<arg>ELSE</arg>
<arg>Move Screenshots Via Run Process</arg>
<arg>pwsh</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Move Screenshots Via Run Process">
<arg>Powershell.exe</arg>
<kw name="Run Process" library="Process">
<var>${process_result}</var>
<arg>${process}</arg>
<arg>X:\\Tests\\Automation\\test_suites\\Rebase-Testoutput.ps1</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20241230 08:17:53.141" level="INFO">Starting process:
Powershell.exe X:\Tests\Automation\test_suites\Rebase-Testoutput.ps1</msg>
<msg timestamp="20241230 08:17:53.157" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20241230 08:17:54.078" level="INFO">Process completed.</msg>
<msg timestamp="20241230 08:17:54.078" level="INFO">${process_result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20241230 08:17:53.141" endtime="20241230 08:17:54.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${process_result.stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:17:54.115" level="INFO">=============================
= Screenshot move for Robot =
=============================
 This actions is needed due that Robot isn't taking the path into account where the original screenshot is stored.

 Example: 
   - Image is stored in
       .../Test.Automation/output/pabot_results/47/screenshots/Test Suites.08 Library.Files Sorting/selenium-screenshot-1.png
   - Intermediate report XML is stored in
       .../Test.Automation/output/pabot_results/47/output.xml
   - Intermediate report XML contains this reference to the image:
       screenshots/Test Suites.08 Library.Files Sorting/selenium-screenshot-1.png

 Due to this issue when Robot creates the final report. It will break all references to the screenshots.
 To fix this we need to move all images to the root folder.

WARNING:  !!! The screenshot folder setup is needed for the Automation run handled by K8S on Azure to merge multiple runs into one report. !!!


 Executing the move
 ------------------
 Get-ChildItem 'X:\Tests\Automation\output\pabot_results' -Recurse -Directory -Include '*screenshots' | Copy-Item -Recurse -Force -Destination 'X:\Tests\Automation\output'
 Get-ChildItem 'X:\Tests\Automation\output\pabot_results' -Recurse -Directory -Include '*rundata' | Copy-Item -Recurse -Force -Destination 'X:\Tests\Automation\output'</msg>
<status status="PASS" starttime="20241230 08:17:54.078" endtime="20241230 08:17:54.115"/>
</kw>
<status status="PASS" starttime="20241230 08:17:53.141" endtime="20241230 08:17:54.115"/>
</kw>
<status status="PASS" starttime="20241230 08:17:53.141" endtime="20241230 08:17:54.115"/>
</kw>
<status status="PASS" starttime="20241230 08:17:53.134" endtime="20241230 08:17:54.115"/>
</kw>
<status status="PASS" starttime="20241230 08:17:53.134" endtime="20241230 08:17:54.115"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Remove created users</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Remove created users">
<kw name="Run Keyword If" library="BuiltIn">
<arg>${DisableSQL}</arg>
<arg>log</arg>
<arg>Unable to remove users as SQL is Off</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log" library="BuiltIn">
<arg>Unable to remove users as SQL is Off</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241230 08:17:54.127" level="INFO">Unable to remove users as SQL is Off</msg>
<status status="PASS" starttime="20241230 08:17:54.127" endtime="20241230 08:17:54.131"/>
</kw>
<status status="PASS" starttime="20241230 08:17:54.127" endtime="20241230 08:17:54.131"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>not ${bUniqueUserCreation}</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20241230 08:17:54.131" endtime="20241230 08:17:54.131"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${bHardCodedUserUsage}</arg>
<arg>return from keyword</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>${True}</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20241230 08:17:54.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241230 08:17:54.131" endtime="20241230 08:17:54.131"/>
</kw>
<status status="PASS" starttime="20241230 08:17:54.131" endtime="20241230 08:17:54.131"/>
</kw>
<status status="PASS" starttime="20241230 08:17:54.115" endtime="20241230 08:17:54.131"/>
</kw>
<status status="PASS" starttime="20241230 08:17:54.115" endtime="20241230 08:17:54.131"/>
</kw>
<status status="PASS" starttime="20241230 08:17:53.134" endtime="20241230 08:17:54.131"/>
</kw>
<status status="FAIL" starttime="20241230 08:15:42.592" endtime="20241230 08:17:54.131"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">FOCUS</stat>
<stat pass="0" fail="1" skip="0">LISTS</stat>
<stat pass="0" fail="1" skip="0">OWNER-ADA</stat>
<stat pass="0" fail="1" skip="0">SANITY</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Test Suites">Test Suites</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="89 Sanitychecks">Test Suites.89 Sanitychecks</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Listsandstaticsegments">Test Suites.89 Sanitychecks.Listsandstaticsegments</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
